{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 47,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "b-mehta"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> Mathlib.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 3,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6S1TFQ",
              "body": "### PR summary [f1ac9d30fc](https://github.com/leanprover-community/mathlib4/pull/18747/commits/f1ac9d30fc7d8e401704b81f53b3e0070dc99c15)\n\nImport changes exceeding 2%\n\n| %      | File |\n| -      | -    |\n| +20.73% | `Mathlib.Topology.Algebra.InfiniteSum.Group` |\n| +16.28% | `Mathlib.Topology.Algebra.InfiniteSum.Order` |\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.Topology.Algebra.InfiniteSum.Group | 936 | 1130 | +194 (+20.73%) |\n| Mathlib.Topology.Algebra.InfiniteSum.Order | 983 | 1143 | +160 (+16.28%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n|<details><summary>23 files</summary> `Mathlib.MeasureTheory.Constructions.BorelSpace.Metric` `Mathlib.Probability.Kernel.Defs` `Mathlib.MeasureTheory.Integral.Marginal` `Mathlib.MeasureTheory.Group.Measure` `Mathlib.MeasureTheory.Category.MeasCat` `Mathlib.MeasureTheory.Constructions.Pi` `Mathlib.MeasureTheory.Constructions.BorelSpace.Metrizable` `Mathlib.MeasureTheory.Measure.GiryMonad` `Mathlib.Analysis.Normed.Group.Completeness` `Mathlib.MeasureTheory.Group.LIntegral` `Mathlib.Probability.Kernel.Basic` `Mathlib.MeasureTheory.Group.Convolution` `Mathlib.Dynamics.Ergodic.Action.Regular` `Mathlib.Probability.Independence.Basic` `Mathlib.Analysis.Normed.Group.Pointwise` `Mathlib.Probability.Independence.Kernel` `Mathlib.MeasureTheory.Group.Prod` `Mathlib.MeasureTheory.Measure.Prod` `Mathlib.MeasureTheory.Measure.WithDensity` `Mathlib.MeasureTheory.Function.SimpleFuncDense` `Mathlib.MeasureTheory.Measure.Haar.Basic` `Mathlib.MeasureTheory.Integral.Indicator` `Mathlib.MeasureTheory.Integral.Lebesgue`</details>|5|\n|<details><summary>73 files</summary> `Mathlib.Data.Real.Hyperreal` `Mathlib.Topology.MetricSpace.Thickening` `Mathlib.MeasureTheory.OuterMeasure.Caratheodory` `Mathlib.MeasureTheory.Constructions.BorelSpace.Basic` `Mathlib.Probability.ProbabilityMassFunction.Monad` `Mathlib.MeasureTheory.OuterMeasure.Induced` `Mathlib.MeasureTheory.Measure.Regular` `Mathlib.MeasureTheory.Group.MeasurableEquiv` `Mathlib.MeasureTheory.Order.Lattice` `Mathlib.Analysis.Hofer` `Mathlib.MeasureTheory.Measure.AEDisjoint` `Mathlib.MeasureTheory.Order.Group.Lattice` `Mathlib.MeasureTheory.OuterMeasure.OfFunction` `Mathlib.MeasureTheory.Covering.VitaliFamily` `Mathlib.MeasureTheory.Measure.ContinuousPreimage` `Mathlib.MeasureTheory.Group.Arithmetic` `Mathlib.Dynamics.Ergodic.MeasurePreserving` `Mathlib.MeasureTheory.Function.AEMeasurableOrder` `Mathlib.MeasureTheory.Decomposition.UnsignedHahn` `Mathlib.Dynamics.Ergodic.Conservative` `Mathlib.Analysis.BoxIntegral.Box.SubboxInduction` `Mathlib.MeasureTheory.Measure.NullMeasurable` `Mathlib.MeasureTheory.Measure.Content` `Mathlib.MeasureTheory.Decomposition.Exhaustion` `Mathlib.MeasureTheory.Measure.Sub` `Mathlib.Probability.ProbabilityMassFunction.Constructions` `Mathlib.MeasureTheory.Measure.Trim` `Mathlib.MeasureTheory.Decomposition.Jordan` `Mathlib.Probability.ProbabilityMassFunction.Binomial` `Mathlib.MeasureTheory.Group.Pointwise` `Mathlib.Probability.ConditionalProbability` `Mathlib.Data.Complex.FiniteDimensional` `Mathlib.MeasureTheory.Measure.VectorMeasure` `Mathlib.MeasureTheory.Measure.Count` `Mathlib.MeasureTheory.Group.AEStabilizer` `Mathlib.Probability.ProbabilityMassFunction.Basic` `Mathlib.Topology.MetricSpace.Contracting` `Mathlib.Data.Complex.Cardinality` `Mathlib.Topology.Baire.BaireMeasurable` `Mathlib.Analysis.BoxIntegral.Partition.Filter` `Mathlib.Dynamics.Ergodic.Ergodic` `Mathlib.MeasureTheory.Measure.OpenPos` `Mathlib.MeasureTheory.Measure.Dirac` `Mathlib.MeasureTheory.Decomposition.SignedHahn` `Mathlib.Topology.MetricSpace.PiNat` `Mathlib.MeasureTheory.Measure.Stieltjes` `Mathlib.Topology.MetricSpace.HausdorffDistance` `Mathlib.Analysis.BoxIntegral.Partition.SubboxInduction` `Mathlib.Topology.MetricSpace.CantorScheme` `Mathlib.MeasureTheory.Covering.Vitali` `Mathlib.Dynamics.Circle.RotationNumber.TranslationNumber` `Mathlib.Data.Real.Cardinality` `Mathlib.MeasureTheory.Measure.Restrict` `Mathlib.MeasureTheory.Measure.MutuallySingular` `Mathlib.MeasureTheory.Measure.Typeclasses` `Mathlib.MeasureTheory.Measure.AEMeasurable` `Mathlib.Dynamics.Ergodic.Action.Basic` `Mathlib.MeasureTheory.Constructions.Projective` `Mathlib.MeasureTheory.Measure.MeasureSpace` `Mathlib.MeasureTheory.Measure.MeasureSpaceDef` `Mathlib.MeasureTheory.Group.Action` `Mathlib.MeasureTheory.Function.AEMeasurableSequence` `Mathlib.MeasureTheory.Constructions.BorelSpace.Real` `Mathlib.MeasureTheory.Constructions.BorelSpace.Order` `Mathlib.Topology.MetricSpace.Closeds` `Mathlib.Analysis.SpecificLimits.Basic` `Mathlib.MeasureTheory.Function.EssSup` `Mathlib.MeasureTheory.Function.Floor` `Mathlib.Probability.UniformOn` `Mathlib.Topology.Baire.CompleteMetrizable` `Mathlib.MeasureTheory.Function.SimpleFunc` `Mathlib.MeasureTheory.Group.Defs` `Mathlib.Topology.Instances.RatLemmas`</details>|9|\n|<details><summary>8 files</summary> `Mathlib.Data.Real.GoldenRatio` `Mathlib.Analysis.SpecialFunctions.Trigonometric.Chebyshev` `Mathlib.NumberTheory.Zsqrtd.ToReal` `Mathlib.NumberTheory.Rayleigh` `Mathlib.Data.Real.Irrational` `Mathlib.NumberTheory.Pell` `Mathlib.Topology.Instances.Irrational` `Mathlib.NumberTheory.DiophantineApproximation`</details>|11|\n|<details><summary>3 files</summary> `Mathlib.Analysis.Normed.Group.InfiniteSum` `Mathlib.Analysis.Normed.Group.Lemmas` `Mathlib.Analysis.NormedSpace.FunctionSeries`</details>|28|\n| `Mathlib.Data.Real.IsNonarchimedean` `Mathlib.Analysis.Normed.Group.Ultra`|30|\n|<details><summary>11 files</summary> `Mathlib.Topology.Algebra.InfiniteSum.ENNReal` `Mathlib.Order.Filter.ENNReal` `Mathlib.Topology.Instances.EReal` `Mathlib.MeasureTheory.OuterMeasure.Defs` `Mathlib.MeasureTheory.OuterMeasure.Operations` `Mathlib.MeasureTheory.OuterMeasure.Basic` `Mathlib.Topology.Algebra.InfiniteSum.Real` `Mathlib.Topology.Semicontinuous` `Mathlib.MeasureTheory.OuterMeasure.AE` `Mathlib.Topology.Instances.ENNReal` `Mathlib.MeasureTheory.OuterMeasure.BorelCantelli`</details>|78|\n|<details><summary>5 files</summary> `Mathlib.Data.Complex.Exponential` `Mathlib.AlgebraicTopology.SingularSet` `Mathlib.AlgebraicTopology.TopologicalSimplex` `Mathlib.Algebra.Star.CHSH` `Mathlib.Analysis.SpecialFunctions.Log.ERealExp`</details>|80|\n|<details><summary>5 files</summary> `Mathlib.Data.Real.Sqrt` `Mathlib.Data.Real.StarOrdered` `Mathlib.Data.Complex.Order` `Mathlib.Data.Complex.Abs` `Mathlib.Topology.Instances.NNReal`</details>|81|\n| `Mathlib.Topology.Algebra.InfiniteSum.Module`|103|\n| `Mathlib.Topology.Algebra.InfiniteSum.Nonarchimedean`|154|\n| `Mathlib.Topology.Algebra.InfiniteSum.Order`|160|\n| `Mathlib.Topology.Algebra.InfiniteSum.Ring`|172|\n| `Mathlib.Topology.Algebra.InfiniteSum.Constructions`|188|\n| `Mathlib.Topology.Algebra.InfiniteSum.GroupCompletion`|189|\n| `Mathlib.Topology.Algebra.InfiniteSum.Group` `Mathlib.Topology.Algebra.InfiniteSum.NatInt`|194|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ HasProd.abs`\n`+ HasProd.norm`\n`+ Multipliable.norm`\n`+ hasProd_abs`\n`+ norm_tprod`\n`++ abs_tprod`\n`++ multipliable_abs`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "createdAt": "2024-11-07T23:50:00Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6S3AkC",
              "body": "Might it make more sense to define a more general `HasProd.norm` for arbitrary `NormedDivisionRing`s (which would work e.g. for the reals or p-adics too), and then derive the result for C from that via `Complex.norm_eq_abs`?",
              "createdAt": "2024-11-08T06:42:15Z",
              "author": {
                "login": "loefflerd"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6S97db",
              "body": "I have now done this. It requires `NormedField` rather than `NormedDivisionRing`, as that's the generality `norm_prod` is proved in. It also means we have quite a painful new import.\r\nI also added a version for `abs`, also matching the generality `abs_prod` is proved in.",
              "createdAt": "2024-11-08T20:36:09Z",
              "author": {
                "login": "b-mehta"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "485de71d9c7161676aeddc7e663751412a496a2b",
                "additions": 19,
                "deletions": 0,
                "committedDate": "2024-11-07T23:41:56Z",
                "author": {
                  "name": "Bhavik Mehta",
                  "email": "bhavikmehta8@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnE-d1A",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11733289069/job/32687234516"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnE-eDg",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11733289071/job/32687234574"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnE-eTA",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11733289072/job/32687234636"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnEzGYA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11733227719/job/32687048288"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnEzHqw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11733227725/job/32687048619"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnE-fOA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11733289089/job/32687234872"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnEzG8A",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11733227719/job/32687048432"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnEzHDQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11733227725/job/32687048461"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnE-eig",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11733289089/job/32687234698"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnEzHsA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11733227719/job/32687048624"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnEzGbQ",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11733227725/job/32687048301"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnEzIlQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11733227719/job/32687048853"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnFLvYA",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11733227725/job/32687452000"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnE-oYw",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/32687237219"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnE_REw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=18747&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "c11273a34c5880f43f652a0289109291ab4aec5f",
                "additions": 41,
                "deletions": 9,
                "committedDate": "2024-11-08T20:33:02Z",
                "author": {
                  "name": "Bhavik Mehta",
                  "email": "bhavikmehta8@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnyUzIg",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11749155125/job/32734786338"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnyUzEA",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11749155124/job/32734786320"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnyUxzQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11749154753/job/32734785997"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnyUvrg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11749154754/job/32734785454"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnyUy-w",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11749155129/job/32734786299"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnyUxlg",
                        "name": "Lint style",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11749154754/job/32734785942"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnyUw1A",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11749154753/job/32734785748"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnyU0Lg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11749155129/job/32734786606"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnyUwtg",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11749154754/job/32734785718"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnyUvog",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11749154753/job/32734785442"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnyXcaA",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11749154754/job/32734829672"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnyUzTA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11749154753/job/32734786380"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnyVE2w",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/32734790875"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnyWDSg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=18747&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "f1ac9d30fc7d8e401704b81f53b3e0070dc99c15",
                "additions": 0,
                "deletions": 4,
                "committedDate": "2024-11-08T20:33:51Z",
                "author": {
                  "name": "Bhavik Mehta",
                  "email": "bhavikmehta8@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnyWq1g",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11749164963/job/32734816982"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnyWqxA",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11749164961/job/32734816964"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnyWnGw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11749164571/job/32734816027"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnyWoAg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11749164561/job/32734816258"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnyWr8g",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11749164956/job/32734817266"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnyWoGg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11749164571/job/32734816282"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnyWnDg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11749164561/job/32734816014"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnyWq-Q",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11749164956/job/32734817017"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnyWpDQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11749164571/job/32734816525"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnyWo3A",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11749164561/job/32734816476"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnyWqBg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11749164571/job/32734816774"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHny-9fw",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11749164561/job/32735477119"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnyW65g",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/32734821094"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHnyX1_w",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=18747&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-11-07T23:49:16Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Analysis/Complex/Basic.lean",
              "additions": 15,
              "deletions": 0
            },
            {
              "path": "Mathlib/Topology/Algebra/InfiniteSum/Group.lean",
              "additions": 17,
              "deletions": 0
            },
            {
              "path": "Mathlib/Topology/Algebra/InfiniteSum/Order.lean",
              "additions": 15,
              "deletions": 0
            }
          ]
        },
        "headRefName": "tprod-abs",
        "headRefOid": "f1ac9d30fc7d8e401704b81f53b3e0070dc99c15",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c6BQGy1",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJeVg",
              "color": "33DBEC",
              "name": "t-analysis"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABwbfWPw",
              "color": "B60205",
              "name": "large-import"
            }
          ]
        },
        "latestReviews": {
          "nodes": []
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 18747,
        "potentialMergeCommit": {
          "oid": "c97d8e6d0e892bf1cc2a2bf8c6ba27187ad9833c"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": [
            {
              "requestedReviewer": {
                "id": "MDQ6VXNlcjE4ODgxMw==",
                "login": "urkud"
              }
            }
          ]
        },
        "reviews": {
          "nodes": []
        },
        "reviewThreads": {
          "nodes": []
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjI5OTU5MjI2",
              "login": "b-mehta"
            },
            {
              "id": "MDQ6VXNlcjM0Mzk2ODg=",
              "login": "loefflerd"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHnyWq1g",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11749164963/job/32734816982"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHnyWqxA",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11749164961/job/32734816964"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHnyWnGw",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11749164571/job/32734816027"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHnyWoAg",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11749164561/job/32734816258"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHnyWr8g",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11749164956/job/32734817266"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHnyWoGg",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11749164571/job/32734816282"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHnyWnDg",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11749164561/job/32734816014"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHnyWq-Q",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11749164956/job/32734817017"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHnyWpDQ",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11749164571/job/32734816525"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHnyWo3A",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11749164561/job/32734816476"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHnyWqBg",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11749164571/job/32734816774"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHny-9fw",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11749164561/job/32735477119"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHnyW65g",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/32734821094"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHnyX1_w",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=18747&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat(InfiniteSum): infinite product of absolute value",
        "updatedAt": "2024-11-08T20:36:32Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/18747",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6dgO_EzwAAAAOJ08ve",
              "createdAt": "2024-11-07T23:49:16Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABJc1VKA",
                "name": "easy"
              }
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6dgO_EzwAAAAOJ08vm",
              "createdAt": "2024-11-07T23:49:16Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjE4ODgxMw==",
                "login": "urkud"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6S1TFQ",
              "createdAt": "2024-11-07T23:50:00Z",
              "body": "### PR summary [f1ac9d30fc](https://github.com/leanprover-community/mathlib4/pull/18747/commits/f1ac9d30fc7d8e401704b81f53b3e0070dc99c15)\n\nImport changes exceeding 2%\n\n| %      | File |\n| -      | -    |\n| +20.73% | `Mathlib.Topology.Algebra.InfiniteSum.Group` |\n| +16.28% | `Mathlib.Topology.Algebra.InfiniteSum.Order` |\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.Topology.Algebra.InfiniteSum.Group | 936 | 1130 | +194 (+20.73%) |\n| Mathlib.Topology.Algebra.InfiniteSum.Order | 983 | 1143 | +160 (+16.28%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n|<details><summary>23 files</summary> `Mathlib.MeasureTheory.Constructions.BorelSpace.Metric` `Mathlib.Probability.Kernel.Defs` `Mathlib.MeasureTheory.Integral.Marginal` `Mathlib.MeasureTheory.Group.Measure` `Mathlib.MeasureTheory.Category.MeasCat` `Mathlib.MeasureTheory.Constructions.Pi` `Mathlib.MeasureTheory.Constructions.BorelSpace.Metrizable` `Mathlib.MeasureTheory.Measure.GiryMonad` `Mathlib.Analysis.Normed.Group.Completeness` `Mathlib.MeasureTheory.Group.LIntegral` `Mathlib.Probability.Kernel.Basic` `Mathlib.MeasureTheory.Group.Convolution` `Mathlib.Dynamics.Ergodic.Action.Regular` `Mathlib.Probability.Independence.Basic` `Mathlib.Analysis.Normed.Group.Pointwise` `Mathlib.Probability.Independence.Kernel` `Mathlib.MeasureTheory.Group.Prod` `Mathlib.MeasureTheory.Measure.Prod` `Mathlib.MeasureTheory.Measure.WithDensity` `Mathlib.MeasureTheory.Function.SimpleFuncDense` `Mathlib.MeasureTheory.Measure.Haar.Basic` `Mathlib.MeasureTheory.Integral.Indicator` `Mathlib.MeasureTheory.Integral.Lebesgue`</details>|5|\n|<details><summary>73 files</summary> `Mathlib.Data.Real.Hyperreal` `Mathlib.Topology.MetricSpace.Thickening` `Mathlib.MeasureTheory.OuterMeasure.Caratheodory` `Mathlib.MeasureTheory.Constructions.BorelSpace.Basic` `Mathlib.Probability.ProbabilityMassFunction.Monad` `Mathlib.MeasureTheory.OuterMeasure.Induced` `Mathlib.MeasureTheory.Measure.Regular` `Mathlib.MeasureTheory.Group.MeasurableEquiv` `Mathlib.MeasureTheory.Order.Lattice` `Mathlib.Analysis.Hofer` `Mathlib.MeasureTheory.Measure.AEDisjoint` `Mathlib.MeasureTheory.Order.Group.Lattice` `Mathlib.MeasureTheory.OuterMeasure.OfFunction` `Mathlib.MeasureTheory.Covering.VitaliFamily` `Mathlib.MeasureTheory.Measure.ContinuousPreimage` `Mathlib.MeasureTheory.Group.Arithmetic` `Mathlib.Dynamics.Ergodic.MeasurePreserving` `Mathlib.MeasureTheory.Function.AEMeasurableOrder` `Mathlib.MeasureTheory.Decomposition.UnsignedHahn` `Mathlib.Dynamics.Ergodic.Conservative` `Mathlib.Analysis.BoxIntegral.Box.SubboxInduction` `Mathlib.MeasureTheory.Measure.NullMeasurable` `Mathlib.MeasureTheory.Measure.Content` `Mathlib.MeasureTheory.Decomposition.Exhaustion` `Mathlib.MeasureTheory.Measure.Sub` `Mathlib.Probability.ProbabilityMassFunction.Constructions` `Mathlib.MeasureTheory.Measure.Trim` `Mathlib.MeasureTheory.Decomposition.Jordan` `Mathlib.Probability.ProbabilityMassFunction.Binomial` `Mathlib.MeasureTheory.Group.Pointwise` `Mathlib.Probability.ConditionalProbability` `Mathlib.Data.Complex.FiniteDimensional` `Mathlib.MeasureTheory.Measure.VectorMeasure` `Mathlib.MeasureTheory.Measure.Count` `Mathlib.MeasureTheory.Group.AEStabilizer` `Mathlib.Probability.ProbabilityMassFunction.Basic` `Mathlib.Topology.MetricSpace.Contracting` `Mathlib.Data.Complex.Cardinality` `Mathlib.Topology.Baire.BaireMeasurable` `Mathlib.Analysis.BoxIntegral.Partition.Filter` `Mathlib.Dynamics.Ergodic.Ergodic` `Mathlib.MeasureTheory.Measure.OpenPos` `Mathlib.MeasureTheory.Measure.Dirac` `Mathlib.MeasureTheory.Decomposition.SignedHahn` `Mathlib.Topology.MetricSpace.PiNat` `Mathlib.MeasureTheory.Measure.Stieltjes` `Mathlib.Topology.MetricSpace.HausdorffDistance` `Mathlib.Analysis.BoxIntegral.Partition.SubboxInduction` `Mathlib.Topology.MetricSpace.CantorScheme` `Mathlib.MeasureTheory.Covering.Vitali` `Mathlib.Dynamics.Circle.RotationNumber.TranslationNumber` `Mathlib.Data.Real.Cardinality` `Mathlib.MeasureTheory.Measure.Restrict` `Mathlib.MeasureTheory.Measure.MutuallySingular` `Mathlib.MeasureTheory.Measure.Typeclasses` `Mathlib.MeasureTheory.Measure.AEMeasurable` `Mathlib.Dynamics.Ergodic.Action.Basic` `Mathlib.MeasureTheory.Constructions.Projective` `Mathlib.MeasureTheory.Measure.MeasureSpace` `Mathlib.MeasureTheory.Measure.MeasureSpaceDef` `Mathlib.MeasureTheory.Group.Action` `Mathlib.MeasureTheory.Function.AEMeasurableSequence` `Mathlib.MeasureTheory.Constructions.BorelSpace.Real` `Mathlib.MeasureTheory.Constructions.BorelSpace.Order` `Mathlib.Topology.MetricSpace.Closeds` `Mathlib.Analysis.SpecificLimits.Basic` `Mathlib.MeasureTheory.Function.EssSup` `Mathlib.MeasureTheory.Function.Floor` `Mathlib.Probability.UniformOn` `Mathlib.Topology.Baire.CompleteMetrizable` `Mathlib.MeasureTheory.Function.SimpleFunc` `Mathlib.MeasureTheory.Group.Defs` `Mathlib.Topology.Instances.RatLemmas`</details>|9|\n|<details><summary>8 files</summary> `Mathlib.Data.Real.GoldenRatio` `Mathlib.Analysis.SpecialFunctions.Trigonometric.Chebyshev` `Mathlib.NumberTheory.Zsqrtd.ToReal` `Mathlib.NumberTheory.Rayleigh` `Mathlib.Data.Real.Irrational` `Mathlib.NumberTheory.Pell` `Mathlib.Topology.Instances.Irrational` `Mathlib.NumberTheory.DiophantineApproximation`</details>|11|\n|<details><summary>3 files</summary> `Mathlib.Analysis.Normed.Group.InfiniteSum` `Mathlib.Analysis.Normed.Group.Lemmas` `Mathlib.Analysis.NormedSpace.FunctionSeries`</details>|28|\n| `Mathlib.Data.Real.IsNonarchimedean` `Mathlib.Analysis.Normed.Group.Ultra`|30|\n|<details><summary>11 files</summary> `Mathlib.Topology.Algebra.InfiniteSum.ENNReal` `Mathlib.Order.Filter.ENNReal` `Mathlib.Topology.Instances.EReal` `Mathlib.MeasureTheory.OuterMeasure.Defs` `Mathlib.MeasureTheory.OuterMeasure.Operations` `Mathlib.MeasureTheory.OuterMeasure.Basic` `Mathlib.Topology.Algebra.InfiniteSum.Real` `Mathlib.Topology.Semicontinuous` `Mathlib.MeasureTheory.OuterMeasure.AE` `Mathlib.Topology.Instances.ENNReal` `Mathlib.MeasureTheory.OuterMeasure.BorelCantelli`</details>|78|\n|<details><summary>5 files</summary> `Mathlib.Data.Complex.Exponential` `Mathlib.AlgebraicTopology.SingularSet` `Mathlib.AlgebraicTopology.TopologicalSimplex` `Mathlib.Algebra.Star.CHSH` `Mathlib.Analysis.SpecialFunctions.Log.ERealExp`</details>|80|\n|<details><summary>5 files</summary> `Mathlib.Data.Real.Sqrt` `Mathlib.Data.Real.StarOrdered` `Mathlib.Data.Complex.Order` `Mathlib.Data.Complex.Abs` `Mathlib.Topology.Instances.NNReal`</details>|81|\n| `Mathlib.Topology.Algebra.InfiniteSum.Module`|103|\n| `Mathlib.Topology.Algebra.InfiniteSum.Nonarchimedean`|154|\n| `Mathlib.Topology.Algebra.InfiniteSum.Order`|160|\n| `Mathlib.Topology.Algebra.InfiniteSum.Ring`|172|\n| `Mathlib.Topology.Algebra.InfiniteSum.Constructions`|188|\n| `Mathlib.Topology.Algebra.InfiniteSum.GroupCompletion`|189|\n| `Mathlib.Topology.Algebra.InfiniteSum.Group` `Mathlib.Topology.Algebra.InfiniteSum.NatInt`|194|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ HasProd.abs`\n`+ HasProd.norm`\n`+ Multipliable.norm`\n`+ hasProd_abs`\n`+ norm_tprod`\n`++ abs_tprod`\n`++ multipliable_abs`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6dgO_EzwAAAAOJ0-Lb",
              "createdAt": "2024-11-07T23:50:04Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJeVg",
                "name": "t-analysis"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6S3AkC",
              "createdAt": "2024-11-08T06:42:15Z",
              "body": "Might it make more sense to define a more general `HasProd.norm` for arbitrary `NormedDivisionRing`s (which would work e.g. for the reals or p-adics too), and then derive the result for C from that via `Complex.norm_eq_abs`?",
              "author": {
                "login": "loefflerd"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6dgO_EzwAAAAOKQScP",
              "createdAt": "2024-11-08T06:42:51Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABJc1VKA",
                "name": "easy"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6dgO_EzwAAAAOKQScT",
              "createdAt": "2024-11-08T06:42:51Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6dgO_EzwAAAAOLi-Je",
              "createdAt": "2024-11-08T20:33:59Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABwbfWPw",
                "name": "large-import"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6S97db",
              "createdAt": "2024-11-08T20:36:09Z",
              "body": "I have now done this. It requires `NormedField` rather than `NormedDivisionRing`, as that's the generality `norm_prod` is proved in. It also means we have quite a painful new import.\r\nI also added a version for `abs`, also matching the generality `abs_prod` is proved in.",
              "author": {
                "login": "b-mehta"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6dgO_EzwAAAAOLjMeJ",
              "createdAt": "2024-11-08T20:36:15Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            }
          ]
        }
      }
    }
  }
}
