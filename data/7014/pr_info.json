{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 135,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "kim-em"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "I would like to move this up to Std, but it required a substantial rewrite, and I'm still not completely satisfied, so I'm PRing my revisions so far to Mathlib first.\r\n\r\n@siddhartha-gadgil, could you have a look? The functions `getExplicitRelArg?` and `getExplicitRelArgCore` seem strange to me, and I haven't tried replacing these yet. Would you be able to document them and/or clean them up?\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n-->\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 4,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c5l7Z5J",
              "body": "> I would like to move this up to Std, but it required a substantial rewrite, and I'm still not completely satisfied, so I'm PRing my revisions so far to Mathlib first.\r\n> \r\n> @siddhartha-gadgil, could you have a look? The functions `getExplicitRelArg?` and `getExplicitRelArgCore` seem strange to me, and I haven't tried replacing these yet. Would you be able to document them and/or clean them up?\r\n> \r\n> [![Open in Gitpod](https://camo.githubusercontent.com/76e60919474807718793857d8eb615e7a50b18b04050577e5a35c19421f260a3/68747470733a2f2f676974706f642e696f2f627574746f6e2f6f70656e2d696e2d676974706f642e737667)](https://gitpod.io/from-referrer/)\r\n\r\nSure. I will look at these.",
              "createdAt": "2023-09-07T12:31:32Z",
              "author": {
                "login": "siddhartha-gadgil"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5l-_eN",
              "body": "> I would like to move this up to Std, but it required a substantial rewrite, and I'm still not completely satisfied, so I'm PRing my revisions so far to Mathlib first.\r\n> \r\n> @siddhartha-gadgil, could you have a look? The functions `getExplicitRelArg?` and `getExplicitRelArgCore` seem strange to me, and I haven't tried replacing these yet. Would you be able to document them and/or clean them up?\r\n> \r\n> [![Open in Gitpod](https://camo.githubusercontent.com/76e60919474807718793857d8eb615e7a50b18b04050577e5a35c19421f260a3/68747470733a2f2f676974706f642e696f2f627574746f6e2f6f70656e2d696e2d676974706f642e737667)](https://gitpod.io/from-referrer/)\r\n\r\nThese were my hacky substitute for looking up the binder information to see if the application was explicit (due to what I knew when I wrote this code). I will clean up and have enough test cases over the next couple of days. ",
              "createdAt": "2023-09-08T03:05:28Z",
              "author": {
                "login": "siddhartha-gadgil"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5l_DGM",
              "body": "Thanks!",
              "createdAt": "2023-09-08T03:32:35Z",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5mF2h5",
              "body": "@semorrison I took a pass at the tactic locally, and I put it at [this gist](https://gist.github.com/kmill/fe37a55ff0ce4e58debab65061040da3). I haven't tested it against mathlib, but the test file passes at least.\r\n\r\nThe main changes:\r\n1. make the `rel?` function use `FunInfo` data to figure out which are the explicit arguments and how many implicit arguments to include immediately after the relation\r\n2. make the `@[trans]` attribute use this function, and add more consistency checks\r\n3. fix `transCore` to use syntheticOpaque instead of synthetic metavariables; also fix how it handles metavariables in y\r\n4. fix the way the `trans` tactic handles the metavariables that `elabTermWithHoles` returns, rather than discarding them",
              "createdAt": "2023-09-10T13:08:22Z",
              "author": {
                "login": "kmill"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5mGb7_",
              "body": "@kmill thanks!\r\n\r\nI tried out your refactor.\r\n\r\nFirst, `rel?'` seems to break all across Mathlib. Haven't investigated why, but I put a simple test case in the test file.\r\n\r\nSecond, your refactor doesn't cope with\r\n```\r\n@[trans]\r\ntheorem EqOn.trans (h₁ : EqOn f₁ f₂ s) (h₂ : EqOn f₂ f₃ s) : EqOn f₁ f₃ s := fun _ hx =>\r\n  (h₁ hx).trans (h₂ hx)\r\n```\r\n\r\nI think it's actually pretty reasonable to not cope with this! We might instead just reorder the arguments of `Set.EqOn` (most uses are via dot notation in any case). What do you think? (Asked about this on [zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Reordering.20arguments.20of.20.60Set.2EEqOn.60/near/390196612).)\r\n",
              "createdAt": "2023-09-10T23:00:21Z",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5mGdGV",
              "body": "@semorrison Oof, I didn't expect to see a relation like that (and I guess it's an example of something that `@[trans]` accepted but would never have worked with the `trans` tactic itself). Reordering arguments seems reasonable to me.\r\n\r\nAnother thing, which would take more development, would be to create a system (an attribute maybe?) to declare relations so that you can specify which argument indices correspond to the LHS and RHS. I think Lean 3 sort of maintained such a database automatically, but I don't remember being able to configure it in any way. (I think `@[trans]` lemmas were also really restrictive and had to be in the form `lem ... x y z (h1 : R x y) (h2 : R y z) : R x z`, at least to work with `calc`, but the `transitivity` tactic accidentally worked more generally.)",
              "createdAt": "2023-09-10T23:18:07Z",
              "author": {
                "login": "kmill"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c5ngYjy",
              "body": "@kmill, can I just delete `rel?'`? It was failing all over for me.",
              "createdAt": "2023-09-27T01:45:27Z",
              "author": {
                "login": "kim-em"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "00d599e4a293dfe7e0ce9c50e11181b2593c7730",
                "additions": 26,
                "deletions": 45,
                "committedDate": "2023-09-07T09:15:42Z",
                "author": {
                  "name": "Scott Morrison",
                  "email": "scott.morrison@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "1e5bbf1d3a8afe6e6c47903e6ac62533d09b40d8",
                "additions": 23,
                "deletions": 32,
                "committedDate": "2023-09-07T11:09:40Z",
                "author": {
                  "name": "Scott Morrison",
                  "email": "scott.morrison@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "19da2d08a8dbc022d31682efe9d87d8098399212",
                "additions": 41,
                "deletions": 32,
                "committedDate": "2023-09-07T12:09:51Z",
                "author": {
                  "name": "Scott Morrison",
                  "email": "scott.morrison@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD3ElVsQ",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6109515484/job/16580695473"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD3EiXjw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6109499420/job/16580646799"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD3EiXuA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6109499430/job/16580646840"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD3EiZLQ",
                        "name": "Lint style",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6109499430/job/16580647213"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD3EiYxQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6109499420/job/16580647109"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD3EiZzQ",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6109499420/job/16580647373"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD3EibRw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6109499430/job/16580647751"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD3EiaYA",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6109499430/job/16580647520"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD3Eia2Q",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6109499420/job/16580647641"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD3EoGyw",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6109499430/job/16580740811"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD3Eib_g",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6109499420/job/16580647934"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "3964d7c7fc0a4b34ecd8bb7c70dd3cc6c2170489",
                "additions": 0,
                "deletions": 1,
                "committedDate": "2023-09-07T12:12:24Z",
                "author": {
                  "name": "Scott Morrison",
                  "email": "scott.morrison@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD3tIFAQ",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6124032997/job/16623207681"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD35-J2A",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6129001716/job/16636676568"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD36lwsw",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6129331038/job/16637325491"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD3tIFBw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6124032989/job/16623207687"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD35-JnQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6129001718/job/16636676509"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD36lwag",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6129331039/job/16637325418"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD3EnLPg",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6109525972/job/16580725566"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD3EnHYA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6109525460/job/16580724576"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD3EnIyA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6109525461/job/16580724936"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD3tIGEg",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6124032997/job/16623207954"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD35-JoQ",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6129001716/job/16636676513"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD36lwXw",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6129331038/job/16637325407"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD3EnJiA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6109525460/job/16580725128"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD3EnGBw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6109525461/job/16580724231"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD3EnIdg",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6109525460/job/16580724854"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD3EnG5Q",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6109525461/job/16580724453"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD3EnGKA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6109525460/job/16580724264"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD3EnH3g",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6109525461/job/16580724702"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD3EnKlA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6109525460/job/16580725396"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD3HaoAQ",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6109525461/job/16583665665"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "61f0a084687af0e2dab06792a6b1eb978e3d2609",
                "additions": 77,
                "deletions": 62,
                "committedDate": "2023-09-10T22:23:41Z",
                "author": {
                  "name": "Scott Morrison",
                  "email": "scott.morrison@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "0ab2f53428e8c38822e743a68e17d79dd18e9db2",
                "additions": 31,
                "deletions": 4,
                "committedDate": "2023-09-10T22:58:33Z",
                "author": {
                  "name": "Scott Morrison",
                  "email": "scott.morrison@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD4Ol8WQ",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6139926478/job/16658299993"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD4Ol7xA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6139926418/job/16658299844"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD4Ol79g",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6139926417/job/16658299894"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD4Ol8Jg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6139926418/job/16658299942"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD4Ol8IQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6139926417/job/16658299937"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD4Ol7-A",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6139926418/job/16658299896"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD4Ol7zQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6139926417/job/16658299853"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD4Ol8TA",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6139926417/job/16658299980"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD4Ol8VA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6139926418/job/16658299988"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD4Ol8eg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6139926418/job/16658300026"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD4PJJwg",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6139926417/job/16658876866"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "2ff8f2892c40067f32aaa441ba44c3ea955f0398",
                "additions": 28270,
                "deletions": 14208,
                "committedDate": "2023-09-26T23:56:07Z",
                "author": {
                  "name": "Scott Morrison",
                  "email": "scott.morrison@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD_treFw",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6319549703/job/17160658455"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD_trbzw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6319549510/job/17160657871"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD_trbsw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6319549512/job/17160657843"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD_treDg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6319549708/job/17160658446"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD_trcPg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6319549510/job/17160657982"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD_trcIg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6319549512/job/17160657954"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD_treYg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6319549708/job/17160658530"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD_trc_g",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6319549510/job/17160658174"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD_trcgA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6319549512/job/17160658048"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD_trc7g",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6319549512/job/17160658158"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD_trcmQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6319549510/job/17160658073"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD_trdiA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6319549510/job/17160658312"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD_u71tg",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6319549512/job/17161975222"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "21b4383dd434f2383c89ff7e852710461463395c",
                "additions": 4,
                "deletions": 7,
                "committedDate": "2023-09-27T01:42:34Z",
                "author": {
                  "name": "Scott Morrison",
                  "email": "scott.morrison@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD_vpBCQ",
                        "name": "Add annotations",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6320340521/job/17162715401"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD_vo9MQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6320339975/job/17162714417"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD_vo9xQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6320339959/job/17162714565"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD_vpA7w",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6320340520/job/17162715375"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD_vo-hQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6320339975/job/17162714757"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD_vo-nA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6320339959/job/17162714780"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD_vpBdQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6320340520/job/17162715509"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD_vo9qQ",
                        "name": "Check all files imported (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6320339975/job/17162714537"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD_vo-NQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6320339959/job/17162714677"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD_vo9Rg",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6320339959/job/17162714438"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD_vo-Gg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6320339975/job/17162714650"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD_vo--A",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6320339975/job/17162714872"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAD_vqiZA",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6320339959/job/17162740324"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAErF90bg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=7014"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2023-09-07T12:11:30Z",
        "deletions": 121,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Computability/TMComputable.lean",
              "additions": 0,
              "deletions": 2
            },
            {
              "path": "Mathlib/GroupTheory/FreeGroup/Basic.lean",
              "additions": 7,
              "deletions": 8
            },
            {
              "path": "Mathlib/Tactic/Relation/Trans.lean",
              "additions": 104,
              "deletions": 111
            },
            {
              "path": "test/trans.lean",
              "additions": 24,
              "deletions": 0
            }
          ]
        },
        "headRefName": "trans",
        "headRefOid": "21b4383dd434f2383c89ff7e852710461463395c",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5Zxqgf",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
              "name": "merge-conflict"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
              "name": "t-meta"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5gbg1e",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-09-08T16:15:57Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5geWMf",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "siddhartha-gadgil"
              },
              "submittedAt": "2023-09-09T06:10:29Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "DIRTY",
        "mergeable": "CONFLICTING",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 7014,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c5gbg1e",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "eric-wieser"
              },
              "submittedAt": "2023-09-08T16:15:57Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5geUjP",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2023-09-09T04:54:46Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c5geWMf",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "siddhartha-gadgil"
              },
              "submittedAt": "2023-09-09T06:10:29Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5Orqeo",
                    "body": "Why do we still have both `@[trans]` (used by this tactic) and `class Trans` (used by calc)?",
                    "createdAt": "2023-09-08T16:15:57Z",
                    "author": {
                      "login": "eric-wieser"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5OtPfF",
                    "body": "Good question, but not relevant here, I think.",
                    "createdAt": "2023-09-09T04:54:46Z",
                    "author": {
                      "login": "kim-em"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5OtSHK",
                    "body": "`class Trans` is picked up by this tactic, so in principle one can only create classes. If the tag `@[trans]` creates an instance of the class (in addition to what it does now), in principle one can migrate smoothly to everything using the class.",
                    "createdAt": "2023-09-09T06:10:28Z",
                    "author": {
                      "login": "siddhartha-gadgil"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjQ3Nzk1Ng==",
              "login": "kim-em"
            },
            {
              "id": "MDQ6VXNlcjM1ODMzOTY=",
              "login": "siddhartha-gadgil"
            },
            {
              "id": "MDQ6VXNlcjIzNTMwNw==",
              "login": "kmill"
            },
            {
              "id": "MDQ6VXNlcjQyNTI2MA==",
              "login": "eric-wieser"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAD_vpBCQ",
                "name": "Add annotations",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6320340521/job/17162715401"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAD_vo9MQ",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6320339975/job/17162714417"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAD_vo9xQ",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6320339959/job/17162714565"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAD_vpA7w",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6320340520/job/17162715375"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAD_vo-hQ",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6320339975/job/17162714757"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAD_vo-nA",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6320339959/job/17162714780"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAD_vpBdQ",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6320340520/job/17162715509"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAD_vo9qQ",
                "name": "Check all files imported (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6320339975/job/17162714537"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAD_vo-NQ",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6320339959/job/17162714677"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAD_vo9Rg",
                "name": "Build",
                "conclusion": "FAILURE",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6320339959/job/17162714438"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAD_vo-Gg",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6320339975/job/17162714650"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAD_vo--A",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6320339975/job/17162714872"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAD_vqiZA",
                "name": "Post-CI job",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/6320339959/job/17162740324"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAErF90bg",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/github/leanprover-community/repo/mathlib4/event-logs?pullRequestNumber=7014"
              }
            ]
          }
        },
        "title": "chore: cleanup of `trans` tactic",
        "updatedAt": "2024-07-31T08:14:02Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/7014",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5wZo8gzwAAAAJmUulc",
              "createdAt": "2023-09-07T12:11:30Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5wZo8gzwAAAAJmUulp",
              "createdAt": "2023-09-07T12:11:30Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKAKYew",
                "name": "t-meta"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5wZo8gzwAAAAJmUulz",
              "createdAt": "2023-09-07T12:11:30Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5l7Z5J",
              "createdAt": "2023-09-07T12:31:32Z",
              "body": "> I would like to move this up to Std, but it required a substantial rewrite, and I'm still not completely satisfied, so I'm PRing my revisions so far to Mathlib first.\r\n> \r\n> @siddhartha-gadgil, could you have a look? The functions `getExplicitRelArg?` and `getExplicitRelArgCore` seem strange to me, and I haven't tried replacing these yet. Would you be able to document them and/or clean them up?\r\n> \r\n> [![Open in Gitpod](https://camo.githubusercontent.com/76e60919474807718793857d8eb615e7a50b18b04050577e5a35c19421f260a3/68747470733a2f2f676974706f642e696f2f627574746f6e2f6f70656e2d696e2d676974706f642e737667)](https://gitpod.io/from-referrer/)\r\n\r\nSure. I will look at these.",
              "author": {
                "login": "siddhartha-gadgil"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5wZo8gzwAAAAJmYTt0",
              "createdAt": "2023-09-07T13:38:30Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABKteTVQ",
                "name": "awaiting-CI"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5l-_eN",
              "createdAt": "2023-09-08T03:05:28Z",
              "body": "> I would like to move this up to Std, but it required a substantial rewrite, and I'm still not completely satisfied, so I'm PRing my revisions so far to Mathlib first.\r\n> \r\n> @siddhartha-gadgil, could you have a look? The functions `getExplicitRelArg?` and `getExplicitRelArgCore` seem strange to me, and I haven't tried replacing these yet. Would you be able to document them and/or clean them up?\r\n> \r\n> [![Open in Gitpod](https://camo.githubusercontent.com/76e60919474807718793857d8eb615e7a50b18b04050577e5a35c19421f260a3/68747470733a2f2f676974706f642e696f2f627574746f6e2f6f70656e2d696e2d676974706f642e737667)](https://gitpod.io/from-referrer/)\r\n\r\nThese were my hacky substitute for looking up the binder information to see if the application was explicit (due to what I knew when I wrote this code). I will clean up and have enough test cases over the next couple of days. ",
              "author": {
                "login": "siddhartha-gadgil"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5l_DGM",
              "createdAt": "2023-09-08T03:32:35Z",
              "body": "Thanks!",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5wZo8gzwAAAAJmuZ4Y",
              "createdAt": "2023-09-08T03:32:40Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5wZo8gzwAAAAJmuZ4c",
              "createdAt": "2023-09-08T03:32:40Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c5gbg1e",
              "createdAt": "2023-09-08T16:15:56Z",
              "body": "",
              "author": {
                "login": "eric-wieser"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5mF2h5",
              "createdAt": "2023-09-10T13:08:22Z",
              "body": "@semorrison I took a pass at the tactic locally, and I put it at [this gist](https://gist.github.com/kmill/fe37a55ff0ce4e58debab65061040da3). I haven't tested it against mathlib, but the test file passes at least.\r\n\r\nThe main changes:\r\n1. make the `rel?` function use `FunInfo` data to figure out which are the explicit arguments and how many implicit arguments to include immediately after the relation\r\n2. make the `@[trans]` attribute use this function, and add more consistency checks\r\n3. fix `transCore` to use syntheticOpaque instead of synthetic metavariables; also fix how it handles metavariables in y\r\n4. fix the way the `trans` tactic handles the metavariables that `elabTermWithHoles` returns, rather than discarding them",
              "author": {
                "login": "kmill"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5mGb7_",
              "createdAt": "2023-09-10T23:00:21Z",
              "body": "@kmill thanks!\r\n\r\nI tried out your refactor.\r\n\r\nFirst, `rel?'` seems to break all across Mathlib. Haven't investigated why, but I put a simple test case in the test file.\r\n\r\nSecond, your refactor doesn't cope with\r\n```\r\n@[trans]\r\ntheorem EqOn.trans (h₁ : EqOn f₁ f₂ s) (h₂ : EqOn f₂ f₃ s) : EqOn f₁ f₃ s := fun _ hx =>\r\n  (h₁ hx).trans (h₂ hx)\r\n```\r\n\r\nI think it's actually pretty reasonable to not cope with this! We might instead just reorder the arguments of `Set.EqOn` (most uses are via dot notation in any case). What do you think? (Asked about this on [zulip](https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Reordering.20arguments.20of.20.60Set.2EEqOn.60/near/390196612).)\r\n",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5mGdGV",
              "createdAt": "2023-09-10T23:18:07Z",
              "body": "@semorrison Oof, I didn't expect to see a relation like that (and I guess it's an example of something that `@[trans]` accepted but would never have worked with the `trans` tactic itself). Reordering arguments seems reasonable to me.\r\n\r\nAnother thing, which would take more development, would be to create a system (an attribute maybe?) to declare relations so that you can specify which argument indices correspond to the LHS and RHS. I think Lean 3 sort of maintained such a database automatically, but I don't remember being able to configure it in any way. (I think `@[trans]` lemmas were also really restrictive and had to be in the form `lem ... x y z (h1 : R x y) (h2 : R y z) : R x z`, at least to work with `calc`, but the `transitivity` tactic accidentally worked more generally.)",
              "author": {
                "login": "kmill"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "BaseRefChangedEvent"
            },
            {
              "__typename": "BaseRefChangedEvent"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5wZo8gzwAAAAJuiYjj",
              "createdAt": "2023-09-22T08:10:29Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5wZo8gzwAAAAJwt6s9",
              "createdAt": "2023-09-26T23:57:58Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5wZo8gzwAAAAJwt6tA",
              "createdAt": "2023-09-26T23:57:58Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5wZo8gzwAAAAJwt6tH",
              "createdAt": "2023-09-26T23:57:58Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c5ngYjy",
              "createdAt": "2023-09-27T01:45:27Z",
              "body": "@kmill, can I just delete `rel?'`? It was failing all over for me.",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c5wZo8gzwAAAAKE4iou",
              "createdAt": "2023-10-31T11:19:16Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c5wZo8gzwAAAAMhHl0P",
              "createdAt": "2024-07-09T13:35:38Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7ECuhA",
                "name": "awaiting-review"
              }
            }
          ]
        }
      }
    }
  }
}
