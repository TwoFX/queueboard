{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 1752,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "YaelDillies"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> Mathlib.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n- [x] depends on: #16087\r\n- [x] depends on: #17208\r\n- [x] depends on: #17247\r\n- [x] depends on: #17295\r\n- [x] depends on: #17398\r\n- [x] depends on: #17898\r\n- [x] depends on: #17937\r\n- [x] depends on: #18062\r\n- [ ] depends on: #18133\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 204,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6I_GFp",
              "body": "### PR summary [d4952ac5b9](https://github.com/leanprover-community/mathlib4/pull/15993/commits/d4952ac5b9288ae0dc780f328c9b6649aa20d7bb)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ EquicontinuousOn.isInducing_uniformOnFun_iff_pi`\n`+ IsEmbedding`\n`+ IsEmbedding.comapMetricSpace`\n`+ IsEmbedding.inl`\n`+ IsEmbedding.inr`\n`+ IsEmbedding.isOpenEmbedding_of_surjective`\n`+ IsEmbedding.isSeparable_preimage`\n`+ IsEmbedding.to_isometry`\n`+ IsInducing`\n`+ IsInducing.comp`\n`+ IsInducing.id`\n`+ IsInducing.induced`\n`+ IsInducing.isSeparable_preimage`\n`+ IsInducing.of_comp`\n`+ IsInducing.of_comp_iff`\n`+ IsOpenEmbedding.isEmbedding`\n`+ IsOpenEmbedding.isInducing`\n`+ IsOpenEmbedding.isOpen_iff_image_isOpen`\n`+ IsOpenEmbedding.isOpen_iff_preimage_isOpen`\n`+ IsOpenEmbedding.of_continuous_injective_isOpenMap`\n`+ IsOpenEmbedding.of_isEmbedding`\n`+ IsOpenEmbedding.of_isEmbedding_isOpenMap`\n`+ IsQuasiSeparated.image_of_isEmbedding`\n`+ IsRestrictGen`\n`+ IsTopologicalBasis.isInducing`\n`+ IsUniformEmbedding.isClosedEmbedding`\n`+ IsUniformEmbedding.isEmbedding`\n`+ IsUniformInducing.isInducing`\n`+ Nobeling.isClosedEmbedding`\n`+ PrimeSpectrum.isEmbedding_tensorProductTo_of_surjectiveOnStalks`\n`+ PrimeSpectrum.isEmbedding_tensorProductTo_of_surjectiveOnStalks_aux`\n`+ Scheme.Hom.isEmbedding`\n`+ Set.restrictPreimage_isEmbedding`\n`+ Set.restrictPreimage_isInducing`\n`+ StrictMono.isEmbedding_of_ordConnected`\n`+ Topology.IsClosedEmbedding.LindelofSpace`\n`+ Topology.IsClosedEmbedding.compactSpace`\n`+ Topology.IsClosedEmbedding.inl`\n`+ Topology.IsClosedEmbedding.inr`\n`+ Topology.IsClosedEmbedding.isCompact_preimage`\n`+ Topology.IsClosedEmbedding.isLindelof_preimage`\n`+ Topology.IsClosedEmbedding.isProperMap`\n`+ Topology.IsClosedEmbedding.locallyCompactSpace`\n`+ Topology.IsClosedEmbedding.measurableEmbedding`\n`+ Topology.IsClosedEmbedding.nonLindelofSpace`\n`+ Topology.IsClosedEmbedding.noncompactSpace`\n`+ Topology.IsClosedEmbedding.normalSpace`\n`+ Topology.IsClosedEmbedding.paracompactSpace`\n`+ Topology.IsClosedEmbedding.quasiSober`\n`+ Topology.IsClosedEmbedding.restrictPreimage`\n`+ Topology.IsClosedEmbedding.sigmaCompactSpace`\n`+ Topology.IsClosedEmbedding.sigmaMk`\n`+ Topology.IsClosedEmbedding.subtypeVal`\n`+ Topology.IsClosedEmbedding.t4Space`\n`+ Topology.IsClosedEmbedding.tendsto_coLindelof`\n`+ Topology.IsClosedEmbedding.tendsto_cocompact`\n`+ Topology.IsClosedEmbedding.uliftDown`\n`+ Topology.IsClosedEmbedding.weaklyLocallyCompactSpace`\n`+ Topology.IsEmbedding.codRestrict`\n`+ Topology.IsEmbedding.comapUniformSpace`\n`+ Topology.IsEmbedding.completelyNormalSpace`\n`+ Topology.IsEmbedding.continuousOn_iff`\n`+ Topology.IsEmbedding.inclusion`\n`+ Topology.IsEmbedding.inl`\n`+ Topology.IsEmbedding.inr`\n`+ Topology.IsEmbedding.isCompact_iff`\n`+ Topology.IsEmbedding.isLindelof_iff`\n`+ Topology.IsEmbedding.isLocallyClosed_iff`\n`+ Topology.IsEmbedding.isSigmaCompact_iff`\n`+ Topology.IsEmbedding.isTotallyDisconnected`\n`+ Topology.IsEmbedding.isTotallyDisconnected_image`\n`+ Topology.IsEmbedding.isTotallyDisconnected_range`\n`+ Topology.IsEmbedding.map_nhdsWithin_eq`\n`+ Topology.IsEmbedding.measurableEmbedding`\n`+ Topology.IsEmbedding.prodMap`\n`+ Topology.IsEmbedding.restrictPreimage`\n`+ Topology.IsEmbedding.secondCountableTopology`\n`+ Topology.IsEmbedding.separableSpace`\n`+ Topology.IsEmbedding.sigmaMk`\n`+ Topology.IsEmbedding.subtypeVal`\n`+ Topology.IsEmbedding.t0Space`\n`+ Topology.IsEmbedding.t1Space`\n`+ Topology.IsEmbedding.t25Space`\n`+ Topology.IsEmbedding.t2Space`\n`+ Topology.IsEmbedding.t3Space`\n`+ Topology.IsEmbedding.t5Space`\n`+ Topology.IsEmbedding.toPullbackDiag`\n`+ Topology.IsEmbedding.uliftDown`\n`+ Topology.IsInducing.alexandrovDiscrete`\n`+ Topology.IsInducing.codRestrict`\n`+ Topology.IsInducing.comapPseudoMetricSpace`\n`+ Topology.IsInducing.continuousConstSMul`\n`+ Topology.IsInducing.continuousInv`\n`+ Topology.IsInducing.continuousMul`\n`+ Topology.IsInducing.continuousOn_iff`\n`+ Topology.IsInducing.continuousSMul`\n`+ Topology.IsInducing.continuousWithinAt_iff`\n`+ Topology.IsInducing.frechetUrysohnSpace`\n`+ Topology.IsInducing.generalizingMap`\n`+ Topology.IsInducing.hasProd_iff`\n`+ Topology.IsInducing.injective`\n`+ Topology.IsInducing.inseparable_iff`\n`+ Topology.IsInducing.isClosedMap`\n`+ Topology.IsInducing.isCompact_iff`\n`+ Topology.IsInducing.isCompact_preimage`\n`+ Topology.IsInducing.isCompact_preimage'`\n`+ Topology.IsInducing.isCompact_preimage_iff`\n`+ Topology.IsInducing.isEmbedding`\n`+ Topology.IsInducing.isLindelof_iff`\n`+ Topology.IsInducing.isLindelof_preimage`\n`+ Topology.IsInducing.isLocallyClosed_iff`\n`+ Topology.IsInducing.isOpenMap`\n`+ Topology.IsInducing.isPathConnected_iff`\n`+ Topology.IsInducing.isPreconnected_image`\n`+ Topology.IsInducing.isSigmaCompact_iff`\n`+ Topology.IsInducing.joinedIn_image`\n`+ Topology.IsInducing.locallyCompactSpace`\n`+ Topology.IsInducing.multipliable_iff_tprod_comp_mem_range`\n`+ Topology.IsInducing.of_codRestrict`\n`+ Topology.IsInducing.prodMap`\n`+ Topology.IsInducing.r0Space`\n`+ Topology.IsInducing.r1Space`\n`+ Topology.IsInducing.regularSpace`\n`+ Topology.IsInducing.restrictPreimage`\n`+ Topology.IsInducing.secondCountableTopology`\n`+ Topology.IsInducing.specializes_iff`\n`+ Topology.IsInducing.specializingMap`\n`+ Topology.IsInducing.subtypeVal`\n`+ Topology.IsInducing.topologicalGroup`\n`+ Topology.IsInducing.withSeminorms`\n`+ Topology.IsOpenEmbedding.coborder_preimage`\n`+ Topology.IsOpenEmbedding.compatiblePreserving`\n`+ Topology.IsOpenEmbedding.functor_isContinuous`\n`+ Topology.IsOpenEmbedding.functor_obj_injective`\n`+ Topology.IsOpenEmbedding.inl`\n`+ Topology.IsOpenEmbedding.inr`\n`+ Topology.IsOpenEmbedding.isLocalHomeomorph`\n`+ Topology.IsOpenEmbedding.isQuasiSeparated_iff`\n`+ Topology.IsOpenEmbedding.locPathConnectedSpace`\n`+ Topology.IsOpenEmbedding.locallyCompactSpace`\n`+ Topology.IsOpenEmbedding.locallyConnectedSpace`\n`+ Topology.IsOpenEmbedding.map_nhdsWithin_preimage_eq`\n`+ Topology.IsOpenEmbedding.measurableEmbedding`\n`+ Topology.IsOpenEmbedding.prodMap`\n`+ Topology.IsOpenEmbedding.quasiSober`\n`+ Topology.IsOpenEmbedding.restrictPreimage`\n`+ Topology.IsOpenEmbedding.sigmaMk`\n`+ Topology.IsOpenEmbedding.singleton_smoothManifoldWithCorners`\n`+ Topology.IsQuotientMap.continuousOn_isOpen_iff`\n`+ Topology.IsQuotientMap.continuous_lift_prod_left`\n`+ Topology.IsQuotientMap.continuous_lift_prod_right`\n`+ Topology.IsQuotientMap.image_connectedComponent`\n`+ Topology.IsQuotientMap.isClopen_preimage`\n`+ Topology.IsQuotientMap.preimage_connectedComponent`\n`+ Topology.IsQuotientMap.restrictPreimage_isOpen`\n`+ Topology.IsQuotientMap.sequentialSpace`\n`+ Topology.isEmbedding_sigmaMap`\n`+ Topology.isInducing_const_prod`\n`+ Topology.isInducing_prod_const`\n`+ Topology.isInducing_sigmaMap`\n`+ Topology.isOpenEmbedding_sigmaMap`\n`+ UniformInducing.isInducing`\n`+ Units.isEmbedding_val`\n`+ Units.isEmbedding_valâ‚€`\n`+ _root_.Function.Injective.isEmbedding_induced`\n`+ _root_.Function.LeftInverse.embedding`\n`+ _root_.Function.LeftInverse.isEmbedding`\n`+ _root_.Topology.IsClosedEmbedding.integral_map`\n`+ _root_.Topology.IsClosedEmbedding.polishSpace`\n`+ _root_.Topology.IsClosedEmbedding.setIntegral_map`\n`+ _root_.Topology.IsClosedEmbedding.set_integral_map`\n`+ _root_.Topology.IsEmbedding.aestronglyMeasurable_comp_iff`\n`+ _root_.Topology.IsEmbedding.firstCountableTopology`\n`+ _root_.Topology.IsEmbedding.metrizableSpace`\n`+ _root_.Topology.IsEmbedding.toHomeomorph_of_surjective`\n`+ _root_.Topology.IsInducing.firstCountableTopology`\n`+ _root_.Topology.IsInducing.noetherianSpace`\n`+ _root_.Topology.IsInducing.pseudoMetrizableSpace`\n`+ _root_.Topology.IsQuotientMap.secondCountableTopology`\n`+ _root_.Topology.IsQuotientMap.separableSpace`\n`+ _root_.openEmbedding_id`\n`+ antilipschitz_of_isEmbedding`\n`+ comap_isInducing_of_surjective`\n`+ completeSpace_of_isRestrictGen`\n`+ discreteTopology`\n`+ exists_isInducing_l_infty`\n`+ fst_isEmbedding_of_right`\n`+ induced`\n`+ instance : (topologically IsEmbedding).RespectsIso`\n`+ instance : CompactSpace (Aut F) := (autEmbedding_isClosedEmbedding F).compactSpace`\n`+ instance : ContinuousMul Î±Ë£ := isInducing_embedProduct.continuousMul (embedProduct Î±)`\n`+ instance : ContinuousNeg (sphere (0 : E) r) := IsInducing.subtypeVal.continuousNeg fun _ => rfl`\n`+ instance : PolishSpace EReal := ENNReal.logOrderIso.symm.toHomeomorph.isClosedEmbedding.polishSpace`\n`+ instance [R0Space R] : R0Space C(X, R)â‚€ := isEmbedding_toContinuousMap.r0Space`\n`+ instance [R1Space R] : R1Space C(X, R)â‚€ := isEmbedding_toContinuousMap.r1Space`\n`+ instance [RegularSpace R] : RegularSpace C(X, R)â‚€ := isEmbedding_toContinuousMap.regularSpace`\n`+ instance [T0Space R] : T0Space C(X, R)â‚€ := isEmbedding_toContinuousMap.t0Space`\n`+ instance [T1Space R] : T1Space C(X, R)â‚€ := isEmbedding_toContinuousMap.t1Space`\n`+ instance [T2Space R] : T2Space C(X, R)â‚€ := isEmbedding_toContinuousMap.t2Space`\n`+ instance [T3Space R] : T3Space C(X, R)â‚€ := isEmbedding_toContinuousMap.t3Space`\n`+ instance {p : X â†’ Prop} : R0Space {x // p x} := IsInducing.subtypeVal.r0Space`\n`+ isClosed_iff_image_isClosed`\n`+ isClosed_iff_preimage_isClosed`\n`+ isDenseInducing`\n`+ isEmbedding_coe_ennreal`\n`+ isEmbedding_coe_real`\n`+ isEmbedding_diracProba`\n`+ isEmbedding_embedProduct`\n`+ isEmbedding_graph`\n`+ isEmbedding_iff_isInducing`\n`+ isEmbedding_iff_of_iSup_eq_top`\n`+ isEmbedding_inclusion`\n`+ isEmbedding_inducingFn`\n`+ isEmbedding_isLocalAtTarget`\n`+ isEmbedding_mk`\n`+ isEmbedding_mk_symm`\n`+ isEmbedding_natCast`\n`+ isEmbedding_of_pullback`\n`+ isEmbedding_outCLM`\n`+ isEmbedding_postcomp`\n`+ isEmbedding_prodMap`\n`+ isEmbedding_prodMk`\n`+ isEmbedding_pullback_to_prod`\n`+ isEmbedding_sigmaMk_comp`\n`+ isEmbedding_toContinuousMultilinearMap`\n`+ isEmbedding_toUniformOnFun`\n`+ isEmbedding_toWeakDualBCNN`\n`+ isEmbedding_val_mk'`\n`+ isHomeomorph_iff_isEmbedding_surjective`\n`+ isInducing_embedProduct`\n`+ isInducing_iff_nhds`\n`+ isInducing_mk`\n`+ isInducing_mk_symm`\n`+ isInducing_postcomp`\n`+ isInducing_prod_map`\n`+ isInducing_pullback_to_prod`\n`+ isInducing_toContinuousMap`\n`+ isInducing_toProd`\n`+ isOpenEmbedding_iff_continuous_injective_isOpenMap`\n`+ isOpenEmbedding_iff_isEmbedding_isOpenMap`\n`+ isOpenEmbedding_of_pullback`\n`+ localization_comap_isEmbedding`\n`+ localization_comap_isInducing`\n`+ mk'`\n`+ ofIsEmbedding`\n`+ of_continuous_injective_isClosedMap`\n`+ of_isEmbedding_isClosedMap`\n`+ of_leftInverse`\n`+ productOfMemOpens_isEmbedding`\n`+ productOfMemOpens_isInducing`\n`+ pullback_map_isEmbedding`\n`+ snd_isEmbedding_of_left`\n`+ t25Space`\n`+ t5Space`\n`+ toFiniteMeasure_isEmbedding`\n`+ totalSpaceMk_isEmbedding`\n`+ totalSpaceMk_isInducing`\n`++ isEmbedding_coeFn`\n`++ isEmbedding_toContinuousMap`\n`+++ id`\n`+++ isEmbedding_coe`\n`+++ isEmbedding_restrictScalars`\n`+++++ isInducing`\n`++++++++ isEmbedding`\n`++++++------ embedding`\n`+++-- continuous`\n`+++-- of_comp_iff`\n`+++-- tendsto_nhds_iff`\n`+++--- embedding_coe`\n`+++--- embedding_restrictScalars`\n`++- Embedding.of_comp_iff`\n`++- closure_eq_preimage_closure_image`\n`++- comp`\n`++- continuous_iff`\n`++- map_nhds_eq`\n`++- map_nhds_of_mem`\n`++- of_comp`\n`++-- completeSpace`\n`++-- embedding_coeFn`\n`++-- embedding_inclusion`\n`++-- embedding_inr`\n`++-- embedding_toContinuousMap`\n`++-- postcomp_isUniformEmbedding`\n`+-+ of_subsingleton`\n`+-+-+- t2Space`\n`+-- embedding_inl`\n`+--+ instT2Space`\n`+--+ isClosed_iff`\n`+--+ isOpen_iff`\n`- DenseRange.prod_map`\n`- Embedding.continuous`\n`- Embedding.secondCountableTopology`\n`- Embedding.separableSpace`\n`- Embedding.tendsto_nhds_iff`\n`- EquicontinuousOn.inducing_uniformOnFun_iff_pi`\n`- Function.LeftInverse.embedding`\n`- Inducing`\n`- Inducing.alexandrovDiscrete`\n`- Inducing.codRestrict`\n`- Inducing.comapPseudoMetricSpace`\n`- Inducing.comp`\n`- Inducing.continuousConstSMul`\n`- Inducing.continuousInv`\n`- Inducing.continuousMul`\n`- Inducing.continuousOn_iff`\n`- Inducing.continuousSMul`\n`- Inducing.continuousWithinAt_iff`\n`- Inducing.frechetUrysohnSpace`\n`- Inducing.generalizingMap`\n`- Inducing.hasProd_iff`\n`- Inducing.injective`\n`- Inducing.inseparable_iff`\n`- Inducing.isClosedMap`\n`- Inducing.isCompact_iff`\n`- Inducing.isCompact_preimage`\n`- Inducing.isCompact_preimage'`\n`- Inducing.isCompact_preimage_iff`\n`- Inducing.isLindelof_iff`\n`- Inducing.isLindelof_preimage`\n`- Inducing.isLocallyClosed_iff`\n`- Inducing.isOpenMap`\n`- Inducing.isPathConnected_iff`\n`- Inducing.isPreconnected_image`\n`- Inducing.isSigmaCompact_iff`\n`- Inducing.joinedIn_image`\n`- Inducing.locallyCompactSpace`\n`- Inducing.multipliable_iff_tprod_comp_mem_range`\n`- Inducing.of_codRestrict`\n`- Inducing.of_comp_iff`\n`- Inducing.r0Space`\n`- Inducing.r1Space`\n`- Inducing.regularSpace`\n`- Inducing.restrictPreimage`\n`- Inducing.secondCountableTopology`\n`- Inducing.specializes_iff`\n`- Inducing.specializingMap`\n`- Inducing.topologicalGroup`\n`- Inducing.withSeminorms`\n`- IsClosedEmbedding.LindelofSpace`\n`- IsClosedEmbedding.compactSpace`\n`- IsClosedEmbedding.isCompact_preimage`\n`- IsClosedEmbedding.isLindelof_preimage`\n`- IsClosedEmbedding.isProperMap`\n`- IsClosedEmbedding.locallyCompactSpace`\n`- IsClosedEmbedding.measurableEmbedding`\n`- IsClosedEmbedding.nonLindelofSpace`\n`- IsClosedEmbedding.noncompactSpace`\n`- IsClosedEmbedding.normalSpace`\n`- IsClosedEmbedding.paracompactSpace`\n`- IsClosedEmbedding.quasiSober`\n`- IsClosedEmbedding.restrictPreimage`\n`- IsClosedEmbedding.sigmaCompactSpace`\n`- IsClosedEmbedding.subtypeVal`\n`- IsClosedEmbedding.t4Space`\n`- IsClosedEmbedding.tendsto_coLindelof`\n`- IsClosedEmbedding.tendsto_cocompact`\n`- IsClosedEmbedding.weaklyLocallyCompactSpace`\n`- IsOpenEmbedding.coborder_preimage`\n`- IsOpenEmbedding.compatiblePreserving`\n`- IsOpenEmbedding.functor_isContinuous`\n`- IsOpenEmbedding.functor_obj_injective`\n`- IsOpenEmbedding.isLocalHomeomorph`\n`- IsOpenEmbedding.isQuasiSeparated_iff`\n`- IsOpenEmbedding.locPathConnectedSpace`\n`- IsOpenEmbedding.locallyCompactSpace`\n`- IsOpenEmbedding.locallyConnectedSpace`\n`- IsOpenEmbedding.map_nhdsWithin_preimage_eq`\n`- IsOpenEmbedding.measurableEmbedding`\n`- IsOpenEmbedding.open_iff_image_open`\n`- IsOpenEmbedding.open_iff_preimage_open`\n`- IsOpenEmbedding.prod`\n`- IsOpenEmbedding.prodMap`\n`- IsOpenEmbedding.quasiSober`\n`- IsOpenEmbedding.restrictPreimage`\n`- IsOpenEmbedding.singleton_smoothManifoldWithCorners`\n`- IsOpenMap.prod`\n`- IsQuotientMap.continuousOn_isOpen_iff`\n`- IsQuotientMap.continuous_lift_prod_left`\n`- IsQuotientMap.continuous_lift_prod_right`\n`- IsQuotientMap.image_connectedComponent`\n`- IsQuotientMap.isClopen_preimage`\n`- IsQuotientMap.preimage_connectedComponent`\n`- IsQuotientMap.restrictPreimage_isOpen`\n`- IsQuotientMap.sequentialSpace`\n`- IsTopologicalBasis.inducing`\n`- IsUniformEmbedding.toIsClosedEmbedding`\n`- IsUniformInducing.inducing`\n`- OpenEmbedding.continuousAt_iff`\n`- OpenEmbedding.map_nhds_eq`\n`- OpenEmbedding.prodMap`\n`- OpenEmbedding.tendsto_nhds_iff`\n`- OpenEmbedding.tendsto_nhds_iff'`\n`- PrimeSpectrum.embedding_tensorProductTo_of_surjectiveOnStalks_aux`\n`- QuotientMap.continuous_lift_prod_right`\n`- RestrictGenTopology`\n`- Set.restrictPreimage_inducing`\n`- ULift.isClosedEmbedding_down`\n`- UniformInducing.inducing`\n`- _root_.Inducing.firstCountableTopology`\n`- _root_.Inducing.isSeparable_preimage`\n`- _root_.Inducing.noetherianSpace`\n`- _root_.Inducing.pseudoMetrizableSpace`\n`- _root_.IsClosedEmbedding.integral_map`\n`- _root_.IsClosedEmbedding.of_continuous_injective_isClosedMap`\n`- _root_.IsClosedEmbedding.polishSpace`\n`- _root_.IsClosedEmbedding.setIntegral_map`\n`- _root_.IsClosedEmbedding.set_integral_map`\n`- _root_.IsQuotientMap.secondCountableTopology`\n`- _root_.IsQuotientMap.separableSpace`\n`- _root_.QuotientMap.secondCountableTopology`\n`- _root_.isClosedEmbedding_id`\n`- closed_iff_image_closed`\n`- closed_iff_preimage_closed`\n`- comap_inducing_of_surjective`\n`- completeSpace_of_restrictGenTopology`\n`- continuous_op`\n`- embedding_graph`\n`- embedding_isLocalAtTarget`\n`- embedding_prod_mk`\n`- exists_inducing_l_infty`\n`- inducing_const_prod`\n`- inducing_embedProduct`\n`- inducing_id`\n`- inducing_iff_nhds`\n`- inducing_induced`\n`- inducing_mk_symm`\n`- inducing_of_inducing_compose`\n`- inducing_postcomp`\n`- inducing_prod_const`\n`- inducing_prod_map`\n`- inducing_pullback_to_prod`\n`- inducing_sigma_map`\n`- inducing_subtype_val`\n`- inducing_toContinuousMap`\n`- inducing_toProd`\n`- instance : (topologically Embedding).RespectsIso`\n`- instance : CompactSpace (Aut F) := IsClosedEmbedding.compactSpace (autEmbedding_isClosedEmbedding F)`\n`- instance : ContinuousMul Î±Ë£`\n`- instance : ContinuousNeg (sphere (0 : E) r)`\n`- instance : PolishSpace EReal`\n`- instance [R0Space R] : R0Space C(X, R)â‚€ := embedding_toContinuousMap.r0Space`\n`- instance [R1Space R] : R1Space C(X, R)â‚€ := embedding_toContinuousMap.r1Space`\n`- instance [RegularSpace R] : RegularSpace C(X, R)â‚€ := embedding_toContinuousMap.regularSpace`\n`- instance [T0Space R] : T0Space C(X, R)â‚€ := embedding_toContinuousMap.t0Space`\n`- instance [T1Space R] : T1Space C(X, R)â‚€ := embedding_toContinuousMap.t1Space`\n`- instance [T2Space R] : T2Space C(X, R)â‚€ := embedding_toContinuousMap.t2Space`\n`- instance [T3Space R] : T3Space C(X, R)â‚€ := embedding_toContinuousMap.t3Space`\n`- instance {p : X â†’ Prop} : R0Space {x // p x} := inducing_subtype_val.r0Space`\n`- isClosedEmbedding_inl`\n`- isClosedEmbedding_inr`\n`- isClosedEmbedding_sigmaMk`\n`- isOpenEmbedding_id`\n`- isOpenEmbedding_iff_continuous_injective_open`\n`- isOpenEmbedding_inl`\n`- isOpenEmbedding_inr`\n`- isOpenEmbedding_of_continuous_injective_open`\n`- isOpenEmbedding_of_pullback_open_embeddings`\n`- isOpenEmbedding_sigmaMk`\n`- isOpenEmbedding_sigma_map`\n`- localization_comap_inducing`\n`- openEmbedding_id`\n`- openEmbedding_inl`\n`- openEmbedding_mk_symm`\n`- productOfMemOpens_inducing`\n`- to_openEmbedding`\n`- totalSpaceMk_inducing`\n`-+-+ instT3Space`\n`-- inducing`\n`--+ inducing_mk`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "createdAt": "2024-08-20T08:11:09Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Q4ove",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#16087~~\n* ~~leanprover-community/mathlib4#17208~~\n* ~~leanprover-community/mathlib4#17247~~\n* ~~leanprover-community/mathlib4#17295~~\n* ~~leanprover-community/mathlib4#17398~~\n* ~~leanprover-community/mathlib4#17898~~\n* ~~leanprover-community/mathlib4#17937~~\n* ~~leanprover-community/mathlib4#18062~~\n* leanprover-community/mathlib4#18133\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (ðŸ¤–). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "createdAt": "2024-10-23T03:23:25Z",
              "author": {
                "login": "mathlib4-dependent-issues-bot"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "50101ed2c33a73bc026e823a631eec2923538104",
                "additions": 568,
                "deletions": 577,
                "committedDate": "2024-10-26T22:47:13Z",
                "author": {
                  "name": "YaÃ«l Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHefJP4w",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11535527179/job/32110694371"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHefJP6w",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11535527181/job/32110694379"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHefJOHw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11535526851/job/32110693919"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHefJOqw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11535526852/job/32110694059"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHefJQVg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11535527183/job/32110694486"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHefJOfw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11535526851/job/32110694015"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHefJOXw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11535526852/job/32110693983"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHefJP9A",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11535527183/job/32110694388"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHefJOyQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11535526851/job/32110694089"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHefJODg",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11535526852/job/32110693902"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHefJPHw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11535526851/job/32110694175"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHefNeBw",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11535526852/job/32110763527"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHefJcYw",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/32110697571"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHefJkHQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=18133&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "4decc4d19b7e919be62dca78297b2b313de0f1b4",
                "additions": 367,
                "deletions": 7,
                "committedDate": "2024-10-26T23:01:20Z",
                "author": {
                  "name": "YaÃ«l Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHefRYsQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11535587517/job/32110827697"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHefRYtw",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11535587516/job/32110827703"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHefRXyw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11535587437/job/32110827467"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHefRYHg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11535587434/job/32110827550"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHefRYrg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11535587515/job/32110827694"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHefRYRA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11535587437/job/32110827588"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHefRXtA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11535587434/job/32110827444"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHefRY4Q",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11535587515/job/32110827745"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHefRX3Q",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11535587434/job/32110827485"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHefRYDA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11535587437/job/32110827532"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHefRYfw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11535587437/job/32110827647"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHefSe7A",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11535587434/job/32110845676"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHefRqLA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/32110832172"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHefR3dQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=18133&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "714cf3237d1be9194096fba2dc6b80476b45285f",
                "additions": 0,
                "deletions": 12,
                "committedDate": "2024-10-26T23:23:34Z",
                "author": {
                  "name": "YaÃ«l Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHefhkoA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11535719920/job/32111092896"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHefhkiA",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11535719913/job/32111092872"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHefhjoA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11535719855/job/32111092640"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHefhjrQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11535719858/job/32111092653"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHefhk-A",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11535719939/job/32111092984"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHefhj5g",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11535719855/job/32111092710"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHefhkAQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11535719858/job/32111092737"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHefhlIA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11535719939/job/32111093024"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHefhj0Q",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11535719858/job/32111092689"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHefhjvA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11535719855/job/32111092668"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHefhkJg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11535719855/job/32111092774"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHefupzg",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11535719858/job/32111307214"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHefhu6A",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/32111095528"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHefh9Bw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=18133&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "b49695781e0665d81eb1c1d8dc240c0f1ab68ad9",
                "additions": 4,
                "deletions": 3,
                "committedDate": "2024-10-27T08:36:54Z",
                "author": {
                  "name": "YaÃ«l Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHemRsog",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11539018392/job/32118172834"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHemRsbQ",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11539018395/job/32118172781"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHemRrBQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11539018189/job/32118172421"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHemRq_Q",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11539018197/job/32118172413"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHemRsiQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11539018391/job/32118172809"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHemRrig",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11539018189/job/32118172554"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHemRsMQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11539018197/job/32118172721"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHemRtBg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11539018391/job/32118172934"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHemRsFg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11539018189/job/32118172694"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHemRrkA",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11539018197/job/32118172560"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHemRtIw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11539018189/job/32118172963"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHemegNg",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11539018197/job/32118382646"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHemR3zA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/32118175692"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHemSHGA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=18133&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "313055a17b12c4bd27a63eff29979b8e23823f0c",
                "additions": 932,
                "deletions": 1005,
                "committedDate": "2024-10-27T09:17:26Z",
                "author": {
                  "name": "YaÃ«l Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHem0kiw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11539270358/job/32118744203"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHem0kjg",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11539270366/job/32118744206"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHem0jdg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11539270099/job/32118743926"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHem0jrQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11539270104/job/32118743981"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHem0k_g",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11539270367/job/32118744318"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHem0i6w",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11539270099/job/32118743787"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHem0jVA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11539270104/job/32118743892"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHem0klA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11539270367/job/32118744212"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHem0i8g",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11539270104/job/32118743794"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHem0j4A",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11539270099/job/32118744032"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHem0kUw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11539270099/job/32118744147"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHem7EvA",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11539270104/job/32118850748"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHem0z4g",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/32118748130"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHem1A0Q",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=15993&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "623accd84784ff852bcf5e4afb0c20ff5731df99",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2024-10-27T10:36:56Z",
                "author": {
                  "name": "YaÃ«l Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHen3-IQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11539785416/job/32119848481"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHen3-Kw",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11539785420/job/32119848491"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHen38Qw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11539785216/job/32119848003"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHen38Nw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11539785219/job/32119847991"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHen3-dw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11539785421/job/32119848567"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHen38xQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11539785216/job/32119848133"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHen38qQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11539785219/job/32119848105"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHen3-Mw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11539785421/job/32119848499"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHen38dw",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11539785219/job/32119848055"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHen38ig",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11539785216/job/32119848074"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHen39Eg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11539785216/job/32119848210"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHen5jag",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11539785219/job/32119874410"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHen4JrA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/32119851436"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHen4aLQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=15993&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "79976abf69545a61ff983f87ff1a4286f6239940",
                "additions": 3,
                "deletions": 3,
                "committedDate": "2024-10-27T15:20:28Z",
                "author": {
                  "name": "YaÃ«l Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHerubwQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11541645653/job/32123886529"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHerubnw",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11541645652/job/32123886495"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHerubHw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11541645552/job/32123886367"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHerubLQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11541645553/job/32123886381"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHerubog",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11541645654/job/32123886498"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHerubeA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11541645552/job/32123886456"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHerua4g",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11541645553/job/32123886306"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHerub8w",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11541645654/job/32123886579"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHeruajQ",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11541645553/job/32123886221"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHeruaqg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11541645552/job/32123886250"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHerub8A",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11541645552/job/32123886576"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHerxQWw",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11541645553/job/32123932763"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHerurmQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/32123890585"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHervCbQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=15993&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "50e8213b6d828a359da5ec99c340f3b965b1fb53",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2024-10-27T15:31:39Z",
                "author": {
                  "name": "YaÃ«l Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHer47ZQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11541723510/job/32124058469"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHer47Sw",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11541723506/job/32124058443"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHer458A",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11541723305/job/32124058096"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHer46MA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11541723301/job/32124058160"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHer47oQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11541723507/job/32124058529"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHer46Sw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11541723305/job/32124058187"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHer45gw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11541723301/job/32124057987"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHer47SQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11541723507/job/32124058441"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHer455Q",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11541723301/job/32124058085"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHer45lg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11541723305/job/32124058006"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHer46mA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11541723305/job/32124058264"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHer9AxA",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11541723301/job/32124125380"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHer5PlQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/32124063637"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHer5bPw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=15993&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "7eeb6587291957734a209011fdea2b6ec7135068",
                "additions": 8,
                "deletions": 16,
                "committedDate": "2024-10-27T16:47:57Z",
                "author": {
                  "name": "YaÃ«l Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHes6ylw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11542203538/job/32125137559"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHes6ypA",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11542203539/job/32125137572"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHes6w3Q",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11542203309/job/32125137117"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHes6w4w",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11542203310/job/32125137123"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHes6zDQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11542203532/job/32125137677"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHes6xIA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11542203309/job/32125137184"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHes6xGA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11542203310/job/32125137176"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHes6ynA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11542203532/job/32125137564"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHes6xdg",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11542203310/job/32125137270"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHes6xcg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11542203309/job/32125137266"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHes6xtw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11542203309/job/32125137335"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHes-c2w",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11542203310/job/32125197531"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHes7D0Q",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/32125141969"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHes7T9w",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=15993&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "d4952ac5b9288ae0dc780f328c9b6649aa20d7bb",
                "additions": 4,
                "deletions": 4,
                "committedDate": "2024-10-27T17:46:11Z",
                "author": {
                  "name": "YaÃ«l Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHetrxpw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11542575589/job/32125940135"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHetrxdA",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11542575583/job/32125940084"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHetrwgg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11542575442/job/32125939842"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHetrwhQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11542575445/job/32125939845"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHetrx0A",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11542575581/job/32125940176"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHetrw-A",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11542575442/job/32125939960"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHetrxOQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11542575445/job/32125940025"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHetrxhQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11542575581/job/32125940101"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHetrwzQ",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11542575445/job/32125939917"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHetrwtg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11542575442/job/32125939894"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHetrxTA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11542575442/job/32125940044"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHetssRQ",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11542575445/job/32125955141"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHetr_dQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/32125943669"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHetsKZA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=15993&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-08-20T08:10:29Z",
        "deletions": 1493,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/AlgebraicGeometry/AffineScheme.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/AlgebraicGeometry/Gluing.lean",
              "additions": 3,
              "deletions": 4
            },
            {
              "path": "Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/AlgebraicGeometry/Morphisms/Immersion.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/AlgebraicGeometry/Morphisms/IsIso.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/AlgebraicGeometry/Morphisms/OpenImmersion.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/AlgebraicGeometry/Morphisms/Preimmersion.lean",
              "additions": 14,
              "deletions": 11
            },
            {
              "path": "Mathlib/AlgebraicGeometry/Morphisms/QuasiSeparated.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/AlgebraicGeometry/Morphisms/UnderlyingMap.lean",
              "additions": 8,
              "deletions": 8
            },
            {
              "path": "Mathlib/AlgebraicGeometry/Noetherian.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/AlgebraicGeometry/OpenImmersion.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/AlgebraicGeometry/PrimeSpectrum/Basic.lean",
              "additions": 21,
              "deletions": 17
            },
            {
              "path": "Mathlib/AlgebraicGeometry/PrimeSpectrum/TensorProduct.lean",
              "additions": 11,
              "deletions": 7
            },
            {
              "path": "Mathlib/AlgebraicGeometry/Properties.lean",
              "additions": 5,
              "deletions": 5
            },
            {
              "path": "Mathlib/AlgebraicGeometry/ResidueField.lean",
              "additions": 2,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/CStarAlgebra/ContinuousFunctionalCalculus/Instances.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Analysis/CStarAlgebra/ContinuousFunctionalCalculus/Integral.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/CStarAlgebra/ContinuousFunctionalCalculus/NonUnital.lean",
              "additions": 2,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/CStarAlgebra/ContinuousFunctionalCalculus/Order.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/CStarAlgebra/ContinuousFunctionalCalculus/Restrict.lean",
              "additions": 11,
              "deletions": 11
            },
            {
              "path": "Mathlib/Analysis/CStarAlgebra/ContinuousFunctionalCalculus/Unique.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Analysis/CStarAlgebra/ContinuousFunctionalCalculus/Unital.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Analysis/CStarAlgebra/Matrix.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Calculus/FDeriv/Analytic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Calculus/LineDeriv/IntegrationByParts.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Complex/ReImTopology.lean",
              "additions": 1,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/Complex/UpperHalfPlane/Metric.lean",
              "additions": 2,
              "deletions": 3
            },
            {
              "path": "Mathlib/Analysis/Complex/UpperHalfPlane/Topology.lean",
              "additions": 7,
              "deletions": 6
            },
            {
              "path": "Mathlib/Analysis/Convex/Intrinsic.lean",
              "additions": 1,
              "deletions": 3
            },
            {
              "path": "Mathlib/Analysis/Convolution.lean",
              "additions": 2,
              "deletions": 3
            },
            {
              "path": "Mathlib/Analysis/LocallyConvex/Bounded.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/LocallyConvex/WithSeminorms.lean",
              "additions": 4,
              "deletions": 3
            },
            {
              "path": "Mathlib/Analysis/Normed/Algebra/Spectrum.lean",
              "additions": 1,
              "deletions": 3
            },
            {
              "path": "Mathlib/Analysis/Normed/Group/BallSphere.lean",
              "additions": 4,
              "deletions": 6
            },
            {
              "path": "Mathlib/Analysis/Normed/Module/WeakDual.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Normed/Operator/LinearIsometry.lean",
              "additions": 5,
              "deletions": 3
            },
            {
              "path": "Mathlib/Analysis/Normed/Operator/WeakOperatorTopology.lean",
              "additions": 8,
              "deletions": 5
            },
            {
              "path": "Mathlib/Analysis/Normed/Ring/Units.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/NormedSpace/Multilinear/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/NormedSpace/OperatorNorm/NormedSpace.lean",
              "additions": 6,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/SpecialFunctions/Exp.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/SpecialFunctions/Log/ENNRealLogExp.lean",
              "additions": 3,
              "deletions": 5
            },
            {
              "path": "Mathlib/CategoryTheory/Extensive.lean",
              "additions": 5,
              "deletions": 6
            },
            {
              "path": "Mathlib/CategoryTheory/Galois/Topology.lean",
              "additions": 8,
              "deletions": 6
            },
            {
              "path": "Mathlib/Condensed/TopComparison.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Geometry/Manifold/ChartedSpace.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Geometry/Manifold/ContMDiff/Basic.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Geometry/Manifold/SmoothManifoldWithCorners.lean",
              "additions": 7,
              "deletions": 5
            },
            {
              "path": "Mathlib/Geometry/Manifold/WhitneyEmbedding.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Geometry/RingedSpace/LocallyRingedSpace.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Geometry/RingedSpace/OpenImmersion.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/Geometry/RingedSpace/PresheafedSpace.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Geometry/RingedSpace/PresheafedSpace/Gluing.lean",
              "additions": 2,
              "deletions": 4
            },
            {
              "path": "Mathlib/Geometry/RingedSpace/SheafedSpace.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Geometry/RingedSpace/Stalks.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/LinearAlgebra/Matrix/HermitianFunctionalCalculus.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.lean",
              "additions": 15,
              "deletions": 13
            },
            {
              "path": "Mathlib/MeasureTheory/Constructions/BorelSpace/Metric.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/MeasureTheory/Function/LpSpace.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/MeasureTheory/Function/SimpleFuncDenseLp.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/MeasureTheory/Function/StronglyMeasurable/Basic.lean",
              "additions": 6,
              "deletions": 3
            },
            {
              "path": "Mathlib/MeasureTheory/Function/StronglyMeasurable/Lemmas.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/MeasureTheory/Group/Measure.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/MeasureTheory/Integral/Bochner.lean",
              "additions": 4,
              "deletions": 5
            },
            {
              "path": "Mathlib/MeasureTheory/Integral/IntegralEqImproper.lean",
              "additions": 6,
              "deletions": 7
            },
            {
              "path": "Mathlib/MeasureTheory/Integral/SetIntegral.lean",
              "additions": 5,
              "deletions": 5
            },
            {
              "path": "Mathlib/MeasureTheory/Measure/DiracProba.lean",
              "additions": 7,
              "deletions": 4
            },
            {
              "path": "Mathlib/MeasureTheory/Measure/FiniteMeasure.lean",
              "additions": 10,
              "deletions": 8
            },
            {
              "path": "Mathlib/MeasureTheory/Measure/LevyProkhorovMetric.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean",
              "additions": 11,
              "deletions": 9
            },
            {
              "path": "Mathlib/NumberTheory/Modular.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/RingTheory/Ideal/QuotientOperations.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/AlexandrovDiscrete.lean",
              "additions": 3,
              "deletions": 4
            },
            {
              "path": "Mathlib/Topology/Algebra/ConstMulAction.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/Algebra/Constructions.lean",
              "additions": 25,
              "deletions": 21
            },
            {
              "path": "Mathlib/Topology/Algebra/Constructions/DomMulAct.lean",
              "additions": 27,
              "deletions": 25
            },
            {
              "path": "Mathlib/Topology/Algebra/ContinuousMonoidHom.lean",
              "additions": 23,
              "deletions": 20
            },
            {
              "path": "Mathlib/Topology/Algebra/Group/Basic.lean",
              "additions": 14,
              "deletions": 11
            },
            {
              "path": "Mathlib/Topology/Algebra/Group/Quotient.lean",
              "additions": 2,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Algebra/GroupWithZero.lean",
              "additions": 5,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/Algebra/InfiniteSum/Basic.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/Topology/Algebra/Module/Alternating/Topology.lean",
              "additions": 21,
              "deletions": 15
            },
            {
              "path": "Mathlib/Topology/Algebra/Module/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Algebra/Module/FiniteDimension.lean",
              "additions": 3,
              "deletions": 4
            },
            {
              "path": "Mathlib/Topology/Algebra/Module/ModuleTopology.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Algebra/Module/Multilinear/Topology.lean",
              "additions": 17,
              "deletions": 10
            },
            {
              "path": "Mathlib/Topology/Algebra/Module/StrongTopology.lean",
              "additions": 29,
              "deletions": 23
            },
            {
              "path": "Mathlib/Topology/Algebra/Module/UniformConvergence.lean",
              "additions": 7,
              "deletions": 8
            },
            {
              "path": "Mathlib/Topology/Algebra/Module/WeakBilin.lean",
              "additions": 7,
              "deletions": 4
            },
            {
              "path": "Mathlib/Topology/Algebra/Module/WeakDual.lean",
              "additions": 1,
              "deletions": 3
            },
            {
              "path": "Mathlib/Topology/Algebra/Monoid.lean",
              "additions": 7,
              "deletions": 8
            },
            {
              "path": "Mathlib/Topology/Algebra/MulAction.lean",
              "additions": 5,
              "deletions": 5
            },
            {
              "path": "Mathlib/Topology/Algebra/Nonarchimedean/Basic.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/Algebra/ProperAction/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Algebra/Ring/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Algebra/Ring/Ideal.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Topology/Algebra/SeparationQuotient/Section.lean",
              "additions": 8,
              "deletions": 3
            },
            {
              "path": "Mathlib/Topology/Algebra/StarSubalgebra.lean",
              "additions": 11,
              "deletions": 6
            },
            {
              "path": "Mathlib/Topology/Algebra/UniformField.lean",
              "additions": 2,
              "deletions": 2
            }
          ]
        },
        "headRefName": "topology_inducing",
        "headRefOid": "d4952ac5b9288ae0dc780f328c9b6649aa20d7bb",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c540qc3",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
              "color": "8A6A1C",
              "name": "blocked-by-other-PR"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJbOw",
              "color": "33DBEC",
              "name": "t-topology"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6GOZtg",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "urkud"
              },
              "submittedAt": "2024-08-21T20:51:03Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 15993,
        "potentialMergeCommit": {
          "oid": "0fc34190bd7c9a8b188f2cf7b4544313336a47c6"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6GOZtg",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "urkud"
              },
              "submittedAt": "2024-08-21T20:51:03Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6GOgwb",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-08-21T21:10:34Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5m3Lbv",
                    "body": "Why do you move a file in the same PR?",
                    "createdAt": "2024-08-21T20:51:03Z",
                    "author": {
                      "login": "urkud"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5m3P14",
                    "body": "Oh I guess that should be a preliminary PR\n\nI just wanted the file name to match the predicate name",
                    "createdAt": "2024-08-21T21:10:34Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjE0MDkwNTkz",
              "login": "YaelDillies"
            },
            {
              "id": "U_kgDOCsITAQ",
              "login": "mathlib4-dependent-issues-bot"
            },
            {
              "id": "MDQ6VXNlcjE4ODgxMw==",
              "login": "urkud"
            },
            {
              "id": "U_kgDOBcsTTQ",
              "login": "leanprover-community-bot-assistant"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHetrxpw",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11542575589/job/32125940135"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHetrxdA",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11542575583/job/32125940084"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHetrwgg",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11542575442/job/32125939842"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHetrwhQ",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11542575445/job/32125939845"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHetrx0A",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11542575581/job/32125940176"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHetrw-A",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11542575442/job/32125939960"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHetrxOQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11542575445/job/32125940025"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHetrxhQ",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11542575581/job/32125940101"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHetrwzQ",
                "name": "Build",
                "conclusion": "FAILURE",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11542575445/job/32125939917"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHetrwtg",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11542575442/job/32125939894"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHetrxTA",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11542575442/job/32125940044"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHetssRQ",
                "name": "Post-CI job",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11542575445/job/32125955141"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHetr_dQ",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/32125943669"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHetsKZA",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=15993&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "chore(Topology): Namespace `Inducing`, `Embedding`...",
        "updatedAt": "2024-10-27T17:47:00Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/15993",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAAM-8v06",
              "createdAt": "2024-08-20T08:10:44Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAAM-8v1E",
              "createdAt": "2024-08-20T08:10:44Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJbOw",
                "name": "t-topology"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6I_GFp",
              "createdAt": "2024-08-20T08:11:09Z",
              "body": "### PR summary [d4952ac5b9](https://github.com/leanprover-community/mathlib4/pull/15993/commits/d4952ac5b9288ae0dc780f328c9b6649aa20d7bb)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ EquicontinuousOn.isInducing_uniformOnFun_iff_pi`\n`+ IsEmbedding`\n`+ IsEmbedding.comapMetricSpace`\n`+ IsEmbedding.inl`\n`+ IsEmbedding.inr`\n`+ IsEmbedding.isOpenEmbedding_of_surjective`\n`+ IsEmbedding.isSeparable_preimage`\n`+ IsEmbedding.to_isometry`\n`+ IsInducing`\n`+ IsInducing.comp`\n`+ IsInducing.id`\n`+ IsInducing.induced`\n`+ IsInducing.isSeparable_preimage`\n`+ IsInducing.of_comp`\n`+ IsInducing.of_comp_iff`\n`+ IsOpenEmbedding.isEmbedding`\n`+ IsOpenEmbedding.isInducing`\n`+ IsOpenEmbedding.isOpen_iff_image_isOpen`\n`+ IsOpenEmbedding.isOpen_iff_preimage_isOpen`\n`+ IsOpenEmbedding.of_continuous_injective_isOpenMap`\n`+ IsOpenEmbedding.of_isEmbedding`\n`+ IsOpenEmbedding.of_isEmbedding_isOpenMap`\n`+ IsQuasiSeparated.image_of_isEmbedding`\n`+ IsRestrictGen`\n`+ IsTopologicalBasis.isInducing`\n`+ IsUniformEmbedding.isClosedEmbedding`\n`+ IsUniformEmbedding.isEmbedding`\n`+ IsUniformInducing.isInducing`\n`+ Nobeling.isClosedEmbedding`\n`+ PrimeSpectrum.isEmbedding_tensorProductTo_of_surjectiveOnStalks`\n`+ PrimeSpectrum.isEmbedding_tensorProductTo_of_surjectiveOnStalks_aux`\n`+ Scheme.Hom.isEmbedding`\n`+ Set.restrictPreimage_isEmbedding`\n`+ Set.restrictPreimage_isInducing`\n`+ StrictMono.isEmbedding_of_ordConnected`\n`+ Topology.IsClosedEmbedding.LindelofSpace`\n`+ Topology.IsClosedEmbedding.compactSpace`\n`+ Topology.IsClosedEmbedding.inl`\n`+ Topology.IsClosedEmbedding.inr`\n`+ Topology.IsClosedEmbedding.isCompact_preimage`\n`+ Topology.IsClosedEmbedding.isLindelof_preimage`\n`+ Topology.IsClosedEmbedding.isProperMap`\n`+ Topology.IsClosedEmbedding.locallyCompactSpace`\n`+ Topology.IsClosedEmbedding.measurableEmbedding`\n`+ Topology.IsClosedEmbedding.nonLindelofSpace`\n`+ Topology.IsClosedEmbedding.noncompactSpace`\n`+ Topology.IsClosedEmbedding.normalSpace`\n`+ Topology.IsClosedEmbedding.paracompactSpace`\n`+ Topology.IsClosedEmbedding.quasiSober`\n`+ Topology.IsClosedEmbedding.restrictPreimage`\n`+ Topology.IsClosedEmbedding.sigmaCompactSpace`\n`+ Topology.IsClosedEmbedding.sigmaMk`\n`+ Topology.IsClosedEmbedding.subtypeVal`\n`+ Topology.IsClosedEmbedding.t4Space`\n`+ Topology.IsClosedEmbedding.tendsto_coLindelof`\n`+ Topology.IsClosedEmbedding.tendsto_cocompact`\n`+ Topology.IsClosedEmbedding.uliftDown`\n`+ Topology.IsClosedEmbedding.weaklyLocallyCompactSpace`\n`+ Topology.IsEmbedding.codRestrict`\n`+ Topology.IsEmbedding.comapUniformSpace`\n`+ Topology.IsEmbedding.completelyNormalSpace`\n`+ Topology.IsEmbedding.continuousOn_iff`\n`+ Topology.IsEmbedding.inclusion`\n`+ Topology.IsEmbedding.inl`\n`+ Topology.IsEmbedding.inr`\n`+ Topology.IsEmbedding.isCompact_iff`\n`+ Topology.IsEmbedding.isLindelof_iff`\n`+ Topology.IsEmbedding.isLocallyClosed_iff`\n`+ Topology.IsEmbedding.isSigmaCompact_iff`\n`+ Topology.IsEmbedding.isTotallyDisconnected`\n`+ Topology.IsEmbedding.isTotallyDisconnected_image`\n`+ Topology.IsEmbedding.isTotallyDisconnected_range`\n`+ Topology.IsEmbedding.map_nhdsWithin_eq`\n`+ Topology.IsEmbedding.measurableEmbedding`\n`+ Topology.IsEmbedding.prodMap`\n`+ Topology.IsEmbedding.restrictPreimage`\n`+ Topology.IsEmbedding.secondCountableTopology`\n`+ Topology.IsEmbedding.separableSpace`\n`+ Topology.IsEmbedding.sigmaMk`\n`+ Topology.IsEmbedding.subtypeVal`\n`+ Topology.IsEmbedding.t0Space`\n`+ Topology.IsEmbedding.t1Space`\n`+ Topology.IsEmbedding.t25Space`\n`+ Topology.IsEmbedding.t2Space`\n`+ Topology.IsEmbedding.t3Space`\n`+ Topology.IsEmbedding.t5Space`\n`+ Topology.IsEmbedding.toPullbackDiag`\n`+ Topology.IsEmbedding.uliftDown`\n`+ Topology.IsInducing.alexandrovDiscrete`\n`+ Topology.IsInducing.codRestrict`\n`+ Topology.IsInducing.comapPseudoMetricSpace`\n`+ Topology.IsInducing.continuousConstSMul`\n`+ Topology.IsInducing.continuousInv`\n`+ Topology.IsInducing.continuousMul`\n`+ Topology.IsInducing.continuousOn_iff`\n`+ Topology.IsInducing.continuousSMul`\n`+ Topology.IsInducing.continuousWithinAt_iff`\n`+ Topology.IsInducing.frechetUrysohnSpace`\n`+ Topology.IsInducing.generalizingMap`\n`+ Topology.IsInducing.hasProd_iff`\n`+ Topology.IsInducing.injective`\n`+ Topology.IsInducing.inseparable_iff`\n`+ Topology.IsInducing.isClosedMap`\n`+ Topology.IsInducing.isCompact_iff`\n`+ Topology.IsInducing.isCompact_preimage`\n`+ Topology.IsInducing.isCompact_preimage'`\n`+ Topology.IsInducing.isCompact_preimage_iff`\n`+ Topology.IsInducing.isEmbedding`\n`+ Topology.IsInducing.isLindelof_iff`\n`+ Topology.IsInducing.isLindelof_preimage`\n`+ Topology.IsInducing.isLocallyClosed_iff`\n`+ Topology.IsInducing.isOpenMap`\n`+ Topology.IsInducing.isPathConnected_iff`\n`+ Topology.IsInducing.isPreconnected_image`\n`+ Topology.IsInducing.isSigmaCompact_iff`\n`+ Topology.IsInducing.joinedIn_image`\n`+ Topology.IsInducing.locallyCompactSpace`\n`+ Topology.IsInducing.multipliable_iff_tprod_comp_mem_range`\n`+ Topology.IsInducing.of_codRestrict`\n`+ Topology.IsInducing.prodMap`\n`+ Topology.IsInducing.r0Space`\n`+ Topology.IsInducing.r1Space`\n`+ Topology.IsInducing.regularSpace`\n`+ Topology.IsInducing.restrictPreimage`\n`+ Topology.IsInducing.secondCountableTopology`\n`+ Topology.IsInducing.specializes_iff`\n`+ Topology.IsInducing.specializingMap`\n`+ Topology.IsInducing.subtypeVal`\n`+ Topology.IsInducing.topologicalGroup`\n`+ Topology.IsInducing.withSeminorms`\n`+ Topology.IsOpenEmbedding.coborder_preimage`\n`+ Topology.IsOpenEmbedding.compatiblePreserving`\n`+ Topology.IsOpenEmbedding.functor_isContinuous`\n`+ Topology.IsOpenEmbedding.functor_obj_injective`\n`+ Topology.IsOpenEmbedding.inl`\n`+ Topology.IsOpenEmbedding.inr`\n`+ Topology.IsOpenEmbedding.isLocalHomeomorph`\n`+ Topology.IsOpenEmbedding.isQuasiSeparated_iff`\n`+ Topology.IsOpenEmbedding.locPathConnectedSpace`\n`+ Topology.IsOpenEmbedding.locallyCompactSpace`\n`+ Topology.IsOpenEmbedding.locallyConnectedSpace`\n`+ Topology.IsOpenEmbedding.map_nhdsWithin_preimage_eq`\n`+ Topology.IsOpenEmbedding.measurableEmbedding`\n`+ Topology.IsOpenEmbedding.prodMap`\n`+ Topology.IsOpenEmbedding.quasiSober`\n`+ Topology.IsOpenEmbedding.restrictPreimage`\n`+ Topology.IsOpenEmbedding.sigmaMk`\n`+ Topology.IsOpenEmbedding.singleton_smoothManifoldWithCorners`\n`+ Topology.IsQuotientMap.continuousOn_isOpen_iff`\n`+ Topology.IsQuotientMap.continuous_lift_prod_left`\n`+ Topology.IsQuotientMap.continuous_lift_prod_right`\n`+ Topology.IsQuotientMap.image_connectedComponent`\n`+ Topology.IsQuotientMap.isClopen_preimage`\n`+ Topology.IsQuotientMap.preimage_connectedComponent`\n`+ Topology.IsQuotientMap.restrictPreimage_isOpen`\n`+ Topology.IsQuotientMap.sequentialSpace`\n`+ Topology.isEmbedding_sigmaMap`\n`+ Topology.isInducing_const_prod`\n`+ Topology.isInducing_prod_const`\n`+ Topology.isInducing_sigmaMap`\n`+ Topology.isOpenEmbedding_sigmaMap`\n`+ UniformInducing.isInducing`\n`+ Units.isEmbedding_val`\n`+ Units.isEmbedding_valâ‚€`\n`+ _root_.Function.Injective.isEmbedding_induced`\n`+ _root_.Function.LeftInverse.embedding`\n`+ _root_.Function.LeftInverse.isEmbedding`\n`+ _root_.Topology.IsClosedEmbedding.integral_map`\n`+ _root_.Topology.IsClosedEmbedding.polishSpace`\n`+ _root_.Topology.IsClosedEmbedding.setIntegral_map`\n`+ _root_.Topology.IsClosedEmbedding.set_integral_map`\n`+ _root_.Topology.IsEmbedding.aestronglyMeasurable_comp_iff`\n`+ _root_.Topology.IsEmbedding.firstCountableTopology`\n`+ _root_.Topology.IsEmbedding.metrizableSpace`\n`+ _root_.Topology.IsEmbedding.toHomeomorph_of_surjective`\n`+ _root_.Topology.IsInducing.firstCountableTopology`\n`+ _root_.Topology.IsInducing.noetherianSpace`\n`+ _root_.Topology.IsInducing.pseudoMetrizableSpace`\n`+ _root_.Topology.IsQuotientMap.secondCountableTopology`\n`+ _root_.Topology.IsQuotientMap.separableSpace`\n`+ _root_.openEmbedding_id`\n`+ antilipschitz_of_isEmbedding`\n`+ comap_isInducing_of_surjective`\n`+ completeSpace_of_isRestrictGen`\n`+ discreteTopology`\n`+ exists_isInducing_l_infty`\n`+ fst_isEmbedding_of_right`\n`+ induced`\n`+ instance : (topologically IsEmbedding).RespectsIso`\n`+ instance : CompactSpace (Aut F) := (autEmbedding_isClosedEmbedding F).compactSpace`\n`+ instance : ContinuousMul Î±Ë£ := isInducing_embedProduct.continuousMul (embedProduct Î±)`\n`+ instance : ContinuousNeg (sphere (0 : E) r) := IsInducing.subtypeVal.continuousNeg fun _ => rfl`\n`+ instance : PolishSpace EReal := ENNReal.logOrderIso.symm.toHomeomorph.isClosedEmbedding.polishSpace`\n`+ instance [R0Space R] : R0Space C(X, R)â‚€ := isEmbedding_toContinuousMap.r0Space`\n`+ instance [R1Space R] : R1Space C(X, R)â‚€ := isEmbedding_toContinuousMap.r1Space`\n`+ instance [RegularSpace R] : RegularSpace C(X, R)â‚€ := isEmbedding_toContinuousMap.regularSpace`\n`+ instance [T0Space R] : T0Space C(X, R)â‚€ := isEmbedding_toContinuousMap.t0Space`\n`+ instance [T1Space R] : T1Space C(X, R)â‚€ := isEmbedding_toContinuousMap.t1Space`\n`+ instance [T2Space R] : T2Space C(X, R)â‚€ := isEmbedding_toContinuousMap.t2Space`\n`+ instance [T3Space R] : T3Space C(X, R)â‚€ := isEmbedding_toContinuousMap.t3Space`\n`+ instance {p : X â†’ Prop} : R0Space {x // p x} := IsInducing.subtypeVal.r0Space`\n`+ isClosed_iff_image_isClosed`\n`+ isClosed_iff_preimage_isClosed`\n`+ isDenseInducing`\n`+ isEmbedding_coe_ennreal`\n`+ isEmbedding_coe_real`\n`+ isEmbedding_diracProba`\n`+ isEmbedding_embedProduct`\n`+ isEmbedding_graph`\n`+ isEmbedding_iff_isInducing`\n`+ isEmbedding_iff_of_iSup_eq_top`\n`+ isEmbedding_inclusion`\n`+ isEmbedding_inducingFn`\n`+ isEmbedding_isLocalAtTarget`\n`+ isEmbedding_mk`\n`+ isEmbedding_mk_symm`\n`+ isEmbedding_natCast`\n`+ isEmbedding_of_pullback`\n`+ isEmbedding_outCLM`\n`+ isEmbedding_postcomp`\n`+ isEmbedding_prodMap`\n`+ isEmbedding_prodMk`\n`+ isEmbedding_pullback_to_prod`\n`+ isEmbedding_sigmaMk_comp`\n`+ isEmbedding_toContinuousMultilinearMap`\n`+ isEmbedding_toUniformOnFun`\n`+ isEmbedding_toWeakDualBCNN`\n`+ isEmbedding_val_mk'`\n`+ isHomeomorph_iff_isEmbedding_surjective`\n`+ isInducing_embedProduct`\n`+ isInducing_iff_nhds`\n`+ isInducing_mk`\n`+ isInducing_mk_symm`\n`+ isInducing_postcomp`\n`+ isInducing_prod_map`\n`+ isInducing_pullback_to_prod`\n`+ isInducing_toContinuousMap`\n`+ isInducing_toProd`\n`+ isOpenEmbedding_iff_continuous_injective_isOpenMap`\n`+ isOpenEmbedding_iff_isEmbedding_isOpenMap`\n`+ isOpenEmbedding_of_pullback`\n`+ localization_comap_isEmbedding`\n`+ localization_comap_isInducing`\n`+ mk'`\n`+ ofIsEmbedding`\n`+ of_continuous_injective_isClosedMap`\n`+ of_isEmbedding_isClosedMap`\n`+ of_leftInverse`\n`+ productOfMemOpens_isEmbedding`\n`+ productOfMemOpens_isInducing`\n`+ pullback_map_isEmbedding`\n`+ snd_isEmbedding_of_left`\n`+ t25Space`\n`+ t5Space`\n`+ toFiniteMeasure_isEmbedding`\n`+ totalSpaceMk_isEmbedding`\n`+ totalSpaceMk_isInducing`\n`++ isEmbedding_coeFn`\n`++ isEmbedding_toContinuousMap`\n`+++ id`\n`+++ isEmbedding_coe`\n`+++ isEmbedding_restrictScalars`\n`+++++ isInducing`\n`++++++++ isEmbedding`\n`++++++------ embedding`\n`+++-- continuous`\n`+++-- of_comp_iff`\n`+++-- tendsto_nhds_iff`\n`+++--- embedding_coe`\n`+++--- embedding_restrictScalars`\n`++- Embedding.of_comp_iff`\n`++- closure_eq_preimage_closure_image`\n`++- comp`\n`++- continuous_iff`\n`++- map_nhds_eq`\n`++- map_nhds_of_mem`\n`++- of_comp`\n`++-- completeSpace`\n`++-- embedding_coeFn`\n`++-- embedding_inclusion`\n`++-- embedding_inr`\n`++-- embedding_toContinuousMap`\n`++-- postcomp_isUniformEmbedding`\n`+-+ of_subsingleton`\n`+-+-+- t2Space`\n`+-- embedding_inl`\n`+--+ instT2Space`\n`+--+ isClosed_iff`\n`+--+ isOpen_iff`\n`- DenseRange.prod_map`\n`- Embedding.continuous`\n`- Embedding.secondCountableTopology`\n`- Embedding.separableSpace`\n`- Embedding.tendsto_nhds_iff`\n`- EquicontinuousOn.inducing_uniformOnFun_iff_pi`\n`- Function.LeftInverse.embedding`\n`- Inducing`\n`- Inducing.alexandrovDiscrete`\n`- Inducing.codRestrict`\n`- Inducing.comapPseudoMetricSpace`\n`- Inducing.comp`\n`- Inducing.continuousConstSMul`\n`- Inducing.continuousInv`\n`- Inducing.continuousMul`\n`- Inducing.continuousOn_iff`\n`- Inducing.continuousSMul`\n`- Inducing.continuousWithinAt_iff`\n`- Inducing.frechetUrysohnSpace`\n`- Inducing.generalizingMap`\n`- Inducing.hasProd_iff`\n`- Inducing.injective`\n`- Inducing.inseparable_iff`\n`- Inducing.isClosedMap`\n`- Inducing.isCompact_iff`\n`- Inducing.isCompact_preimage`\n`- Inducing.isCompact_preimage'`\n`- Inducing.isCompact_preimage_iff`\n`- Inducing.isLindelof_iff`\n`- Inducing.isLindelof_preimage`\n`- Inducing.isLocallyClosed_iff`\n`- Inducing.isOpenMap`\n`- Inducing.isPathConnected_iff`\n`- Inducing.isPreconnected_image`\n`- Inducing.isSigmaCompact_iff`\n`- Inducing.joinedIn_image`\n`- Inducing.locallyCompactSpace`\n`- Inducing.multipliable_iff_tprod_comp_mem_range`\n`- Inducing.of_codRestrict`\n`- Inducing.of_comp_iff`\n`- Inducing.r0Space`\n`- Inducing.r1Space`\n`- Inducing.regularSpace`\n`- Inducing.restrictPreimage`\n`- Inducing.secondCountableTopology`\n`- Inducing.specializes_iff`\n`- Inducing.specializingMap`\n`- Inducing.topologicalGroup`\n`- Inducing.withSeminorms`\n`- IsClosedEmbedding.LindelofSpace`\n`- IsClosedEmbedding.compactSpace`\n`- IsClosedEmbedding.isCompact_preimage`\n`- IsClosedEmbedding.isLindelof_preimage`\n`- IsClosedEmbedding.isProperMap`\n`- IsClosedEmbedding.locallyCompactSpace`\n`- IsClosedEmbedding.measurableEmbedding`\n`- IsClosedEmbedding.nonLindelofSpace`\n`- IsClosedEmbedding.noncompactSpace`\n`- IsClosedEmbedding.normalSpace`\n`- IsClosedEmbedding.paracompactSpace`\n`- IsClosedEmbedding.quasiSober`\n`- IsClosedEmbedding.restrictPreimage`\n`- IsClosedEmbedding.sigmaCompactSpace`\n`- IsClosedEmbedding.subtypeVal`\n`- IsClosedEmbedding.t4Space`\n`- IsClosedEmbedding.tendsto_coLindelof`\n`- IsClosedEmbedding.tendsto_cocompact`\n`- IsClosedEmbedding.weaklyLocallyCompactSpace`\n`- IsOpenEmbedding.coborder_preimage`\n`- IsOpenEmbedding.compatiblePreserving`\n`- IsOpenEmbedding.functor_isContinuous`\n`- IsOpenEmbedding.functor_obj_injective`\n`- IsOpenEmbedding.isLocalHomeomorph`\n`- IsOpenEmbedding.isQuasiSeparated_iff`\n`- IsOpenEmbedding.locPathConnectedSpace`\n`- IsOpenEmbedding.locallyCompactSpace`\n`- IsOpenEmbedding.locallyConnectedSpace`\n`- IsOpenEmbedding.map_nhdsWithin_preimage_eq`\n`- IsOpenEmbedding.measurableEmbedding`\n`- IsOpenEmbedding.open_iff_image_open`\n`- IsOpenEmbedding.open_iff_preimage_open`\n`- IsOpenEmbedding.prod`\n`- IsOpenEmbedding.prodMap`\n`- IsOpenEmbedding.quasiSober`\n`- IsOpenEmbedding.restrictPreimage`\n`- IsOpenEmbedding.singleton_smoothManifoldWithCorners`\n`- IsOpenMap.prod`\n`- IsQuotientMap.continuousOn_isOpen_iff`\n`- IsQuotientMap.continuous_lift_prod_left`\n`- IsQuotientMap.continuous_lift_prod_right`\n`- IsQuotientMap.image_connectedComponent`\n`- IsQuotientMap.isClopen_preimage`\n`- IsQuotientMap.preimage_connectedComponent`\n`- IsQuotientMap.restrictPreimage_isOpen`\n`- IsQuotientMap.sequentialSpace`\n`- IsTopologicalBasis.inducing`\n`- IsUniformEmbedding.toIsClosedEmbedding`\n`- IsUniformInducing.inducing`\n`- OpenEmbedding.continuousAt_iff`\n`- OpenEmbedding.map_nhds_eq`\n`- OpenEmbedding.prodMap`\n`- OpenEmbedding.tendsto_nhds_iff`\n`- OpenEmbedding.tendsto_nhds_iff'`\n`- PrimeSpectrum.embedding_tensorProductTo_of_surjectiveOnStalks_aux`\n`- QuotientMap.continuous_lift_prod_right`\n`- RestrictGenTopology`\n`- Set.restrictPreimage_inducing`\n`- ULift.isClosedEmbedding_down`\n`- UniformInducing.inducing`\n`- _root_.Inducing.firstCountableTopology`\n`- _root_.Inducing.isSeparable_preimage`\n`- _root_.Inducing.noetherianSpace`\n`- _root_.Inducing.pseudoMetrizableSpace`\n`- _root_.IsClosedEmbedding.integral_map`\n`- _root_.IsClosedEmbedding.of_continuous_injective_isClosedMap`\n`- _root_.IsClosedEmbedding.polishSpace`\n`- _root_.IsClosedEmbedding.setIntegral_map`\n`- _root_.IsClosedEmbedding.set_integral_map`\n`- _root_.IsQuotientMap.secondCountableTopology`\n`- _root_.IsQuotientMap.separableSpace`\n`- _root_.QuotientMap.secondCountableTopology`\n`- _root_.isClosedEmbedding_id`\n`- closed_iff_image_closed`\n`- closed_iff_preimage_closed`\n`- comap_inducing_of_surjective`\n`- completeSpace_of_restrictGenTopology`\n`- continuous_op`\n`- embedding_graph`\n`- embedding_isLocalAtTarget`\n`- embedding_prod_mk`\n`- exists_inducing_l_infty`\n`- inducing_const_prod`\n`- inducing_embedProduct`\n`- inducing_id`\n`- inducing_iff_nhds`\n`- inducing_induced`\n`- inducing_mk_symm`\n`- inducing_of_inducing_compose`\n`- inducing_postcomp`\n`- inducing_prod_const`\n`- inducing_prod_map`\n`- inducing_pullback_to_prod`\n`- inducing_sigma_map`\n`- inducing_subtype_val`\n`- inducing_toContinuousMap`\n`- inducing_toProd`\n`- instance : (topologically Embedding).RespectsIso`\n`- instance : CompactSpace (Aut F) := IsClosedEmbedding.compactSpace (autEmbedding_isClosedEmbedding F)`\n`- instance : ContinuousMul Î±Ë£`\n`- instance : ContinuousNeg (sphere (0 : E) r)`\n`- instance : PolishSpace EReal`\n`- instance [R0Space R] : R0Space C(X, R)â‚€ := embedding_toContinuousMap.r0Space`\n`- instance [R1Space R] : R1Space C(X, R)â‚€ := embedding_toContinuousMap.r1Space`\n`- instance [RegularSpace R] : RegularSpace C(X, R)â‚€ := embedding_toContinuousMap.regularSpace`\n`- instance [T0Space R] : T0Space C(X, R)â‚€ := embedding_toContinuousMap.t0Space`\n`- instance [T1Space R] : T1Space C(X, R)â‚€ := embedding_toContinuousMap.t1Space`\n`- instance [T2Space R] : T2Space C(X, R)â‚€ := embedding_toContinuousMap.t2Space`\n`- instance [T3Space R] : T3Space C(X, R)â‚€ := embedding_toContinuousMap.t3Space`\n`- instance {p : X â†’ Prop} : R0Space {x // p x} := inducing_subtype_val.r0Space`\n`- isClosedEmbedding_inl`\n`- isClosedEmbedding_inr`\n`- isClosedEmbedding_sigmaMk`\n`- isOpenEmbedding_id`\n`- isOpenEmbedding_iff_continuous_injective_open`\n`- isOpenEmbedding_inl`\n`- isOpenEmbedding_inr`\n`- isOpenEmbedding_of_continuous_injective_open`\n`- isOpenEmbedding_of_pullback_open_embeddings`\n`- isOpenEmbedding_sigmaMk`\n`- isOpenEmbedding_sigma_map`\n`- localization_comap_inducing`\n`- openEmbedding_id`\n`- openEmbedding_inl`\n`- openEmbedding_mk_symm`\n`- productOfMemOpens_inducing`\n`- to_openEmbedding`\n`- totalSpaceMk_inducing`\n`-+-+ instT3Space`\n`-- inducing`\n`--+ inducing_mk`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6GOZtg",
              "createdAt": "2024-08-21T20:51:03Z",
              "body": "",
              "author": {
                "login": "urkud"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANBrCEa",
              "createdAt": "2024-08-23T02:32:13Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAANB5Y8r",
              "createdAt": "2024-08-23T09:10:45Z"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANB52XV",
              "createdAt": "2024-08-23T09:21:05Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANB58Bt",
              "createdAt": "2024-08-23T09:22:58Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANHR_Qh",
              "createdAt": "2024-08-30T12:53:40Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANUDPzA",
              "createdAt": "2024-09-17T17:47:14Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "CommentDeletedEvent"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAANVlmE5",
              "createdAt": "2024-09-19T09:24:52Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANVo1OL",
              "createdAt": "2024-09-19T10:24:15Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANWGWsH",
              "createdAt": "2024-09-19T19:13:48Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAANW6inq",
              "createdAt": "2024-09-20T17:00:43Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANW6xF9",
              "createdAt": "2024-09-20T17:05:47Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANYtgPr",
              "createdAt": "2024-09-24T01:42:02Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAANY-db5",
              "createdAt": "2024-09-24T08:47:09Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANY_li6",
              "createdAt": "2024-09-24T09:06:23Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANZarhb",
              "createdAt": "2024-09-24T16:55:50Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAANaK1Uj",
              "createdAt": "2024-09-25T11:43:07Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANaLIPo",
              "createdAt": "2024-09-25T11:48:57Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANcTM2P",
              "createdAt": "2024-09-27T16:10:04Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANcx5Eg",
              "createdAt": "2024-09-28T16:43:36Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5ZU_o-",
              "createdAt": "2024-09-28T21:04:44Z",
              "source": {
                "id": "PR_kwDOFcwZ1c58_Ij6",
                "title": "[Merged by Bors] - chore: Rename `DenseInducing` to `IsDenseInducing`",
                "url": "https://github.com/leanprover-community/mathlib4/pull/17208"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5ZYGjv",
              "createdAt": "2024-09-29T07:32:13Z",
              "source": {
                "id": "PR_kwDOFcwZ1c59BPPr",
                "title": "[Merged by Bors] - chore: Rename `DenseEmbedding` to `IsDenseEmbedding`",
                "url": "https://github.com/leanprover-community/mathlib4/pull/17247"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANc9br6",
              "createdAt": "2024-09-29T07:47:28Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAANc9evg",
              "createdAt": "2024-09-29T07:53:07Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANc9qD7",
              "createdAt": "2024-09-29T08:14:19Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANdBfOP",
              "createdAt": "2024-09-29T15:32:04Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAANdvs8e",
              "createdAt": "2024-09-30T14:44:12Z"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5ZppQn",
              "createdAt": "2024-09-30T14:51:59Z",
              "source": {
                "id": "PR_kwDOFcwZ1c59Id7b",
                "title": "[Merged by Bors] - chore: Rename `UniformEmbedding` to `IsUniformEmbedding`",
                "url": "https://github.com/leanprover-community/mathlib4/pull/17295"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANdwZVs",
              "createdAt": "2024-09-30T14:55:07Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANdyDZj",
              "createdAt": "2024-09-30T15:22:41Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANdy4OM",
              "createdAt": "2024-09-30T15:35:19Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANgsxuL",
              "createdAt": "2024-10-03T16:33:22Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANg594s",
              "createdAt": "2024-10-03T21:47:44Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAANhIBAV",
              "createdAt": "2024-10-04T07:08:06Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANhILuO",
              "createdAt": "2024-10-04T07:12:22Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5awnP8",
              "createdAt": "2024-10-04T07:12:33Z",
              "source": {
                "id": "PR_kwDOFcwZ1c59lVXO",
                "title": "[Merged by Bors] - chore: Rename `UniformInducing` to `IsUniformInducing`",
                "url": "https://github.com/leanprover-community/mathlib4/pull/17398"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANhV7_Z",
              "createdAt": "2024-10-04T11:47:56Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANiBZz6",
              "createdAt": "2024-10-06T02:20:51Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAANjz01h",
              "createdAt": "2024-10-08T16:02:22Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANjz6eZ",
              "createdAt": "2024-10-08T16:04:03Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANj1ddw",
              "createdAt": "2024-10-08T16:31:23Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANkFJgK",
              "createdAt": "2024-10-08T23:40:50Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAANnWhec",
              "createdAt": "2024-10-13T07:23:43Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANnWmKd",
              "createdAt": "2024-10-13T07:34:38Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANnpJmr",
              "createdAt": "2024-10-14T02:49:27Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAANr8oLH",
              "createdAt": "2024-10-17T09:30:06Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANr-qi8",
              "createdAt": "2024-10-17T10:06:50Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANsAbQQ",
              "createdAt": "2024-10-17T10:41:35Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAANtFXqA",
              "createdAt": "2024-10-18T08:28:51Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANtFq_q",
              "createdAt": "2024-10-18T08:33:14Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5eHllT",
              "createdAt": "2024-10-18T08:43:18Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5_EnFF",
                "title": "[Merged by Bors] - chore: Rename `OpenEmbedding` to `IsOpenEmbedding`",
                "url": "https://github.com/leanprover-community/mathlib4/pull/17898"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANtG2sx",
              "createdAt": "2024-10-18T08:49:33Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANtPCpt",
              "createdAt": "2024-10-18T10:28:43Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANt2iXr",
              "createdAt": "2024-10-18T22:04:09Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5eWftn",
              "createdAt": "2024-10-19T07:22:37Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5_Kect",
                "title": "[Merged by Bors] - chore: Rename `ClosedEmbedding` to `IsClosedEmbedding`",
                "url": "https://github.com/leanprover-community/mathlib4/pull/17937"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANt9HpA",
              "createdAt": "2024-10-19T07:32:56Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAANt9YyW",
              "createdAt": "2024-10-19T07:54:39Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANt9ZC_",
              "createdAt": "2024-10-19T07:55:06Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANvROZl",
              "createdAt": "2024-10-20T14:22:24Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANvRRAx",
              "createdAt": "2024-10-20T14:26:56Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAANvfTy9",
              "createdAt": "2024-10-20T21:26:27Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANvfaaH",
              "createdAt": "2024-10-20T21:40:22Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANwPdvz",
              "createdAt": "2024-10-21T16:33:04Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANxNccZ",
              "createdAt": "2024-10-22T12:24:44Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAANxglV_",
              "createdAt": "2024-10-22T16:54:48Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANxhbvT",
              "createdAt": "2024-10-22T17:10:03Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAANxz9UP",
              "createdAt": "2024-10-22T23:18:30Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANx--nJ",
              "createdAt": "2024-10-23T03:23:23Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Q4ove",
              "createdAt": "2024-10-23T03:23:25Z",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#16087~~\n* ~~leanprover-community/mathlib4#17208~~\n* ~~leanprover-community/mathlib4#17247~~\n* ~~leanprover-community/mathlib4#17295~~\n* ~~leanprover-community/mathlib4#17398~~\n* ~~leanprover-community/mathlib4#17898~~\n* ~~leanprover-community/mathlib4#17937~~\n* ~~leanprover-community/mathlib4#18062~~\n* leanprover-community/mathlib4#18133\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (ðŸ¤–). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "author": {
                "login": "mathlib4-dependent-issues-bot"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANyAp58",
              "createdAt": "2024-10-23T03:46:11Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAANyWV-8",
              "createdAt": "2024-10-23T07:34:22Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANyWZyS",
              "createdAt": "2024-10-23T07:35:19Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANzeYOd",
              "createdAt": "2024-10-23T16:04:31Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAAN1UJAU",
              "createdAt": "2024-10-24T14:44:59Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            }
          ]
        }
      }
    }
  }
}
