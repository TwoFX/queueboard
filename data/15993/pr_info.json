{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 351,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "YaelDillies"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> Mathlib.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n- [x] depends on: #16087\r\n- [x] depends on: #17208\r\n- [x] depends on: #17247\r\n- [x] depends on: #17295\r\n- [x] depends on: #17398\r\n- [x] depends on: #17898\r\n- [x] depends on: #17937\r\n- [x] depends on: #18062\r\n- [x] depends on: #18133\r\n- [x] depends on: #18330\r\n- [x] depends on: #18398\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)",
        "changedFiles": 147,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6I_GFp",
              "body": "### PR summary [3056c89e6a](https://github.com/leanprover-community/mathlib4/pull/15993/commits/3056c89e6a8ac35a405db1c41fe7f7dcf94c7eb2)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ Topology.IsClosedEmbedding.LindelofSpace`\n`+ Topology.IsClosedEmbedding.compactSpace`\n`+ Topology.IsClosedEmbedding.inl`\n`+ Topology.IsClosedEmbedding.inr`\n`+ Topology.IsClosedEmbedding.isCompact_preimage`\n`+ Topology.IsClosedEmbedding.isLindelof_preimage`\n`+ Topology.IsClosedEmbedding.isProperMap`\n`+ Topology.IsClosedEmbedding.locallyCompactSpace`\n`+ Topology.IsClosedEmbedding.measurableEmbedding`\n`+ Topology.IsClosedEmbedding.nonLindelofSpace`\n`+ Topology.IsClosedEmbedding.noncompactSpace`\n`+ Topology.IsClosedEmbedding.normalSpace`\n`+ Topology.IsClosedEmbedding.paracompactSpace`\n`+ Topology.IsClosedEmbedding.quasiSober`\n`+ Topology.IsClosedEmbedding.restrictPreimage`\n`+ Topology.IsClosedEmbedding.sigmaCompactSpace`\n`+ Topology.IsClosedEmbedding.sigmaMk`\n`+ Topology.IsClosedEmbedding.subtypeVal`\n`+ Topology.IsClosedEmbedding.t4Space`\n`+ Topology.IsClosedEmbedding.tendsto_coLindelof`\n`+ Topology.IsClosedEmbedding.tendsto_cocompact`\n`+ Topology.IsClosedEmbedding.uliftDown`\n`+ Topology.IsClosedEmbedding.weaklyLocallyCompactSpace`\n`+ Topology.IsEmbedding.codRestrict`\n`+ Topology.IsEmbedding.comapMetricSpace`\n`+ Topology.IsEmbedding.comapUniformSpace`\n`+ Topology.IsEmbedding.completelyNormalSpace`\n`+ Topology.IsEmbedding.continuousOn_iff`\n`+ Topology.IsEmbedding.inclusion`\n`+ Topology.IsEmbedding.inl`\n`+ Topology.IsEmbedding.inr`\n`+ Topology.IsEmbedding.isCompact_iff`\n`+ Topology.IsEmbedding.isLindelof_iff`\n`+ Topology.IsEmbedding.isLocallyClosed_iff`\n`+ Topology.IsEmbedding.isSigmaCompact_iff`\n`+ Topology.IsEmbedding.isTotallyDisconnected`\n`+ Topology.IsEmbedding.isTotallyDisconnected_image`\n`+ Topology.IsEmbedding.isTotallyDisconnected_range`\n`+ Topology.IsEmbedding.map_nhdsWithin_eq`\n`+ Topology.IsEmbedding.measurableEmbedding`\n`+ Topology.IsEmbedding.prodMap`\n`+ Topology.IsEmbedding.restrictPreimage`\n`+ Topology.IsEmbedding.secondCountableTopology`\n`+ Topology.IsEmbedding.separableSpace`\n`+ Topology.IsEmbedding.sigmaMk`\n`+ Topology.IsEmbedding.subtypeVal`\n`+ Topology.IsEmbedding.t0Space`\n`+ Topology.IsEmbedding.t1Space`\n`+ Topology.IsEmbedding.t25Space`\n`+ Topology.IsEmbedding.t2Space`\n`+ Topology.IsEmbedding.t3Space`\n`+ Topology.IsEmbedding.t5Space`\n`+ Topology.IsEmbedding.toPullbackDiag`\n`+ Topology.IsEmbedding.uliftDown`\n`+ Topology.IsInducing.alexandrovDiscrete`\n`+ Topology.IsInducing.codRestrict`\n`+ Topology.IsInducing.comapPseudoMetricSpace`\n`+ Topology.IsInducing.continuousConstSMul`\n`+ Topology.IsInducing.continuousInv`\n`+ Topology.IsInducing.continuousMul`\n`+ Topology.IsInducing.continuousOn_iff`\n`+ Topology.IsInducing.continuousSMul`\n`+ Topology.IsInducing.continuousWithinAt_iff`\n`+ Topology.IsInducing.frechetUrysohnSpace`\n`+ Topology.IsInducing.generalizingMap`\n`+ Topology.IsInducing.hasProd_iff`\n`+ Topology.IsInducing.injective`\n`+ Topology.IsInducing.inseparable_iff`\n`+ Topology.IsInducing.isClosedMap`\n`+ Topology.IsInducing.isCompact_iff`\n`+ Topology.IsInducing.isCompact_preimage`\n`+ Topology.IsInducing.isCompact_preimage'`\n`+ Topology.IsInducing.isCompact_preimage_iff`\n`+ Topology.IsInducing.isEmbedding`\n`+ Topology.IsInducing.isLindelof_iff`\n`+ Topology.IsInducing.isLindelof_preimage`\n`+ Topology.IsInducing.isLocallyClosed_iff`\n`+ Topology.IsInducing.isOpenMap`\n`+ Topology.IsInducing.isPathConnected_iff`\n`+ Topology.IsInducing.isPreconnected_image`\n`+ Topology.IsInducing.isSigmaCompact_iff`\n`+ Topology.IsInducing.joinedIn_image`\n`+ Topology.IsInducing.locallyCompactSpace`\n`+ Topology.IsInducing.multipliable_iff_tprod_comp_mem_range`\n`+ Topology.IsInducing.of_codRestrict`\n`+ Topology.IsInducing.prodMap`\n`+ Topology.IsInducing.r0Space`\n`+ Topology.IsInducing.r1Space`\n`+ Topology.IsInducing.regularSpace`\n`+ Topology.IsInducing.restrictPreimage`\n`+ Topology.IsInducing.secondCountableTopology`\n`+ Topology.IsInducing.specializes_iff`\n`+ Topology.IsInducing.specializingMap`\n`+ Topology.IsInducing.subtypeVal`\n`+ Topology.IsInducing.topologicalGroup`\n`+ Topology.IsInducing.withSeminorms`\n`+ Topology.IsOpenEmbedding.coborder_preimage`\n`+ Topology.IsOpenEmbedding.compatiblePreserving`\n`+ Topology.IsOpenEmbedding.functor_isContinuous`\n`+ Topology.IsOpenEmbedding.functor_obj_injective`\n`+ Topology.IsOpenEmbedding.inl`\n`+ Topology.IsOpenEmbedding.inr`\n`+ Topology.IsOpenEmbedding.isLocalHomeomorph`\n`+ Topology.IsOpenEmbedding.isQuasiSeparated_iff`\n`+ Topology.IsOpenEmbedding.locPathConnectedSpace`\n`+ Topology.IsOpenEmbedding.locallyCompactSpace`\n`+ Topology.IsOpenEmbedding.locallyConnectedSpace`\n`+ Topology.IsOpenEmbedding.map_nhdsWithin_preimage_eq`\n`+ Topology.IsOpenEmbedding.measurableEmbedding`\n`+ Topology.IsOpenEmbedding.prodMap`\n`+ Topology.IsOpenEmbedding.quasiSober`\n`+ Topology.IsOpenEmbedding.restrictPreimage`\n`+ Topology.IsOpenEmbedding.sigmaMk`\n`+ Topology.IsOpenEmbedding.singleton_smoothManifoldWithCorners`\n`+ Topology.IsQuotientMap.continuousOn_isOpen_iff`\n`+ Topology.IsQuotientMap.continuous_lift_prod_left`\n`+ Topology.IsQuotientMap.continuous_lift_prod_right`\n`+ Topology.IsQuotientMap.image_connectedComponent`\n`+ Topology.IsQuotientMap.isClopen_preimage`\n`+ Topology.IsQuotientMap.preimage_connectedComponent`\n`+ Topology.IsQuotientMap.restrictPreimage_isOpen`\n`+ Topology.IsQuotientMap.sequentialSpace`\n`+ Topology.isEmbedding_sigmaMap`\n`+ Topology.isInducing_const_prod`\n`+ Topology.isInducing_prod_const`\n`+ Topology.isInducing_sigmaMap`\n`+ Topology.isOpenEmbedding_sigmaMap`\n`+ _root_.Topology.IsClosedEmbedding.integral_map`\n`+ _root_.Topology.IsClosedEmbedding.polishSpace`\n`+ _root_.Topology.IsClosedEmbedding.setIntegral_map`\n`+ _root_.Topology.IsEmbedding.aestronglyMeasurable_comp_iff`\n`+ _root_.Topology.IsEmbedding.firstCountableTopology`\n`+ _root_.Topology.IsEmbedding.metrizableSpace`\n`+ _root_.Topology.IsEmbedding.toHomeomorph_of_surjective`\n`+ _root_.Topology.IsInducing.firstCountableTopology`\n`+ _root_.Topology.IsInducing.noetherianSpace`\n`+ _root_.Topology.IsInducing.pseudoMetrizableSpace`\n`+ _root_.Topology.IsQuotientMap.secondCountableTopology`\n`+ _root_.Topology.IsQuotientMap.separableSpace`\n`- IsClosedEmbedding.LindelofSpace`\n`- IsClosedEmbedding.compactSpace`\n`- IsClosedEmbedding.inl`\n`- IsClosedEmbedding.inr`\n`- IsClosedEmbedding.isCompact_preimage`\n`- IsClosedEmbedding.isLindelof_preimage`\n`- IsClosedEmbedding.isProperMap`\n`- IsClosedEmbedding.locallyCompactSpace`\n`- IsClosedEmbedding.measurableEmbedding`\n`- IsClosedEmbedding.nonLindelofSpace`\n`- IsClosedEmbedding.noncompactSpace`\n`- IsClosedEmbedding.normalSpace`\n`- IsClosedEmbedding.paracompactSpace`\n`- IsClosedEmbedding.quasiSober`\n`- IsClosedEmbedding.restrictPreimage`\n`- IsClosedEmbedding.sigmaCompactSpace`\n`- IsClosedEmbedding.sigmaMk`\n`- IsClosedEmbedding.subtypeVal`\n`- IsClosedEmbedding.t4Space`\n`- IsClosedEmbedding.tendsto_coLindelof`\n`- IsClosedEmbedding.tendsto_cocompact`\n`- IsClosedEmbedding.uliftDown`\n`- IsClosedEmbedding.weaklyLocallyCompactSpace`\n`- IsEmbedding.codRestrict`\n`- IsEmbedding.comapMetricSpace`\n`- IsEmbedding.comapUniformSpace`\n`- IsEmbedding.completelyNormalSpace`\n`- IsEmbedding.continuousOn_iff`\n`- IsEmbedding.inclusion`\n`- IsEmbedding.inl`\n`- IsEmbedding.inr`\n`- IsEmbedding.isCompact_iff`\n`- IsEmbedding.isLindelof_iff`\n`- IsEmbedding.isLocallyClosed_iff`\n`- IsEmbedding.isSigmaCompact_iff`\n`- IsEmbedding.isTotallyDisconnected`\n`- IsEmbedding.isTotallyDisconnected_image`\n`- IsEmbedding.isTotallyDisconnected_range`\n`- IsEmbedding.map_nhdsWithin_eq`\n`- IsEmbedding.measurableEmbedding`\n`- IsEmbedding.prodMap`\n`- IsEmbedding.restrictPreimage`\n`- IsEmbedding.secondCountableTopology`\n`- IsEmbedding.separableSpace`\n`- IsEmbedding.sigmaMk`\n`- IsEmbedding.subtypeVal`\n`- IsEmbedding.t0Space`\n`- IsEmbedding.t1Space`\n`- IsEmbedding.t25Space`\n`- IsEmbedding.t2Space`\n`- IsEmbedding.t3Space`\n`- IsEmbedding.t5Space`\n`- IsEmbedding.toPullbackDiag`\n`- IsEmbedding.uliftDown`\n`- IsInducing.alexandrovDiscrete`\n`- IsInducing.codRestrict`\n`- IsInducing.comapPseudoMetricSpace`\n`- IsInducing.continuousConstSMul`\n`- IsInducing.continuousInv`\n`- IsInducing.continuousMul`\n`- IsInducing.continuousOn_iff`\n`- IsInducing.continuousSMul`\n`- IsInducing.continuousWithinAt_iff`\n`- IsInducing.frechetUrysohnSpace`\n`- IsInducing.generalizingMap`\n`- IsInducing.hasProd_iff`\n`- IsInducing.injective`\n`- IsInducing.inseparable_iff`\n`- IsInducing.isClosedMap`\n`- IsInducing.isCompact_iff`\n`- IsInducing.isCompact_preimage`\n`- IsInducing.isCompact_preimage'`\n`- IsInducing.isCompact_preimage_iff`\n`- IsInducing.isEmbedding`\n`- IsInducing.isLindelof_iff`\n`- IsInducing.isLindelof_preimage`\n`- IsInducing.isLocallyClosed_iff`\n`- IsInducing.isOpenMap`\n`- IsInducing.isPathConnected_iff`\n`- IsInducing.isPreconnected_image`\n`- IsInducing.isSigmaCompact_iff`\n`- IsInducing.joinedIn_image`\n`- IsInducing.locallyCompactSpace`\n`- IsInducing.multipliable_iff_tprod_comp_mem_range`\n`- IsInducing.of_codRestrict`\n`- IsInducing.prodMap`\n`- IsInducing.r0Space`\n`- IsInducing.r1Space`\n`- IsInducing.regularSpace`\n`- IsInducing.restrictPreimage`\n`- IsInducing.secondCountableTopology`\n`- IsInducing.specializes_iff`\n`- IsInducing.specializingMap`\n`- IsInducing.subtypeVal`\n`- IsInducing.topologicalGroup`\n`- IsInducing.withSeminorms`\n`- IsOpenEmbedding.coborder_preimage`\n`- IsOpenEmbedding.compatiblePreserving`\n`- IsOpenEmbedding.functor_isContinuous`\n`- IsOpenEmbedding.functor_obj_injective`\n`- IsOpenEmbedding.inl`\n`- IsOpenEmbedding.inr`\n`- IsOpenEmbedding.isLocalHomeomorph`\n`- IsOpenEmbedding.isQuasiSeparated_iff`\n`- IsOpenEmbedding.locPathConnectedSpace`\n`- IsOpenEmbedding.locallyCompactSpace`\n`- IsOpenEmbedding.locallyConnectedSpace`\n`- IsOpenEmbedding.map_nhdsWithin_preimage_eq`\n`- IsOpenEmbedding.measurableEmbedding`\n`- IsOpenEmbedding.prodMap`\n`- IsOpenEmbedding.quasiSober`\n`- IsOpenEmbedding.restrictPreimage`\n`- IsOpenEmbedding.sigmaMk`\n`- IsOpenEmbedding.singleton_smoothManifoldWithCorners`\n`- IsQuotientMap.continuousOn_isOpen_iff`\n`- IsQuotientMap.continuous_lift_prod_left`\n`- IsQuotientMap.continuous_lift_prod_right`\n`- IsQuotientMap.image_connectedComponent`\n`- IsQuotientMap.isClopen_preimage`\n`- IsQuotientMap.preimage_connectedComponent`\n`- IsQuotientMap.restrictPreimage_isOpen`\n`- IsQuotientMap.sequentialSpace`\n`- _root_.IsClosedEmbedding.integral_map`\n`- _root_.IsClosedEmbedding.polishSpace`\n`- _root_.IsClosedEmbedding.setIntegral_map`\n`- _root_.IsEmbedding.aestronglyMeasurable_comp_iff`\n`- _root_.IsEmbedding.firstCountableTopology`\n`- _root_.IsEmbedding.metrizableSpace`\n`- _root_.IsEmbedding.toHomeomorph_of_surjective`\n`- _root_.IsInducing.firstCountableTopology`\n`- _root_.IsInducing.noetherianSpace`\n`- _root_.IsInducing.pseudoMetrizableSpace`\n`- _root_.IsQuotientMap.secondCountableTopology`\n`- _root_.IsQuotientMap.separableSpace`\n`- isEmbedding_sigmaMap`\n`- isInducing_const_prod`\n`- isInducing_prod_const`\n`- isInducing_sigmaMap`\n`- isOpenEmbedding_sigmaMap`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "createdAt": "2024-08-20T08:11:09Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6SkusX",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#16087~~\n* ~~leanprover-community/mathlib4#17208~~\n* ~~leanprover-community/mathlib4#17247~~\n* ~~leanprover-community/mathlib4#17295~~\n* ~~leanprover-community/mathlib4#17398~~\n* ~~leanprover-community/mathlib4#17898~~\n* ~~leanprover-community/mathlib4#17937~~\n* ~~leanprover-community/mathlib4#18062~~\n* ~~leanprover-community/mathlib4#18133~~\n* ~~leanprover-community/mathlib4#18330~~\n* ~~leanprover-community/mathlib4#18398~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (🤖). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "createdAt": "2024-11-06T09:23:57Z",
              "author": {
                "login": "mathlib4-dependent-issues-bot"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "df441227d766fb49a9b0ebd9e3d88d2c529ce3c8",
                "additions": 340,
                "deletions": 345,
                "committedDate": "2024-11-06T09:13:37Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHljMXVg",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11700524506/job/32584701782"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHljMXSQ",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11700524511/job/32584701769"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHljMOPA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11700523862/job/32584699452"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHljMQWQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11700523855/job/32584699993"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHljMXKQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11700524515/job/32584701737"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHljMPvw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11700523862/job/32584699839"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHljMR3g",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11700523855/job/32584700382"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHljMYPA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11700524515/job/32584702012"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHljMN0Q",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11700523855/job/32584699345"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHljMShg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11700523862/job/32584700550"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHljMT1Q",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11700523862/job/32584700885"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHljSpqA",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11700523855/job/32584804776"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHljNGxg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/32584713926"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHljN2cw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=15993&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "48b93264638e8b9fd62f4326f8a56ec2fa0606ba",
                "additions": 4,
                "deletions": 5,
                "committedDate": "2024-11-06T09:19:49Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHljeR7Q",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11700619289/job/32584995309"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHljeSBQ",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11700619301/job/32584995333"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHljeO_g",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11700619037/job/32584994558"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHljePKg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11700619025/job/32584994602"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHljeUDw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11700619303/job/32584995855"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHljeThw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11700619037/job/32584995719"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHljeQlg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11700619025/job/32584994966"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHljeSwA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11700619303/job/32584995520"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHljeSsA",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11700619025/job/32584995504"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHljeQmQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11700619037/job/32584994969"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHljeU6w",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11700619037/job/32584996075"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHljtyXQ",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11700619025/job/32585249373"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHljfD4w",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/32585008099"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHljf_hA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=15993&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "3056c89e6a8ac35a405db1c41fe7f7dcf94c7eb2",
                "additions": 7,
                "deletions": 12,
                "committedDate": "2024-11-06T09:32:56Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHlkE5fg",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11700828057/job/32585628030"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHlkE47A",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11700828049/job/32585627884"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHlkE1BA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11700827619/job/32585626884"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHlkE3jw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11700827605/job/32585627535"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHlkE5Ww",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11700828056/job/32585627995"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHlkE3uw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11700827619/job/32585627579"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHlkE04g",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11700827605/job/32585626850"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHlkE6nw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11700828056/job/32585628319"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHlkE2SQ",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11700827605/job/32585627209"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHlkE2Tg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11700827619/job/32585627214"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHlkE5PQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11700827619/job/32585627965"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHlkTyJA",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11700827605/job/32585871908"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHlkFn6g",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/32585639914"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHlkGcPg",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=15993&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-08-20T08:10:29Z",
        "deletions": 362,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/AlgebraicGeometry/Gluing.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/AlgebraicGeometry/Morphisms/ClosedImmersion.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/AlgebraicGeometry/Morphisms/OpenImmersion.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/AlgebraicGeometry/Morphisms/Preimmersion.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/AlgebraicGeometry/Morphisms/UnderlyingMap.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/AlgebraicGeometry/OpenImmersion.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/AlgebraicGeometry/PrimeSpectrum/Basic.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/AlgebraicGeometry/PrimeSpectrum/TensorProduct.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/AlgebraicGeometry/Properties.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/CStarAlgebra/ContinuousFunctionalCalculus/Instances.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Analysis/CStarAlgebra/ContinuousFunctionalCalculus/Integral.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/CStarAlgebra/ContinuousFunctionalCalculus/NonUnital.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Analysis/CStarAlgebra/ContinuousFunctionalCalculus/Restrict.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/CStarAlgebra/ContinuousFunctionalCalculus/Unique.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Analysis/CStarAlgebra/ContinuousFunctionalCalculus/Unital.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Analysis/Calculus/LineDeriv/IntegrationByParts.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Complex/ReImTopology.lean",
              "additions": 1,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/Complex/UpperHalfPlane/Metric.lean",
              "additions": 2,
              "deletions": 3
            },
            {
              "path": "Mathlib/Analysis/Complex/UpperHalfPlane/Topology.lean",
              "additions": 1,
              "deletions": 3
            },
            {
              "path": "Mathlib/Analysis/Convex/Intrinsic.lean",
              "additions": 1,
              "deletions": 3
            },
            {
              "path": "Mathlib/Analysis/Convolution.lean",
              "additions": 2,
              "deletions": 3
            },
            {
              "path": "Mathlib/Analysis/LocallyConvex/WeakOperatorTopology.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/LocallyConvex/WithSeminorms.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/Normed/Algebra/Spectrum.lean",
              "additions": 1,
              "deletions": 3
            },
            {
              "path": "Mathlib/Analysis/Normed/Group/BallSphere.lean",
              "additions": 1,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/Normed/Operator/LinearIsometry.lean",
              "additions": 1,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/NormedSpace/OperatorNorm/NormedSpace.lean",
              "additions": 2,
              "deletions": 1
            },
            {
              "path": "Mathlib/Analysis/SpecialFunctions/Exp.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Analysis/SpecialFunctions/Log/ENNRealLogExp.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/CategoryTheory/Extensive.lean",
              "additions": 1,
              "deletions": 2
            },
            {
              "path": "Mathlib/CategoryTheory/Galois/Topology.lean",
              "additions": 3,
              "deletions": 0
            },
            {
              "path": "Mathlib/Condensed/TopComparison.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Geometry/Manifold/ChartedSpace.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Geometry/Manifold/ContMDiff/Basic.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Geometry/Manifold/SmoothManifoldWithCorners.lean",
              "additions": 4,
              "deletions": 2
            },
            {
              "path": "Mathlib/Geometry/Manifold/WhitneyEmbedding.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Geometry/RingedSpace/LocallyRingedSpace.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Geometry/RingedSpace/OpenImmersion.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Geometry/RingedSpace/PresheafedSpace.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Geometry/RingedSpace/PresheafedSpace/Gluing.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Geometry/RingedSpace/SheafedSpace.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Geometry/RingedSpace/Stalks.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/LinearAlgebra/Matrix/HermitianFunctionalCalculus.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/MeasureTheory/Constructions/BorelSpace/Basic.lean",
              "additions": 5,
              "deletions": 6
            },
            {
              "path": "Mathlib/MeasureTheory/Function/StronglyMeasurable/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/MeasureTheory/Integral/Bochner.lean",
              "additions": 4,
              "deletions": 5
            },
            {
              "path": "Mathlib/MeasureTheory/Integral/IntegralEqImproper.lean",
              "additions": 2,
              "deletions": 3
            },
            {
              "path": "Mathlib/MeasureTheory/Integral/SetIntegral.lean",
              "additions": 5,
              "deletions": 5
            },
            {
              "path": "Mathlib/MeasureTheory/Measure/FiniteMeasure.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/MeasureTheory/Measure/ProbabilityMeasure.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/NumberTheory/Modular.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/NumberTheory/ModularForms/EisensteinSeries/UniformConvergence.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/AlexandrovDiscrete.lean",
              "additions": 2,
              "deletions": 3
            },
            {
              "path": "Mathlib/Topology/Algebra/ConstMulAction.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Algebra/ContinuousMonoidHom.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/Algebra/Group/Basic.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/Algebra/Group/Quotient.lean",
              "additions": 2,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Algebra/InfiniteSum/Basic.lean",
              "additions": 3,
              "deletions": 5
            },
            {
              "path": "Mathlib/Topology/Algebra/Module/FiniteDimension.lean",
              "additions": 1,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/Algebra/Module/UniformConvergence.lean",
              "additions": 2,
              "deletions": 3
            },
            {
              "path": "Mathlib/Topology/Algebra/Monoid.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/Algebra/MulAction.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Algebra/Nonarchimedean/Basic.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/Algebra/Ring/Ideal.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Topology/Algebra/SeparationQuotient/Section.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Topology/Algebra/StarSubalgebra.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Topology/Bases.lean",
              "additions": 11,
              "deletions": 11
            },
            {
              "path": "Mathlib/Topology/Category/CompHausLike/EffectiveEpi.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Category/CompHausLike/Limits.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/Category/LightProfinite/Sequence.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Category/Profinite/Nobeling.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/Category/Stonean/Limits.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Category/TopCat/Basic.lean",
              "additions": 1,
              "deletions": 3
            },
            {
              "path": "Mathlib/Topology/Category/TopCat/EffectiveEpi.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Category/TopCat/Limits/Cofiltered.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Category/TopCat/Limits/Products.lean",
              "additions": 1,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/Category/TopCat/Limits/Pullbacks.lean",
              "additions": 1,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/Category/TopCat/OpenNhds.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Category/TopCat/Opens.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Topology/Clopen.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/CompactOpen.lean",
              "additions": 3,
              "deletions": 4
            },
            {
              "path": "Mathlib/Topology/Compactness/Compact.lean",
              "additions": 10,
              "deletions": 10
            },
            {
              "path": "Mathlib/Topology/Compactness/Lindelof.lean",
              "additions": 8,
              "deletions": 8
            },
            {
              "path": "Mathlib/Topology/Compactness/LocallyCompact.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/Topology/Compactness/Paracompact.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Compactness/SigmaCompact.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/Topology/Connected/Basic.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Connected/Clopen.lean",
              "additions": 6,
              "deletions": 4
            },
            {
              "path": "Mathlib/Topology/Connected/LocallyConnected.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Connected/PathConnected.lean",
              "additions": 3,
              "deletions": 3
            },
            {
              "path": "Mathlib/Topology/Connected/TotallyDisconnected.lean",
              "additions": 4,
              "deletions": 4
            },
            {
              "path": "Mathlib/Topology/Constructions.lean",
              "additions": 29,
              "deletions": 31
            },
            {
              "path": "Mathlib/Topology/ContinuousMap/Basic.lean",
              "additions": 3,
              "deletions": 5
            },
            {
              "path": "Mathlib/Topology/ContinuousMap/ContinuousMapZero.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/ContinuousMap/Sigma.lean",
              "additions": 1,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/ContinuousMap/T0Sierpinski.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Topology/ContinuousOn.lean",
              "additions": 7,
              "deletions": 7
            },
            {
              "path": "Mathlib/Topology/Covering.lean",
              "additions": 1,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/Defs/Induced.lean",
              "additions": 3,
              "deletions": 0
            },
            {
              "path": "Mathlib/Topology/DenseEmbedding.lean",
              "additions": 1,
              "deletions": 2
            }
          ]
        },
        "headRefName": "topology_inducing",
        "headRefOid": "3056c89e6a8ac35a405db1c41fe7f7dcf94c7eb2",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c540qc3",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJbOw",
              "color": "33DBEC",
              "name": "t-topology"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6GOZtg",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "urkud"
              },
              "submittedAt": "2024-08-21T20:51:03Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 15993,
        "potentialMergeCommit": {
          "oid": "f67cdaf22c45de93d7d7db1fc7c5f7157e08099a"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6GOZtg",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "urkud"
              },
              "submittedAt": "2024-08-21T20:51:03Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6GOgwb",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-08-21T21:10:34Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5m3Lbv",
                    "body": "Why do you move a file in the same PR?",
                    "createdAt": "2024-08-21T20:51:03Z",
                    "author": {
                      "login": "urkud"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5m3P14",
                    "body": "Oh I guess that should be a preliminary PR\n\nI just wanted the file name to match the predicate name",
                    "createdAt": "2024-08-21T21:10:34Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjE0MDkwNTkz",
              "login": "YaelDillies"
            },
            {
              "id": "U_kgDOCsITAQ",
              "login": "mathlib4-dependent-issues-bot"
            },
            {
              "id": "MDQ6VXNlcjE4ODgxMw==",
              "login": "urkud"
            },
            {
              "id": "U_kgDOBcsTTQ",
              "login": "leanprover-community-bot-assistant"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHlkE5fg",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11700828057/job/32585628030"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHlkE47A",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11700828049/job/32585627884"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHlkE1BA",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11700827619/job/32585626884"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHlkE3jw",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11700827605/job/32585627535"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHlkE5Ww",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11700828056/job/32585627995"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHlkE3uw",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11700827619/job/32585627579"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHlkE04g",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11700827605/job/32585626850"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHlkE6nw",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11700828056/job/32585628319"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHlkE2SQ",
                "name": "Build",
                "conclusion": "FAILURE",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11700827605/job/32585627209"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHlkE2Tg",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11700827619/job/32585627214"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHlkE5PQ",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11700827619/job/32585627965"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHlkTyJA",
                "name": "Post-CI job",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11700827605/job/32585871908"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHlkFn6g",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/32585639914"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHlkGcPg",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=15993&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "chore(Topology): Namespace `Inducing`, `Embedding`...",
        "updatedAt": "2024-11-06T09:44:20Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/15993",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAAM-8v06",
              "createdAt": "2024-08-20T08:10:44Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAAM-8v1E",
              "createdAt": "2024-08-20T08:10:44Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJbOw",
                "name": "t-topology"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6I_GFp",
              "createdAt": "2024-08-20T08:11:09Z",
              "body": "### PR summary [3056c89e6a](https://github.com/leanprover-community/mathlib4/pull/15993/commits/3056c89e6a8ac35a405db1c41fe7f7dcf94c7eb2)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ Topology.IsClosedEmbedding.LindelofSpace`\n`+ Topology.IsClosedEmbedding.compactSpace`\n`+ Topology.IsClosedEmbedding.inl`\n`+ Topology.IsClosedEmbedding.inr`\n`+ Topology.IsClosedEmbedding.isCompact_preimage`\n`+ Topology.IsClosedEmbedding.isLindelof_preimage`\n`+ Topology.IsClosedEmbedding.isProperMap`\n`+ Topology.IsClosedEmbedding.locallyCompactSpace`\n`+ Topology.IsClosedEmbedding.measurableEmbedding`\n`+ Topology.IsClosedEmbedding.nonLindelofSpace`\n`+ Topology.IsClosedEmbedding.noncompactSpace`\n`+ Topology.IsClosedEmbedding.normalSpace`\n`+ Topology.IsClosedEmbedding.paracompactSpace`\n`+ Topology.IsClosedEmbedding.quasiSober`\n`+ Topology.IsClosedEmbedding.restrictPreimage`\n`+ Topology.IsClosedEmbedding.sigmaCompactSpace`\n`+ Topology.IsClosedEmbedding.sigmaMk`\n`+ Topology.IsClosedEmbedding.subtypeVal`\n`+ Topology.IsClosedEmbedding.t4Space`\n`+ Topology.IsClosedEmbedding.tendsto_coLindelof`\n`+ Topology.IsClosedEmbedding.tendsto_cocompact`\n`+ Topology.IsClosedEmbedding.uliftDown`\n`+ Topology.IsClosedEmbedding.weaklyLocallyCompactSpace`\n`+ Topology.IsEmbedding.codRestrict`\n`+ Topology.IsEmbedding.comapMetricSpace`\n`+ Topology.IsEmbedding.comapUniformSpace`\n`+ Topology.IsEmbedding.completelyNormalSpace`\n`+ Topology.IsEmbedding.continuousOn_iff`\n`+ Topology.IsEmbedding.inclusion`\n`+ Topology.IsEmbedding.inl`\n`+ Topology.IsEmbedding.inr`\n`+ Topology.IsEmbedding.isCompact_iff`\n`+ Topology.IsEmbedding.isLindelof_iff`\n`+ Topology.IsEmbedding.isLocallyClosed_iff`\n`+ Topology.IsEmbedding.isSigmaCompact_iff`\n`+ Topology.IsEmbedding.isTotallyDisconnected`\n`+ Topology.IsEmbedding.isTotallyDisconnected_image`\n`+ Topology.IsEmbedding.isTotallyDisconnected_range`\n`+ Topology.IsEmbedding.map_nhdsWithin_eq`\n`+ Topology.IsEmbedding.measurableEmbedding`\n`+ Topology.IsEmbedding.prodMap`\n`+ Topology.IsEmbedding.restrictPreimage`\n`+ Topology.IsEmbedding.secondCountableTopology`\n`+ Topology.IsEmbedding.separableSpace`\n`+ Topology.IsEmbedding.sigmaMk`\n`+ Topology.IsEmbedding.subtypeVal`\n`+ Topology.IsEmbedding.t0Space`\n`+ Topology.IsEmbedding.t1Space`\n`+ Topology.IsEmbedding.t25Space`\n`+ Topology.IsEmbedding.t2Space`\n`+ Topology.IsEmbedding.t3Space`\n`+ Topology.IsEmbedding.t5Space`\n`+ Topology.IsEmbedding.toPullbackDiag`\n`+ Topology.IsEmbedding.uliftDown`\n`+ Topology.IsInducing.alexandrovDiscrete`\n`+ Topology.IsInducing.codRestrict`\n`+ Topology.IsInducing.comapPseudoMetricSpace`\n`+ Topology.IsInducing.continuousConstSMul`\n`+ Topology.IsInducing.continuousInv`\n`+ Topology.IsInducing.continuousMul`\n`+ Topology.IsInducing.continuousOn_iff`\n`+ Topology.IsInducing.continuousSMul`\n`+ Topology.IsInducing.continuousWithinAt_iff`\n`+ Topology.IsInducing.frechetUrysohnSpace`\n`+ Topology.IsInducing.generalizingMap`\n`+ Topology.IsInducing.hasProd_iff`\n`+ Topology.IsInducing.injective`\n`+ Topology.IsInducing.inseparable_iff`\n`+ Topology.IsInducing.isClosedMap`\n`+ Topology.IsInducing.isCompact_iff`\n`+ Topology.IsInducing.isCompact_preimage`\n`+ Topology.IsInducing.isCompact_preimage'`\n`+ Topology.IsInducing.isCompact_preimage_iff`\n`+ Topology.IsInducing.isEmbedding`\n`+ Topology.IsInducing.isLindelof_iff`\n`+ Topology.IsInducing.isLindelof_preimage`\n`+ Topology.IsInducing.isLocallyClosed_iff`\n`+ Topology.IsInducing.isOpenMap`\n`+ Topology.IsInducing.isPathConnected_iff`\n`+ Topology.IsInducing.isPreconnected_image`\n`+ Topology.IsInducing.isSigmaCompact_iff`\n`+ Topology.IsInducing.joinedIn_image`\n`+ Topology.IsInducing.locallyCompactSpace`\n`+ Topology.IsInducing.multipliable_iff_tprod_comp_mem_range`\n`+ Topology.IsInducing.of_codRestrict`\n`+ Topology.IsInducing.prodMap`\n`+ Topology.IsInducing.r0Space`\n`+ Topology.IsInducing.r1Space`\n`+ Topology.IsInducing.regularSpace`\n`+ Topology.IsInducing.restrictPreimage`\n`+ Topology.IsInducing.secondCountableTopology`\n`+ Topology.IsInducing.specializes_iff`\n`+ Topology.IsInducing.specializingMap`\n`+ Topology.IsInducing.subtypeVal`\n`+ Topology.IsInducing.topologicalGroup`\n`+ Topology.IsInducing.withSeminorms`\n`+ Topology.IsOpenEmbedding.coborder_preimage`\n`+ Topology.IsOpenEmbedding.compatiblePreserving`\n`+ Topology.IsOpenEmbedding.functor_isContinuous`\n`+ Topology.IsOpenEmbedding.functor_obj_injective`\n`+ Topology.IsOpenEmbedding.inl`\n`+ Topology.IsOpenEmbedding.inr`\n`+ Topology.IsOpenEmbedding.isLocalHomeomorph`\n`+ Topology.IsOpenEmbedding.isQuasiSeparated_iff`\n`+ Topology.IsOpenEmbedding.locPathConnectedSpace`\n`+ Topology.IsOpenEmbedding.locallyCompactSpace`\n`+ Topology.IsOpenEmbedding.locallyConnectedSpace`\n`+ Topology.IsOpenEmbedding.map_nhdsWithin_preimage_eq`\n`+ Topology.IsOpenEmbedding.measurableEmbedding`\n`+ Topology.IsOpenEmbedding.prodMap`\n`+ Topology.IsOpenEmbedding.quasiSober`\n`+ Topology.IsOpenEmbedding.restrictPreimage`\n`+ Topology.IsOpenEmbedding.sigmaMk`\n`+ Topology.IsOpenEmbedding.singleton_smoothManifoldWithCorners`\n`+ Topology.IsQuotientMap.continuousOn_isOpen_iff`\n`+ Topology.IsQuotientMap.continuous_lift_prod_left`\n`+ Topology.IsQuotientMap.continuous_lift_prod_right`\n`+ Topology.IsQuotientMap.image_connectedComponent`\n`+ Topology.IsQuotientMap.isClopen_preimage`\n`+ Topology.IsQuotientMap.preimage_connectedComponent`\n`+ Topology.IsQuotientMap.restrictPreimage_isOpen`\n`+ Topology.IsQuotientMap.sequentialSpace`\n`+ Topology.isEmbedding_sigmaMap`\n`+ Topology.isInducing_const_prod`\n`+ Topology.isInducing_prod_const`\n`+ Topology.isInducing_sigmaMap`\n`+ Topology.isOpenEmbedding_sigmaMap`\n`+ _root_.Topology.IsClosedEmbedding.integral_map`\n`+ _root_.Topology.IsClosedEmbedding.polishSpace`\n`+ _root_.Topology.IsClosedEmbedding.setIntegral_map`\n`+ _root_.Topology.IsEmbedding.aestronglyMeasurable_comp_iff`\n`+ _root_.Topology.IsEmbedding.firstCountableTopology`\n`+ _root_.Topology.IsEmbedding.metrizableSpace`\n`+ _root_.Topology.IsEmbedding.toHomeomorph_of_surjective`\n`+ _root_.Topology.IsInducing.firstCountableTopology`\n`+ _root_.Topology.IsInducing.noetherianSpace`\n`+ _root_.Topology.IsInducing.pseudoMetrizableSpace`\n`+ _root_.Topology.IsQuotientMap.secondCountableTopology`\n`+ _root_.Topology.IsQuotientMap.separableSpace`\n`- IsClosedEmbedding.LindelofSpace`\n`- IsClosedEmbedding.compactSpace`\n`- IsClosedEmbedding.inl`\n`- IsClosedEmbedding.inr`\n`- IsClosedEmbedding.isCompact_preimage`\n`- IsClosedEmbedding.isLindelof_preimage`\n`- IsClosedEmbedding.isProperMap`\n`- IsClosedEmbedding.locallyCompactSpace`\n`- IsClosedEmbedding.measurableEmbedding`\n`- IsClosedEmbedding.nonLindelofSpace`\n`- IsClosedEmbedding.noncompactSpace`\n`- IsClosedEmbedding.normalSpace`\n`- IsClosedEmbedding.paracompactSpace`\n`- IsClosedEmbedding.quasiSober`\n`- IsClosedEmbedding.restrictPreimage`\n`- IsClosedEmbedding.sigmaCompactSpace`\n`- IsClosedEmbedding.sigmaMk`\n`- IsClosedEmbedding.subtypeVal`\n`- IsClosedEmbedding.t4Space`\n`- IsClosedEmbedding.tendsto_coLindelof`\n`- IsClosedEmbedding.tendsto_cocompact`\n`- IsClosedEmbedding.uliftDown`\n`- IsClosedEmbedding.weaklyLocallyCompactSpace`\n`- IsEmbedding.codRestrict`\n`- IsEmbedding.comapMetricSpace`\n`- IsEmbedding.comapUniformSpace`\n`- IsEmbedding.completelyNormalSpace`\n`- IsEmbedding.continuousOn_iff`\n`- IsEmbedding.inclusion`\n`- IsEmbedding.inl`\n`- IsEmbedding.inr`\n`- IsEmbedding.isCompact_iff`\n`- IsEmbedding.isLindelof_iff`\n`- IsEmbedding.isLocallyClosed_iff`\n`- IsEmbedding.isSigmaCompact_iff`\n`- IsEmbedding.isTotallyDisconnected`\n`- IsEmbedding.isTotallyDisconnected_image`\n`- IsEmbedding.isTotallyDisconnected_range`\n`- IsEmbedding.map_nhdsWithin_eq`\n`- IsEmbedding.measurableEmbedding`\n`- IsEmbedding.prodMap`\n`- IsEmbedding.restrictPreimage`\n`- IsEmbedding.secondCountableTopology`\n`- IsEmbedding.separableSpace`\n`- IsEmbedding.sigmaMk`\n`- IsEmbedding.subtypeVal`\n`- IsEmbedding.t0Space`\n`- IsEmbedding.t1Space`\n`- IsEmbedding.t25Space`\n`- IsEmbedding.t2Space`\n`- IsEmbedding.t3Space`\n`- IsEmbedding.t5Space`\n`- IsEmbedding.toPullbackDiag`\n`- IsEmbedding.uliftDown`\n`- IsInducing.alexandrovDiscrete`\n`- IsInducing.codRestrict`\n`- IsInducing.comapPseudoMetricSpace`\n`- IsInducing.continuousConstSMul`\n`- IsInducing.continuousInv`\n`- IsInducing.continuousMul`\n`- IsInducing.continuousOn_iff`\n`- IsInducing.continuousSMul`\n`- IsInducing.continuousWithinAt_iff`\n`- IsInducing.frechetUrysohnSpace`\n`- IsInducing.generalizingMap`\n`- IsInducing.hasProd_iff`\n`- IsInducing.injective`\n`- IsInducing.inseparable_iff`\n`- IsInducing.isClosedMap`\n`- IsInducing.isCompact_iff`\n`- IsInducing.isCompact_preimage`\n`- IsInducing.isCompact_preimage'`\n`- IsInducing.isCompact_preimage_iff`\n`- IsInducing.isEmbedding`\n`- IsInducing.isLindelof_iff`\n`- IsInducing.isLindelof_preimage`\n`- IsInducing.isLocallyClosed_iff`\n`- IsInducing.isOpenMap`\n`- IsInducing.isPathConnected_iff`\n`- IsInducing.isPreconnected_image`\n`- IsInducing.isSigmaCompact_iff`\n`- IsInducing.joinedIn_image`\n`- IsInducing.locallyCompactSpace`\n`- IsInducing.multipliable_iff_tprod_comp_mem_range`\n`- IsInducing.of_codRestrict`\n`- IsInducing.prodMap`\n`- IsInducing.r0Space`\n`- IsInducing.r1Space`\n`- IsInducing.regularSpace`\n`- IsInducing.restrictPreimage`\n`- IsInducing.secondCountableTopology`\n`- IsInducing.specializes_iff`\n`- IsInducing.specializingMap`\n`- IsInducing.subtypeVal`\n`- IsInducing.topologicalGroup`\n`- IsInducing.withSeminorms`\n`- IsOpenEmbedding.coborder_preimage`\n`- IsOpenEmbedding.compatiblePreserving`\n`- IsOpenEmbedding.functor_isContinuous`\n`- IsOpenEmbedding.functor_obj_injective`\n`- IsOpenEmbedding.inl`\n`- IsOpenEmbedding.inr`\n`- IsOpenEmbedding.isLocalHomeomorph`\n`- IsOpenEmbedding.isQuasiSeparated_iff`\n`- IsOpenEmbedding.locPathConnectedSpace`\n`- IsOpenEmbedding.locallyCompactSpace`\n`- IsOpenEmbedding.locallyConnectedSpace`\n`- IsOpenEmbedding.map_nhdsWithin_preimage_eq`\n`- IsOpenEmbedding.measurableEmbedding`\n`- IsOpenEmbedding.prodMap`\n`- IsOpenEmbedding.quasiSober`\n`- IsOpenEmbedding.restrictPreimage`\n`- IsOpenEmbedding.sigmaMk`\n`- IsOpenEmbedding.singleton_smoothManifoldWithCorners`\n`- IsQuotientMap.continuousOn_isOpen_iff`\n`- IsQuotientMap.continuous_lift_prod_left`\n`- IsQuotientMap.continuous_lift_prod_right`\n`- IsQuotientMap.image_connectedComponent`\n`- IsQuotientMap.isClopen_preimage`\n`- IsQuotientMap.preimage_connectedComponent`\n`- IsQuotientMap.restrictPreimage_isOpen`\n`- IsQuotientMap.sequentialSpace`\n`- _root_.IsClosedEmbedding.integral_map`\n`- _root_.IsClosedEmbedding.polishSpace`\n`- _root_.IsClosedEmbedding.setIntegral_map`\n`- _root_.IsEmbedding.aestronglyMeasurable_comp_iff`\n`- _root_.IsEmbedding.firstCountableTopology`\n`- _root_.IsEmbedding.metrizableSpace`\n`- _root_.IsEmbedding.toHomeomorph_of_surjective`\n`- _root_.IsInducing.firstCountableTopology`\n`- _root_.IsInducing.noetherianSpace`\n`- _root_.IsInducing.pseudoMetrizableSpace`\n`- _root_.IsQuotientMap.secondCountableTopology`\n`- _root_.IsQuotientMap.separableSpace`\n`- isEmbedding_sigmaMap`\n`- isInducing_const_prod`\n`- isInducing_prod_const`\n`- isInducing_sigmaMap`\n`- isOpenEmbedding_sigmaMap`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6GOZtg",
              "createdAt": "2024-08-21T20:51:03Z",
              "body": "",
              "author": {
                "login": "urkud"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANBrCEa",
              "createdAt": "2024-08-23T02:32:13Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAANB5Y8r",
              "createdAt": "2024-08-23T09:10:45Z"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANB52XV",
              "createdAt": "2024-08-23T09:21:05Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANB58Bt",
              "createdAt": "2024-08-23T09:22:58Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANHR_Qh",
              "createdAt": "2024-08-30T12:53:40Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANUDPzA",
              "createdAt": "2024-09-17T17:47:14Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "CommentDeletedEvent"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAANVlmE5",
              "createdAt": "2024-09-19T09:24:52Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANVo1OL",
              "createdAt": "2024-09-19T10:24:15Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANWGWsH",
              "createdAt": "2024-09-19T19:13:48Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAANW6inq",
              "createdAt": "2024-09-20T17:00:43Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANW6xF9",
              "createdAt": "2024-09-20T17:05:47Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANYtgPr",
              "createdAt": "2024-09-24T01:42:02Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAANY-db5",
              "createdAt": "2024-09-24T08:47:09Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANY_li6",
              "createdAt": "2024-09-24T09:06:23Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANZarhb",
              "createdAt": "2024-09-24T16:55:50Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAANaK1Uj",
              "createdAt": "2024-09-25T11:43:07Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANaLIPo",
              "createdAt": "2024-09-25T11:48:57Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANcTM2P",
              "createdAt": "2024-09-27T16:10:04Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANcx5Eg",
              "createdAt": "2024-09-28T16:43:36Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5ZU_o-",
              "createdAt": "2024-09-28T21:04:44Z",
              "source": {
                "id": "PR_kwDOFcwZ1c58_Ij6",
                "title": "[Merged by Bors] - chore: Rename `DenseInducing` to `IsDenseInducing`",
                "url": "https://github.com/leanprover-community/mathlib4/pull/17208"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5ZYGjv",
              "createdAt": "2024-09-29T07:32:13Z",
              "source": {
                "id": "PR_kwDOFcwZ1c59BPPr",
                "title": "[Merged by Bors] - chore: Rename `DenseEmbedding` to `IsDenseEmbedding`",
                "url": "https://github.com/leanprover-community/mathlib4/pull/17247"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANc9br6",
              "createdAt": "2024-09-29T07:47:28Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAANc9evg",
              "createdAt": "2024-09-29T07:53:07Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANc9qD7",
              "createdAt": "2024-09-29T08:14:19Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANdBfOP",
              "createdAt": "2024-09-29T15:32:04Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAANdvs8e",
              "createdAt": "2024-09-30T14:44:12Z"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5ZppQn",
              "createdAt": "2024-09-30T14:51:59Z",
              "source": {
                "id": "PR_kwDOFcwZ1c59Id7b",
                "title": "[Merged by Bors] - chore: Rename `UniformEmbedding` to `IsUniformEmbedding`",
                "url": "https://github.com/leanprover-community/mathlib4/pull/17295"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANdwZVs",
              "createdAt": "2024-09-30T14:55:07Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANdyDZj",
              "createdAt": "2024-09-30T15:22:41Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANdy4OM",
              "createdAt": "2024-09-30T15:35:19Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANgsxuL",
              "createdAt": "2024-10-03T16:33:22Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANg594s",
              "createdAt": "2024-10-03T21:47:44Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAANhIBAV",
              "createdAt": "2024-10-04T07:08:06Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANhILuO",
              "createdAt": "2024-10-04T07:12:22Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5awnP8",
              "createdAt": "2024-10-04T07:12:33Z",
              "source": {
                "id": "PR_kwDOFcwZ1c59lVXO",
                "title": "[Merged by Bors] - chore: Rename `UniformInducing` to `IsUniformInducing`",
                "url": "https://github.com/leanprover-community/mathlib4/pull/17398"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANhV7_Z",
              "createdAt": "2024-10-04T11:47:56Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANiBZz6",
              "createdAt": "2024-10-06T02:20:51Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAANjz01h",
              "createdAt": "2024-10-08T16:02:22Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANjz6eZ",
              "createdAt": "2024-10-08T16:04:03Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANj1ddw",
              "createdAt": "2024-10-08T16:31:23Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANkFJgK",
              "createdAt": "2024-10-08T23:40:50Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAANnWhec",
              "createdAt": "2024-10-13T07:23:43Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANnWmKd",
              "createdAt": "2024-10-13T07:34:38Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANnpJmr",
              "createdAt": "2024-10-14T02:49:27Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAANr8oLH",
              "createdAt": "2024-10-17T09:30:06Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANr-qi8",
              "createdAt": "2024-10-17T10:06:50Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANsAbQQ",
              "createdAt": "2024-10-17T10:41:35Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAANtFXqA",
              "createdAt": "2024-10-18T08:28:51Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANtFq_q",
              "createdAt": "2024-10-18T08:33:14Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5eHllT",
              "createdAt": "2024-10-18T08:43:18Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5_EnFF",
                "title": "[Merged by Bors] - chore: Rename `OpenEmbedding` to `IsOpenEmbedding`",
                "url": "https://github.com/leanprover-community/mathlib4/pull/17898"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANtG2sx",
              "createdAt": "2024-10-18T08:49:33Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANtPCpt",
              "createdAt": "2024-10-18T10:28:43Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANt2iXr",
              "createdAt": "2024-10-18T22:04:09Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5eWftn",
              "createdAt": "2024-10-19T07:22:37Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5_Kect",
                "title": "[Merged by Bors] - chore: Rename `ClosedEmbedding` to `IsClosedEmbedding`",
                "url": "https://github.com/leanprover-community/mathlib4/pull/17937"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANt9HpA",
              "createdAt": "2024-10-19T07:32:56Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAANt9YyW",
              "createdAt": "2024-10-19T07:54:39Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANt9ZC_",
              "createdAt": "2024-10-19T07:55:06Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANvROZl",
              "createdAt": "2024-10-20T14:22:24Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANvRRAx",
              "createdAt": "2024-10-20T14:26:56Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAANvfTy9",
              "createdAt": "2024-10-20T21:26:27Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANvfaaH",
              "createdAt": "2024-10-20T21:40:22Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANwPdvz",
              "createdAt": "2024-10-21T16:33:04Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANxNccZ",
              "createdAt": "2024-10-22T12:24:44Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAANxglV_",
              "createdAt": "2024-10-22T16:54:48Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANxhbvT",
              "createdAt": "2024-10-22T17:10:03Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAANxz9UP",
              "createdAt": "2024-10-22T23:18:30Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANx--nJ",
              "createdAt": "2024-10-23T03:23:23Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANyAp58",
              "createdAt": "2024-10-23T03:46:11Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAANyWV-8",
              "createdAt": "2024-10-23T07:34:22Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAANyWZyS",
              "createdAt": "2024-10-23T07:35:19Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAANzeYOd",
              "createdAt": "2024-10-23T16:04:31Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAAN1UJAU",
              "createdAt": "2024-10-24T14:44:59Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAAN5YN83",
              "createdAt": "2024-10-27T09:17:36Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAAN5Yhyn",
              "createdAt": "2024-10-27T09:23:08Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6ThXjxzwAAAAN6D1ol",
              "createdAt": "2024-10-27T21:42:21Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6ThXjxzwAAAAN7SFIO",
              "createdAt": "2024-10-28T09:35:36Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6ThXjxzwAAAAN7SPZX",
              "createdAt": "2024-10-28T09:36:40Z"
            }
          ]
        }
      }
    }
  }
}
