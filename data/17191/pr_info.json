{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 83,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "Command-Master"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> Mathlib.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\nCurrently this uses `List.sum`, but it could also use `Nat.sum`. What's better?\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 2,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6NzwvS",
              "body": "### PR summary [ee3cb64736](https://github.com/leanprover-community/mathlib4/pull/17191/commits/ee3cb647361c47f147af3fa2bfd4ce2f4739d564)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Data.List.SplitLengths`|384|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ join_splitLengths`\n`+ length_mem_splitLengths`\n`+ length_splitLengths`\n`+ length_splitLengths_getElem`\n`+ splitLengths`\n`+ splitLengths_length_getElem`\n`+ splitLengths_map_length`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "createdAt": "2024-09-27T12:26:44Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6N4aSb",
              "body": "> Currently this uses `List.sum`, but it could also use `Nat.sum`. What's better?\r\n\r\n\r\n`List.sum` is fine!\r\n\r\n",
              "createdAt": "2024-09-28T02:51:33Z",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6N4aeB",
              "body": "One could prove stronger theorems. As long as the partial sums are big enough, the getElems have the right length.\r\n\r\nOne could even prove an unconditional result about the length of the i-th part, as a minimum.\r\n\r\n(I wouldn't say these are strictly essential for this PR, but I do have a slight preference for getting the complete API in on the first go.)",
              "createdAt": "2024-09-28T02:54:48Z",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6N5FbI",
              "body": "> One could prove stronger theorems. As long as the partial sums are big enough, the getElems have the right length.\r\n> \r\n> One could even prove an unconditional result about the length of the i-th part, as a minimum.\r\n> \r\n> (I wouldn't say these are strictly essential for this PR, but I do have a slight preference for getting the complete API in on the first go.)\r\n\r\nIsn't that `List.splitLengths_map_length`?",
              "createdAt": "2024-09-28T07:35:03Z",
              "author": {
                "login": "Command-Master"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6N7xlM",
              "body": "> > One could prove stronger theorems. As long as the partial sums are big enough, the getElems have the right length.\r\n> > One could even prove an unconditional result about the length of the i-th part, as a minimum.\r\n> > (I wouldn't say these are strictly essential for this PR, but I do have a slight preference for getting the complete API in on the first go.)\r\n> \r\n> Isn't that `List.splitLengths_map_length`?\r\n\r\nNo, because that is only valid with the condition `l.length = sz.sum`. I want the unconditional lemmas.",
              "createdAt": "2024-09-29T08:17:12Z",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6PsMxJ",
              "body": "@Command-Master any further thoughts on this one?",
              "createdAt": "2024-10-14T10:22:40Z",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6SNm6c",
              "body": "> @Command-Master any further thoughts on this one?\r\n\r\nMy apologies, I missed this. I still don't quite understand what statement are you looking for. Is it `(sz.take i).sum <= l.length -> (sz.splitLengths l)[i].length = sz[i]`?",
              "createdAt": "2024-11-02T16:31:04Z",
              "author": {
                "login": "Command-Master"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "99dc4e7ac189b50e6d7375694f804803121a080f",
                "additions": 81,
                "deletions": 0,
                "committedDate": "2024-09-27T12:24:51Z",
                "author": {
                  "name": "Daniel Weber",
                  "email": "commandmaster2017@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHK0kk2A",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11080480535/job/30790984920"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHjLMjMQ",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11643974117/job/32425321265"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHK0klSw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11080480546/job/30790985035"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHjLMilw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11643974116/job/32425321111"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHK0kkvg",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11080480536/job/30790984894"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHjLMi1g",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11643974118/job/32425321174"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHKXlfcA",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11070592381/job/30760591216"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHKXlfVg",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11070592393/job/30760591190"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHKXlggw",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11070592405/job/30760591491"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHKXiP0w",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11070574675/job/30760538067"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHKXiPgw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11070574678/job/30760537987"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHKXlgbw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11070592380/job/30760591471"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHK0klXQ",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11080480535/job/30790985053"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHjLMitw",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11643974117/job/32425321143"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHKXiSWQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11070574675/job/30760538713"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHKXiQew",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11070574678/job/30760538235"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHKXle7g",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11070592380/job/30760591086"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHKXiRFQ",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11070574675/job/30760538389"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHKXiRgA",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11070574678/job/30760538496"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHKXiTeg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11070574675/job/30760539002"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHKX6UvQ",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11070574678/job/30760932541"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHKXl5Cw",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/30760597771"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHKXm-GA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=17191&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "0ccb9231734407af8454e1ac48c099728dd6ff14",
                "additions": 103736,
                "deletions": 51309,
                "committedDate": "2024-11-02T16:17:10Z",
                "author": {
                  "name": "Daniel Weber",
                  "email": "commandmaster2017@gmail.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "7bfa351cf956739d5083948c1c83e8c5a512ff2b",
                "additions": 20,
                "deletions": 16,
                "committedDate": "2024-11-02T16:20:09Z",
                "author": {
                  "name": "Daniel Weber",
                  "email": "commandmaster2017@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHjLjS5g",
                        "name": "Add topic label",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11644138586/job/32425693926"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHjLjKcA",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11644137349/job/32425691760"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHjLjLBA",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11644137444/job/32425691908"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHjLjSpw",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11644138565/job/32425693863"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHjLjSyg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11644138570/job/32425693898"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHjLjK8g",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11644137411/job/32425691890"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHjLjTJg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11644138565/job/32425693990"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHjLjTMw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11644138570/job/32425694003"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHjLjLLw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11644137411/job/32425691951"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHjLjT6A",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11644138565/job/32425694184"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHjLjTuA",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11644138570/job/32425694136"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHjLjUbg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11644138565/job/32425694318"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHjLoh_g",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11644138570/job/32425779710"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHjLjR3w",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/32425693663"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHjLjIzg",
                        "name": ".github/dependabot.yml",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dependabot-api.githubapp.com"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHjLjmMw",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=17191&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "ee3cb647361c47f147af3fa2bfd4ce2f4739d564",
                "additions": 10,
                "deletions": 12,
                "committedDate": "2024-11-02T16:29:37Z",
                "author": {
                  "name": "Daniel Weber",
                  "email": "commandmaster2017@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHjLqjuQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11644192551/job/32425812921"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHjLqjkQ",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11644192549/job/32425812881"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHjLqiwQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11644192460/job/32425812673"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHjLqi-w",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11644192459/job/32425812731"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHjLqjtw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11644192547/job/32425812919"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHjLqjVw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11644192460/job/32425812823"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHjLqitQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11644192459/job/32425812661"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHjLqjWA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11644192547/job/32425812824"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHjLqjCw",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11644192460/job/32425812747"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHjLqjPg",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11644192459/job/32425812798"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHjLqjtA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11644192460/job/32425812916"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHjLvw5A",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11644192459/job/32425898212"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHjLqpMQ",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/32425814321"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHjLq6mA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=17191&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-09-27T12:26:01Z",
        "deletions": 0,
        "files": {
          "nodes": [
            {
              "path": "Mathlib.lean",
              "additions": 1,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/List/SplitLengths.lean",
              "additions": 82,
              "deletions": 0
            }
          ]
        },
        "headRefName": "CM_splitLengths",
        "headRefOid": "ee3cb647361c47f147af3fa2bfd4ce2f4739d564",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c586lej",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABtNO8rw",
              "color": "33DBEC",
              "name": "t-data"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6LKzNc",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2024-09-28T02:52:35Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6PuR2h",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-11-02T15:52:50Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 17191,
        "potentialMergeCommit": {
          "oid": "bad1da82521f37f3b48271d8b884f5d6038e8ffe"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6LKzNc",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "kim-em"
              },
              "submittedAt": "2024-09-28T02:52:35Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6PuR2h",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-11-02T15:52:50Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5qDrrJ",
                    "body": "I would suggest swapping the arguments. Given a list of lengths this is then a nice operator `List a \\to List (List a)`. Also the fact that's the way the induction runs!\r\n\r\nDot notation will still work.",
                    "createdAt": "2024-09-28T02:52:35Z",
                    "author": {
                      "login": "kim-em"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5s35XX",
                    "body": "```suggestion\r\nnamespace List\r\n\r\n/--\r\n```\r\nmaybe?",
                    "createdAt": "2024-11-02T15:52:43Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjU1NjY0OTcz",
              "login": "Command-Master"
            },
            {
              "id": "MDQ6VXNlcjQ3Nzk1Ng==",
              "login": "kim-em"
            },
            {
              "id": "MDQ6VXNlcjE0MDkwNTkz",
              "login": "YaelDillies"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHjLqjuQ",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11644192551/job/32425812921"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHjLqjkQ",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11644192549/job/32425812881"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHjLqiwQ",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11644192460/job/32425812673"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHjLqi-w",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11644192459/job/32425812731"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHjLqjtw",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11644192547/job/32425812919"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHjLqjVw",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11644192460/job/32425812823"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHjLqitQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11644192459/job/32425812661"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHjLqjWA",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11644192547/job/32425812824"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHjLqjCw",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11644192460/job/32425812747"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHjLqjPg",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11644192459/job/32425812798"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHjLqjtA",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11644192460/job/32425812916"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHjLvw5A",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11644192459/job/32425898212"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHjLqpMQ",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/32425814321"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHjLq6mA",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=17191&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat(Data/List/SplitLengths): splitting a list to chunks of given sizes",
        "updatedAt": "2024-11-02T16:31:22Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/17191",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6YKKszzwAAAANcHfYE",
              "createdAt": "2024-09-27T12:26:01Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABtNO8rw",
                "name": "t-data"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5ZHk_N",
              "createdAt": "2024-09-27T12:26:36Z",
              "source": {
                "id": "PR_kwDOFcwZ1c58vSL4",
                "title": "feat(Archive/Ioi/Ioi2024Q2): a proof of the solution of question 2 from IOI 2024.",
                "url": "https://github.com/leanprover-community/mathlib4/pull/17145"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6NzwvS",
              "createdAt": "2024-09-27T12:26:44Z",
              "body": "### PR summary [ee3cb64736](https://github.com/leanprover-community/mathlib4/pull/17191/commits/ee3cb647361c47f147af3fa2bfd4ce2f4739d564)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Data.List.SplitLengths`|384|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ join_splitLengths`\n`+ length_mem_splitLengths`\n`+ length_splitLengths`\n`+ length_splitLengths_getElem`\n`+ splitLengths`\n`+ splitLengths_length_getElem`\n`+ splitLengths_map_length`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6N4aSb",
              "createdAt": "2024-09-28T02:51:33Z",
              "body": "> Currently this uses `List.sum`, but it could also use `Nat.sum`. What's better?\r\n\r\n\r\n`List.sum` is fine!\r\n\r\n",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6LKzNc",
              "createdAt": "2024-09-28T02:52:35Z",
              "body": "",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6N4aeB",
              "createdAt": "2024-09-28T02:54:48Z",
              "body": "One could prove stronger theorems. As long as the partial sums are big enough, the getElems have the right length.\r\n\r\nOne could even prove an unconditional result about the length of the i-th part, as a minimum.\r\n\r\n(I wouldn't say these are strictly essential for this PR, but I do have a slight preference for getting the complete API in on the first go.)",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6N5FbI",
              "createdAt": "2024-09-28T07:35:03Z",
              "body": "> One could prove stronger theorems. As long as the partial sums are big enough, the getElems have the right length.\r\n> \r\n> One could even prove an unconditional result about the length of the i-th part, as a minimum.\r\n> \r\n> (I wouldn't say these are strictly essential for this PR, but I do have a slight preference for getting the complete API in on the first go.)\r\n\r\nIsn't that `List.splitLengths_map_length`?",
              "author": {
                "login": "Command-Master"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6N7xlM",
              "createdAt": "2024-09-29T08:17:12Z",
              "body": "> > One could prove stronger theorems. As long as the partial sums are big enough, the getElems have the right length.\r\n> > One could even prove an unconditional result about the length of the i-th part, as a minimum.\r\n> > (I wouldn't say these are strictly essential for this PR, but I do have a slight preference for getting the complete API in on the first go.)\r\n> \r\n> Isn't that `List.splitLengths_map_length`?\r\n\r\nNo, because that is only valid with the condition `l.length = sz.sum`. I want the unconditional lemmas.",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6PsMxJ",
              "createdAt": "2024-10-14T10:22:40Z",
              "body": "@Command-Master any further thoughts on this one?",
              "author": {
                "login": "kim-em"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6PuR2h",
              "createdAt": "2024-11-02T15:52:43Z",
              "body": "",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6YKKszzwAAAAOC9vvB",
              "createdAt": "2024-11-02T15:52:58Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6SNm6c",
              "createdAt": "2024-11-02T16:31:04Z",
              "body": "> @Command-Master any further thoughts on this one?\r\n\r\nMy apologies, I missed this. I still don't quite understand what statement are you looking for. Is it `(sz.take i).sum <= l.length -> (sz.splitLengths l)[i].length = sz[i]`?",
              "author": {
                "login": "Command-Master"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6YKKszzwAAAAOC-AwW",
              "createdAt": "2024-11-02T16:31:22Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            }
          ]
        }
      }
    }
  }
}
