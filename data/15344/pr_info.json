{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 175,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "nomeata"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "From the Carleson project\r\n\r\n---\r\n\r\n- [x] depends on: #17939",
        "changedFiles": 10,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6GqcHK",
              "body": "### PR summary [3aa6c9e55e](https://github.com/leanprover-community/mathlib4/pull/15344/commits/3aa6c9e55eb11c1c3667fead5562f22542fafe8c)\n\nImport changes exceeding 2%\n\n| %      | File |\n| -      | -    |\n| +3.69% | `Mathlib.Data.ENat.Lattice` |\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.Data.ENat.Lattice | 597 | 619 | +22 (+3.69%) |\n| Mathlib.Data.ENat.Basic | 492 | 493 | +1 (+0.20%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Data.ENat.Basic`|1|\n|<details><summary>64 files</summary> `Mathlib.Algebra.Periodic` `Mathlib.Algebra.Homology.DerivedCategory.HomologySequence` `Mathlib.Algebra.Homology.TotalComplexSymmetry` `Mathlib.GroupTheory.OrderOfElement` `Mathlib.Algebra.Homology.HomotopyCategory.Pretriangulated` `Mathlib.CategoryTheory.Triangulated.Pretriangulated` `Mathlib.GroupTheory.Abelianization` `Mathlib.Algebra.Homology.DerivedCategory.Ext.Basic` `Mathlib.GroupTheory.Solvable` `Mathlib.Algebra.Homology.HomotopyCategory.HomComplexShift` `Mathlib.Algebra.Homology.HomotopyCategory.MappingCone` `Mathlib.Algebra.Homology.BifunctorFlip` `Mathlib.Algebra.Homology.TotalComplexShift` `Mathlib.GroupTheory.NoncommPiCoprod` `Mathlib.Algebra.Order.ToIntervalMod` `Mathlib.Data.Nat.Periodic` `Mathlib.CategoryTheory.Triangulated.Triangulated` `Mathlib.CategoryTheory.Triangulated.HomologicalFunctor` `Mathlib.Algebra.Homology.HomotopyCategory.HomologicalFunctor` `Mathlib.Data.ZMod.IntUnitsPower` `Mathlib.CategoryTheory.Shift.ShiftedHomOpposite` `Mathlib.Algebra.Homology.HomotopyCategory.Triangulated` `Mathlib.Algebra.Homology.BifunctorAssociator` `Mathlib.Algebra.Homology.HomotopyCategory.SingleFunctors` `Mathlib.Algebra.Category.Grp.Adjunctions` `Mathlib.Algebra.Homology.HomotopyCategory.HomComplex` `Mathlib.Algebra.Homology.DerivedCategory.SingleTriangle` `Mathlib.Algebra.Homology.DerivedCategory.ShortExact` `Mathlib.Algebra.Homology.HomotopyCategory.Shift` `Mathlib.Data.ZMod.Basic` `Mathlib.GroupTheory.Commensurable` `Mathlib.GroupTheory.Index` `Mathlib.GroupTheory.Perm.Finite` `Mathlib.CategoryTheory.Localization.Triangulated` `Mathlib.CategoryTheory.Triangulated.Opposite` `Mathlib.Algebra.Homology.ComplexShapeSigns` `Mathlib.Data.ZMod.Units` `Mathlib.Algebra.Homology.BifunctorHomotopy` `Mathlib.GroupTheory.QuotientGroup.Finite` `Mathlib.CategoryTheory.Triangulated.TriangleShift` `Mathlib.Algebra.Homology.TotalComplex` `Mathlib.GroupTheory.GroupAction.Blocks` `Mathlib.GroupTheory.Finiteness` `Mathlib.Combinatorics.SimpleGraph.DegreeSum` `Mathlib.Algebra.Homology.HomotopyCategory.ShiftSequence` `Mathlib.NumberTheory.LucasLehmer` `Mathlib.Algebra.Algebra.ZMod` `Mathlib.Algebra.Module.ZMod` `Mathlib.RingTheory.Fintype` `Mathlib.Algebra.Homology.HomotopyCategory.ShortExact` `Mathlib.CategoryTheory.Triangulated.Subcategory` `Mathlib.CategoryTheory.Triangulated.Functor` `Mathlib.CategoryTheory.Triangulated.TStructure.Basic` `Mathlib.Algebra.Homology.Bifunctor` `Mathlib.RingTheory.FreeRing` `Mathlib.LinearAlgebra.FiniteSpan` `Mathlib.Algebra.Homology.HomotopyCategory.DegreewiseSplit` `Mathlib.Algebra.Ring.NegOnePow` `Mathlib.Algebra.Homology.BifunctorShift` `Mathlib.Combinatorics.SimpleGraph.Matching` `Mathlib.Algebra.Homology.DerivedCategory.Basic` `Mathlib.Algebra.Homology.DerivedCategory.ExactFunctor` `Mathlib.GroupTheory.FreeAbelianGroup` `Mathlib.Algebra.Homology.DerivedCategory.Ext.ExtClass`</details>|3|\n|<details><summary>57 files</summary> `Mathlib.Data.Matroid.Basic` `Mathlib.GroupTheory.Coset.Card` `Mathlib.Data.W.Cardinal` `Mathlib.SetTheory.Cardinal.Arithmetic` `Mathlib.Data.Matroid.Map` `Mathlib.CategoryTheory.Galois.GaloisObjects` `Mathlib.SetTheory.Game.Short` `Mathlib.ModelTheory.Substructures` `Mathlib.ModelTheory.FinitelyGenerated` `Mathlib.Data.Matroid.Dual` `Mathlib.ModelTheory.Complexity` `Mathlib.Algebra.GroupWithZero.Pointwise.Set.Card` `Mathlib.ModelTheory.Graph` `Mathlib.ModelTheory.Encoding` `Mathlib.Algebra.Group.Pointwise.Set.Card` `Mathlib.GroupTheory.GroupAction.CardCommute` `Mathlib.GroupTheory.Perm.DomMulAct` `Mathlib.Combinatorics.Additive.RuzsaCovering` `Mathlib.CategoryTheory.Galois.Decomposition` `Mathlib.SetTheory.Cardinal.Cofinality` `Mathlib.Data.Fintype.Units` `Mathlib.SetTheory.Cardinal.Aleph` `Mathlib.CategoryTheory.Galois.Basic` `Mathlib.SetTheory.Cardinal.Continuum` `Mathlib.MeasureTheory.MeasurableSpace.NCard` `Mathlib.Data.Matroid.Closure` `Mathlib.SetTheory.Game.State` `Mathlib.Data.Matroid.Constructions` `Mathlib.GroupTheory.Commutator.Finite` `Mathlib.CategoryTheory.Galois.Full` `Mathlib.Combinatorics.SimpleGraph.Connectivity.WalkCounting` `Mathlib.CategoryTheory.Galois.Prorepresentability` `Mathlib.ModelTheory.Skolem` `Mathlib.SetTheory.Cardinal.Subfield` `Mathlib.SetTheory.Game.Domineering` `Mathlib.MeasureTheory.MeasurableSpace.Card` `Mathlib.Data.Finite.Card` `Mathlib.SetTheory.Cardinal.CountableCover` `Mathlib.ModelTheory.ElementarySubstructures` `Mathlib.SetTheory.Cardinal.PartENat` `Mathlib.Algebra.Group.Subgroup.Finite` `Mathlib.ModelTheory.Bundled` `Mathlib.ModelTheory.Equivalence` `Mathlib.Data.Matroid.IndepAxioms` `Mathlib.ModelTheory.Types` `Mathlib.Order.Filter.Cocardinal` `Mathlib.CategoryTheory.Galois.Examples` `Mathlib.CategoryTheory.Galois.Action` `Mathlib.Data.Matroid.Restrict` `Mathlib.SetTheory.Cardinal.Finite` `Mathlib.Data.Set.Card` `Mathlib.ModelTheory.ElementaryMaps` `Mathlib.ModelTheory.Satisfiability` `Mathlib.Data.Matroid.Sum` `Mathlib.GroupTheory.Perm.Subgroup` `Mathlib.Order.Filter.CardinalInter` `Mathlib.Algebra.Group.ConjFinite`</details>|4|\n| `Mathlib.Combinatorics.SimpleGraph.Girth`|5|\n|<details><summary>3 files</summary> `Mathlib.Combinatorics.SimpleGraph.Partition` `Mathlib.Combinatorics.SimpleGraph.ConcreteColorings` `Mathlib.Combinatorics.SimpleGraph.Coloring`</details>|6|\n| `Mathlib.Combinatorics.SimpleGraph.Diam` `Mathlib.Combinatorics.SimpleGraph.Metric`|9|\n| `Mathlib.Topology.KrullDimension`|12|\n| `Mathlib.Data.Nat.PartENat`|18|\n| `Mathlib.Order.Height`|21|\n| `Mathlib.Data.ENat.Lattice` `Mathlib.Order.KrullDimension`|22|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ addLECancellable_iff_ne_top`\n`+ add_biSup`\n`+ add_biSup'`\n`+ add_iSup`\n`+ add_one_natCast_le_withTop_of_lt`\n`+ add_sSup`\n`+ biSup_add`\n`+ biSup_add'`\n`+ biSup_add_biSup_le`\n`+ biSup_add_biSup_le'`\n`+ exists_nat_gt`\n`+ finsetSum_iSup`\n`+ finsetSum_iSup_of_monotone`\n`+ iSup_add`\n`+ iSup_add_iSup`\n`+ iSup_add_iSup_le`\n`+ iSup_add_iSup_of_monotone`\n`+ iSup_natCast`\n`+ le_sub_of_add_le_left`\n`+ natCast_ne_coe_top`\n`+ sSup_add`\n`+ sub_eq_top_iff`\n`+ sub_iSup`\n`+ sub_sub_cancel`\n`++ addLECancellable_of_lt_top`\n`++ addLECancellable_of_ne_top`\n`++ iSup_zero`\n`+++ sub_ne_top_iff`\n`- add_one_nat_le_withTop_of_lt`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "createdAt": "2024-07-30T21:51:43Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6GqcTM",
              "body": "This feels too specialized and the proof a bit too inelegant to me.",
              "createdAt": "2024-07-30T21:52:26Z",
              "author": {
                "login": "nomeata"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Gxxov",
              "body": "I'll wait for https://github.com/leanprover-community/mathlib4/pull/15380 due to https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Topology.20of.20.60ENat.60/near/455447883 or simply drop this and use the lemmas there.",
              "createdAt": "2024-07-31T18:54:10Z",
              "author": {
                "login": "nomeata"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6HaEe1",
              "body": "We have a similar lemma for `ENNReal`. What's the general fact here? I think that one inequality is true in any complete lattice with monotone `+`. What about the other one?",
              "createdAt": "2024-08-06T17:10:32Z",
              "author": {
                "login": "urkud"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6HaNsO",
              "body": "Maybe monotone `-`? Just guessing :-)",
              "createdAt": "2024-08-06T17:31:20Z",
              "author": {
                "login": "nomeata"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Iz3lW",
              "body": "With https://github.com/leanprover-community/mathlib4/pull/15380 in the present PR isn't really needed, closing.",
              "createdAt": "2024-08-18T15:19:27Z",
              "author": {
                "login": "nomeata"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6McQH_",
              "body": "After further discussion with Joachim over at #16555, this PR actually is needed. Let me reopen it and revive it.",
              "createdAt": "2024-09-17T15:20:02Z",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6QcCyZ",
              "body": "@YaelDillies has effectively taken over this PR, not sure if they’ll get pinged on reviews, so I’ll mention them here. ",
              "createdAt": "2024-10-18T21:41:01Z",
              "author": {
                "login": "nomeata"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6QifNX",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#17939~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (🤖). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "createdAt": "2024-10-20T13:23:48Z",
              "author": {
                "login": "mathlib4-dependent-issues-bot"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6Qzi4g",
              "body": "This currently fails with\r\n```\r\nerror: ././././Mathlib/Data/ENat/Basic.lean:268:60: unknown constant 'WithTop.sub_eq_top'\r\nerror: ././././Mathlib/Data/ENat/Basic.lean:269:52: unknown constant 'WithTop.sub_ne_top'\r\n```\r\n\r\nAh, I can fix that myself.",
              "createdAt": "2024-10-22T14:22:17Z",
              "author": {
                "login": "nomeata"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "e8e8e5e4245a44a0c8a81ff91983d42f330f66cb",
                "additions": 169,
                "deletions": 21,
                "committedDate": "2024-10-22T12:14:41Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHbIbYdw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11459941568/job/31885547639"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHbIbY7g",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11459941571/job/31885547758"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHbIbO6Q",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11459940887/job/31885545193"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHbIbPJA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11459940895/job/31885545252"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHbIbYgQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11459941563/job/31885547649"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHbIbQWQ",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11459940887/job/31885545561"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHbIbQ3w",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11459940895/job/31885545695"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHbIbaWw",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11459941563/job/31885548123"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHbIbSYw",
                        "name": "Build",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11459940895/job/31885546083"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHbIbSQg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11459940887/job/31885546050"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHbIq2Mw",
                        "name": "Post-CI job",
                        "conclusion": "CANCELLED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11459940895/job/31885801011"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHbIbTzw",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11459940887/job/31885546447"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHbIceSw",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/31885565515"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHbIbNKQ",
                        "name": ".github/dependabot.yml",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dependabot-api.githubapp.com"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHbIdD5g",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=15344&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "b8bc848afd9e3ded40b6be63045afadf70e661a3",
                "additions": 6,
                "deletions": 0,
                "committedDate": "2024-10-22T12:19:41Z",
                "author": {
                  "name": "Yaël Dillies",
                  "email": "yael.dillies@gmail.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHbIsjOA",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11460029270/job/31885828920"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHbIskZw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11460029277/job/31885829223"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHbIskiQ",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11460029284/job/31885829257"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHbIqapQ",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11460018213/job/31885793957"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHbIqZeQ",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11460018215/job/31885793657"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHbIqWpg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11460017919/job/31885792934"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHbIqURA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11460017908/job/31885792324"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHbIqagg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11460018222/job/31885793922"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHbIsmIA",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11460029270/job/31885829664"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHbIqY7Q",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11460017919/job/31885793517"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHbIqVkA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11460017908/job/31885792656"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHbIqcfQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11460018222/job/31885794429"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHbIqXLw",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11460017908/job/31885793071"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHbIqUrA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11460017919/job/31885792428"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHbIqbXA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11460017919/job/31885794140"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHbJupGQ",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11460017908/job/31886911769"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHbIrI4w",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/31885805795"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHbIsQTA",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=15344&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "f09e571a33525245aed0db0bd0f5c4a555642b86",
                "additions": 2,
                "deletions": 2,
                "committedDate": "2024-10-22T14:24:34Z",
                "author": {
                  "name": "Joachim Breitner",
                  "email": "mail@joachim-breitner.de"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHbP4pzg",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11462300279/job/31893367246"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHbP4qZA",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11462300299/job/31893367396"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHbP4eFQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11462299362/job/31893364245"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHbP4g-g",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11462299357/job/31893364986"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHbP4p-A",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11462300277/job/31893367288"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHbP4hNg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11462299362/job/31893365046"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHbP4feA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11462299357/job/31893364600"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHbP4sAA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11462300277/job/31893367808"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHbP4fnA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11462299362/job/31893364636"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHbP4d5Q",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11462299357/job/31893364197"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHbP4jzQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11462299362/job/31893365709"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHbRffeg",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11462299357/job/31895052154"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHbP5GmA",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/31893374616"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHbP7K2A",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=15344&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "3aa6c9e55eb11c1c3667fead5562f22542fafe8c",
                "additions": 38707,
                "deletions": 20484,
                "committedDate": "2024-11-01T12:23:15Z",
                "author": {
                  "name": "Joachim Breitner",
                  "email": "mail@joachim-breitner.de"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHj9hQOA",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11665428776/job/32478089272"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHj9hPow",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11665428767/job/32478089123"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHj9hPaQ",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11665428764/job/32478089065"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHilrS6g",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11629281736/job/32385979114"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHilrS-Q",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11629281748/job/32385979129"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHilrWZg",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11629282054/job/32385980006"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHilrXMQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11629282052/job/32385980209"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHilrTwg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11629281744/job/32385979330"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHj9hTAA",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11665428776/job/32478089984"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHilrYUA",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11629282054/job/32385980496"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHilrWNQ",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11629282052/job/32385979957"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHilrTBQ",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11629281744/job/32385979141"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHilrXZg",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11629282054/job/32385980262"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHilrYAw",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11629282052/job/32385980419"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHilrZPg",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11629282054/job/32385980734"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHimx7IQ",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11629282052/job/32387136289"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHilriuw",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/32385983163"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHils2pQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=15344&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-07-30T21:51:03Z",
        "deletions": 21,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/Algebra/Order/Monoid/Unbundled/WithTop.lean",
              "additions": 11,
              "deletions": 0
            },
            {
              "path": "Mathlib/Algebra/Order/Sub/WithTop.lean",
              "additions": 2,
              "deletions": 0
            },
            {
              "path": "Mathlib/Data/ENNReal/Inv.lean",
              "additions": 4,
              "deletions": 1
            },
            {
              "path": "Mathlib/Data/ENNReal/Operations.lean",
              "additions": 2,
              "deletions": 2
            },
            {
              "path": "Mathlib/Data/ENat/Basic.lean",
              "additions": 29,
              "deletions": 11
            },
            {
              "path": "Mathlib/Data/ENat/Lattice.lean",
              "additions": 121,
              "deletions": 3
            },
            {
              "path": "Mathlib/MeasureTheory/Measure/MeasureSpace.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "Mathlib/Topology/Instances/ENat.lean",
              "additions": 1,
              "deletions": 2
            },
            {
              "path": "Mathlib/Topology/MetricSpace/HausdorffDimension.lean",
              "additions": 1,
              "deletions": 1
            },
            {
              "path": "scripts/no_lints_prime_decls.txt",
              "additions": 3,
              "deletions": 0
            }
          ]
        },
        "headRefName": "joachim/enat_isup_add",
        "headRefOid": "3aa6c9e55eb11c1c3667fead5562f22542fafe8c",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c527ODV",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
              "color": "33DBEC",
              "name": "t-algebra"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJlpQ",
              "color": "33DBEC",
              "name": "t-order"
            },
            {
              "id": "LA_kwDOFcwZ1c8AAAABwbfWPw",
              "color": "B60205",
              "name": "large-import"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6P1GDa",
              "body": "Looks good. I'm wondering if some more results (such as `add_iSup`) can be generalized beyond `ENat`, but I don't know precisely the appropriate type classes. But maybe `LinearOrderedAddCommMonoid` (or weaker) + `ConditionallyCompleteLattice` + `OrderedSub` + maybe some `AddLECancellable` conditions.\r\nIf so, we could unify `ENNReal` and `ENat` proofs. We can also leave this as a todo.",
              "state": "COMMENTED",
              "author": {
                "login": "fpvandoorn"
              },
              "submittedAt": "2024-11-04T13:41:38Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6OKKha",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-10-22T12:20:30Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "UNKNOWN",
        "mergeable": "UNKNOWN",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 15344,
        "potentialMergeCommit": null,
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": [
            {
              "requestedReviewer": {
                "id": "MDQ6VXNlcjE4ODgxMw==",
                "login": "urkud"
              }
            }
          ]
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6EbqnY",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "urkud"
              },
              "submittedAt": "2024-08-06T17:08:20Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6NzJuh",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "urkud"
              },
              "submittedAt": "2024-10-18T21:36:34Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6NzJzr",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "urkud"
              },
              "submittedAt": "2024-10-18T21:36:55Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6NzJ3V",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "urkud"
              },
              "submittedAt": "2024-10-18T21:37:13Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6NzKLP",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "urkud"
              },
              "submittedAt": "2024-10-18T21:38:39Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6NzKlr",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "urkud"
              },
              "submittedAt": "2024-10-18T21:40:29Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6NzKvu",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "urkud"
              },
              "submittedAt": "2024-10-18T21:41:14Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6N0RBO",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-10-19T08:23:48Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6N0fC7",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-10-19T10:31:45Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6N8gRm",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-10-21T09:25:40Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6OKKha",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "YaelDillies"
              },
              "submittedAt": "2024-10-22T12:20:30Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6P1GDa",
              "body": "Looks good. I'm wondering if some more results (such as `add_iSup`) can be generalized beyond `ENat`, but I don't know precisely the appropriate type classes. But maybe `LinearOrderedAddCommMonoid` (or weaker) + `ConditionallyCompleteLattice` + `OrderedSub` + maybe some `AddLECancellable` conditions.\r\nIf so, we could unify `ENNReal` and `ENat` proofs. We can also leave this as a todo.",
              "state": "COMMENTED",
              "author": {
                "login": "fpvandoorn"
              },
              "submittedAt": "2024-11-04T13:41:38Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5lrXjn",
                    "body": "```suggestion\r\nlemma iSup_add (ι : Type*) [Nonempty ι] (f : ι → ℕ∞) (n : ℕ∞) :\r\n```",
                    "createdAt": "2024-08-06T17:08:20Z",
                    "author": {
                      "login": "urkud"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5rtTDh",
                    "body": "This will allow us to write `.of_ne_top h` if the expected type is known.\r\n```suggestion\r\nlemma AddLECancellable.of_ne_top [Preorder α] [ContravariantClass α α (· + ·) (· ≤ ·)]\r\n```",
                    "createdAt": "2024-10-18T21:36:34Z",
                    "author": {
                      "login": "urkud"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5ruFou",
                    "body": "This doesn't work because it's in the `WithTop` namespace ",
                    "createdAt": "2024-10-19T08:23:48Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5rtTGh",
                    "body": "If you rename a lemma, then you should add a deprecated alias.",
                    "createdAt": "2024-10-18T21:36:55Z",
                    "author": {
                      "login": "urkud"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5rtTIp",
                    "body": "Do you add a variable but don't use it?",
                    "createdAt": "2024-10-18T21:37:12Z",
                    "author": {
                      "login": "urkud"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5rtTVn",
                    "body": "What's wrong with the old naming?",
                    "createdAt": "2024-10-18T21:38:39Z",
                    "author": {
                      "login": "urkud"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5r69_x",
                    "body": "I wasn't so sure of that change. Reverted",
                    "createdAt": "2024-10-22T12:20:30Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5rtToN",
                    "body": "You can use `exists_gt` to avoid importing `Archimedean`. OTOH, you can prove it for `[Archimedean R] {a : WithTop R} (ha : a ≠ ⊤)`.",
                    "createdAt": "2024-10-18T21:40:29Z",
                    "author": {
                      "login": "urkud"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5rtTvc",
                    "body": "I think that it's better to create a file `ENat.BigOperators` instead of adding heavy imports to this one.",
                    "createdAt": "2024-10-18T21:41:14Z",
                    "author": {
                      "login": "urkud"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5ruPTd",
                    "body": "Actually, the heavy imports can easily be avoided. See #17939",
                    "createdAt": "2024-10-19T10:31:44Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5ryjGz",
                    "body": "The imports are now only increasing by 22 files. Do you still think it's worth creating a separate one?",
                    "createdAt": "2024-10-21T09:25:40Z",
                    "author": {
                      "login": "YaelDillies"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5s8O38",
                    "body": "I'm confused about this statement. `ENat` is a well-order, so `⨅ i, f i = 0 → ∃ i, f i = 0` is unconditionally true, right?",
                    "createdAt": "2024-11-04T13:25:35Z",
                    "author": {
                      "login": "fpvandoorn"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5s8SKN",
                    "body": "```suggestion\r\nlemma sum_iSup {α ι : Type*} {s : Finset α} {f : α → ι → ℕ∞}\r\n```\r\nUnless you think that is ambiguous. `finsetSum` occurs only very little in Mathlib, and usually we just write `sum`. Also below.",
                    "createdAt": "2024-11-04T13:34:46Z",
                    "author": {
                      "login": "fpvandoorn"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjE0ODAzNw==",
              "login": "nomeata"
            },
            {
              "id": "MDQ6VXNlcjE4ODgxMw==",
              "login": "urkud"
            },
            {
              "id": "MDQ6VXNlcjE0MDkwNTkz",
              "login": "YaelDillies"
            },
            {
              "id": "U_kgDOCsITAQ",
              "login": "mathlib4-dependent-issues-bot"
            },
            {
              "id": "MDQ6VXNlcjczNzYwMTI=",
              "login": "fpvandoorn"
            },
            {
              "id": "U_kgDOBcsTTQ",
              "login": "leanprover-community-bot-assistant"
            },
            {
              "id": "U_kgDOB75MNQ",
              "login": "leanprover-community-mathlib4-bot"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHj9hQOA",
                "name": "Add ready-to-merge label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11665428776/job/32478089272"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHj9hPow",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11665428767/job/32478089123"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHj9hPaQ",
                "name": "Fix style issues from lint",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11665428764/job/32478089065"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHilrS6g",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11629281736/job/32385979114"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHilrS-Q",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11629281748/job/32385979129"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHilrWZg",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11629282054/job/32385980006"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHilrXMQ",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11629282052/job/32385980209"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHilrTwg",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11629281744/job/32385979330"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHj9hTAA",
                "name": "Add delegated label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11665428776/job/32478089984"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHilrYUA",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11629282054/job/32385980496"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHilrWNQ",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11629282052/job/32385979957"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHilrTBQ",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11629281744/job/32385979141"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHilrXZg",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11629282054/job/32385980262"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHilrYAw",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11629282052/job/32385980419"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHilrZPg",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11629282054/job/32385980734"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHimx7IQ",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11629282052/job/32387136289"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHilriuw",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/32385983163"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHils2pQ",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=15344&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat(ENat): iSup_add",
        "updatedAt": "2024-11-04T13:41:38Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/15344",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6GqcHK",
              "createdAt": "2024-07-30T21:51:43Z",
              "body": "### PR summary [3aa6c9e55e](https://github.com/leanprover-community/mathlib4/pull/15344/commits/3aa6c9e55eb11c1c3667fead5562f22542fafe8c)\n\nImport changes exceeding 2%\n\n| %      | File |\n| -      | -    |\n| +3.69% | `Mathlib.Data.ENat.Lattice` |\n\n<details><summary>\n\n#### Import changes for modified files\n\n</summary>\n\nDependency changes\n\n| File | Base Count | Head Count | Change |\n| --- | --- | --- | --- |\n| Mathlib.Data.ENat.Lattice | 597 | 619 | +22 (+3.69%) |\n| Mathlib.Data.ENat.Basic | 492 | 493 | +1 (+0.20%) |\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n| `Mathlib.Data.ENat.Basic`|1|\n|<details><summary>64 files</summary> `Mathlib.Algebra.Periodic` `Mathlib.Algebra.Homology.DerivedCategory.HomologySequence` `Mathlib.Algebra.Homology.TotalComplexSymmetry` `Mathlib.GroupTheory.OrderOfElement` `Mathlib.Algebra.Homology.HomotopyCategory.Pretriangulated` `Mathlib.CategoryTheory.Triangulated.Pretriangulated` `Mathlib.GroupTheory.Abelianization` `Mathlib.Algebra.Homology.DerivedCategory.Ext.Basic` `Mathlib.GroupTheory.Solvable` `Mathlib.Algebra.Homology.HomotopyCategory.HomComplexShift` `Mathlib.Algebra.Homology.HomotopyCategory.MappingCone` `Mathlib.Algebra.Homology.BifunctorFlip` `Mathlib.Algebra.Homology.TotalComplexShift` `Mathlib.GroupTheory.NoncommPiCoprod` `Mathlib.Algebra.Order.ToIntervalMod` `Mathlib.Data.Nat.Periodic` `Mathlib.CategoryTheory.Triangulated.Triangulated` `Mathlib.CategoryTheory.Triangulated.HomologicalFunctor` `Mathlib.Algebra.Homology.HomotopyCategory.HomologicalFunctor` `Mathlib.Data.ZMod.IntUnitsPower` `Mathlib.CategoryTheory.Shift.ShiftedHomOpposite` `Mathlib.Algebra.Homology.HomotopyCategory.Triangulated` `Mathlib.Algebra.Homology.BifunctorAssociator` `Mathlib.Algebra.Homology.HomotopyCategory.SingleFunctors` `Mathlib.Algebra.Category.Grp.Adjunctions` `Mathlib.Algebra.Homology.HomotopyCategory.HomComplex` `Mathlib.Algebra.Homology.DerivedCategory.SingleTriangle` `Mathlib.Algebra.Homology.DerivedCategory.ShortExact` `Mathlib.Algebra.Homology.HomotopyCategory.Shift` `Mathlib.Data.ZMod.Basic` `Mathlib.GroupTheory.Commensurable` `Mathlib.GroupTheory.Index` `Mathlib.GroupTheory.Perm.Finite` `Mathlib.CategoryTheory.Localization.Triangulated` `Mathlib.CategoryTheory.Triangulated.Opposite` `Mathlib.Algebra.Homology.ComplexShapeSigns` `Mathlib.Data.ZMod.Units` `Mathlib.Algebra.Homology.BifunctorHomotopy` `Mathlib.GroupTheory.QuotientGroup.Finite` `Mathlib.CategoryTheory.Triangulated.TriangleShift` `Mathlib.Algebra.Homology.TotalComplex` `Mathlib.GroupTheory.GroupAction.Blocks` `Mathlib.GroupTheory.Finiteness` `Mathlib.Combinatorics.SimpleGraph.DegreeSum` `Mathlib.Algebra.Homology.HomotopyCategory.ShiftSequence` `Mathlib.NumberTheory.LucasLehmer` `Mathlib.Algebra.Algebra.ZMod` `Mathlib.Algebra.Module.ZMod` `Mathlib.RingTheory.Fintype` `Mathlib.Algebra.Homology.HomotopyCategory.ShortExact` `Mathlib.CategoryTheory.Triangulated.Subcategory` `Mathlib.CategoryTheory.Triangulated.Functor` `Mathlib.CategoryTheory.Triangulated.TStructure.Basic` `Mathlib.Algebra.Homology.Bifunctor` `Mathlib.RingTheory.FreeRing` `Mathlib.LinearAlgebra.FiniteSpan` `Mathlib.Algebra.Homology.HomotopyCategory.DegreewiseSplit` `Mathlib.Algebra.Ring.NegOnePow` `Mathlib.Algebra.Homology.BifunctorShift` `Mathlib.Combinatorics.SimpleGraph.Matching` `Mathlib.Algebra.Homology.DerivedCategory.Basic` `Mathlib.Algebra.Homology.DerivedCategory.ExactFunctor` `Mathlib.GroupTheory.FreeAbelianGroup` `Mathlib.Algebra.Homology.DerivedCategory.Ext.ExtClass`</details>|3|\n|<details><summary>57 files</summary> `Mathlib.Data.Matroid.Basic` `Mathlib.GroupTheory.Coset.Card` `Mathlib.Data.W.Cardinal` `Mathlib.SetTheory.Cardinal.Arithmetic` `Mathlib.Data.Matroid.Map` `Mathlib.CategoryTheory.Galois.GaloisObjects` `Mathlib.SetTheory.Game.Short` `Mathlib.ModelTheory.Substructures` `Mathlib.ModelTheory.FinitelyGenerated` `Mathlib.Data.Matroid.Dual` `Mathlib.ModelTheory.Complexity` `Mathlib.Algebra.GroupWithZero.Pointwise.Set.Card` `Mathlib.ModelTheory.Graph` `Mathlib.ModelTheory.Encoding` `Mathlib.Algebra.Group.Pointwise.Set.Card` `Mathlib.GroupTheory.GroupAction.CardCommute` `Mathlib.GroupTheory.Perm.DomMulAct` `Mathlib.Combinatorics.Additive.RuzsaCovering` `Mathlib.CategoryTheory.Galois.Decomposition` `Mathlib.SetTheory.Cardinal.Cofinality` `Mathlib.Data.Fintype.Units` `Mathlib.SetTheory.Cardinal.Aleph` `Mathlib.CategoryTheory.Galois.Basic` `Mathlib.SetTheory.Cardinal.Continuum` `Mathlib.MeasureTheory.MeasurableSpace.NCard` `Mathlib.Data.Matroid.Closure` `Mathlib.SetTheory.Game.State` `Mathlib.Data.Matroid.Constructions` `Mathlib.GroupTheory.Commutator.Finite` `Mathlib.CategoryTheory.Galois.Full` `Mathlib.Combinatorics.SimpleGraph.Connectivity.WalkCounting` `Mathlib.CategoryTheory.Galois.Prorepresentability` `Mathlib.ModelTheory.Skolem` `Mathlib.SetTheory.Cardinal.Subfield` `Mathlib.SetTheory.Game.Domineering` `Mathlib.MeasureTheory.MeasurableSpace.Card` `Mathlib.Data.Finite.Card` `Mathlib.SetTheory.Cardinal.CountableCover` `Mathlib.ModelTheory.ElementarySubstructures` `Mathlib.SetTheory.Cardinal.PartENat` `Mathlib.Algebra.Group.Subgroup.Finite` `Mathlib.ModelTheory.Bundled` `Mathlib.ModelTheory.Equivalence` `Mathlib.Data.Matroid.IndepAxioms` `Mathlib.ModelTheory.Types` `Mathlib.Order.Filter.Cocardinal` `Mathlib.CategoryTheory.Galois.Examples` `Mathlib.CategoryTheory.Galois.Action` `Mathlib.Data.Matroid.Restrict` `Mathlib.SetTheory.Cardinal.Finite` `Mathlib.Data.Set.Card` `Mathlib.ModelTheory.ElementaryMaps` `Mathlib.ModelTheory.Satisfiability` `Mathlib.Data.Matroid.Sum` `Mathlib.GroupTheory.Perm.Subgroup` `Mathlib.Order.Filter.CardinalInter` `Mathlib.Algebra.Group.ConjFinite`</details>|4|\n| `Mathlib.Combinatorics.SimpleGraph.Girth`|5|\n|<details><summary>3 files</summary> `Mathlib.Combinatorics.SimpleGraph.Partition` `Mathlib.Combinatorics.SimpleGraph.ConcreteColorings` `Mathlib.Combinatorics.SimpleGraph.Coloring`</details>|6|\n| `Mathlib.Combinatorics.SimpleGraph.Diam` `Mathlib.Combinatorics.SimpleGraph.Metric`|9|\n| `Mathlib.Topology.KrullDimension`|12|\n| `Mathlib.Data.Nat.PartENat`|18|\n| `Mathlib.Order.Height`|21|\n| `Mathlib.Data.ENat.Lattice` `Mathlib.Order.KrullDimension`|22|\n\n</details>\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ addLECancellable_iff_ne_top`\n`+ add_biSup`\n`+ add_biSup'`\n`+ add_iSup`\n`+ add_one_natCast_le_withTop_of_lt`\n`+ add_sSup`\n`+ biSup_add`\n`+ biSup_add'`\n`+ biSup_add_biSup_le`\n`+ biSup_add_biSup_le'`\n`+ exists_nat_gt`\n`+ finsetSum_iSup`\n`+ finsetSum_iSup_of_monotone`\n`+ iSup_add`\n`+ iSup_add_iSup`\n`+ iSup_add_iSup_le`\n`+ iSup_add_iSup_of_monotone`\n`+ iSup_natCast`\n`+ le_sub_of_add_le_left`\n`+ natCast_ne_coe_top`\n`+ sSup_add`\n`+ sub_eq_top_iff`\n`+ sub_iSup`\n`+ sub_sub_cancel`\n`++ addLECancellable_of_lt_top`\n`++ addLECancellable_of_ne_top`\n`++ iSup_zero`\n`+++ sub_ne_top_iff`\n`- add_one_nat_le_withTop_of_lt`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6GqcTM",
              "createdAt": "2024-07-30T21:52:26Z",
              "body": "This feels too specialized and the proof a bit too inelegant to me.",
              "author": {
                "login": "nomeata"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6RXDn5zwAAAAMxTt5b",
              "createdAt": "2024-07-31T15:49:06Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Gxxov",
              "createdAt": "2024-07-31T18:54:10Z",
              "body": "I'll wait for https://github.com/leanprover-community/mathlib4/pull/15380 due to https://leanprover.zulipchat.com/#narrow/stream/287929-mathlib4/topic/Topology.20of.20.60ENat.60/near/455447883 or simply drop this and use the lemmas there.",
              "author": {
                "login": "nomeata"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6RXDn5zwAAAAMxc11l",
              "createdAt": "2024-07-31T18:54:31Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6RXDn5zwAAAAMxlSbO",
              "createdAt": "2024-07-31T22:02:38Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5USd_W",
              "createdAt": "2024-08-05T14:47:35Z",
              "source": {
                "id": "PR_kwDOFcwZ1c53dQHy",
                "title": "feat(KrullDimension): height refactor",
                "url": "https://github.com/leanprover-community/mathlib4/pull/15524"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6EbqnY",
              "createdAt": "2024-08-06T17:08:20Z",
              "body": "",
              "author": {
                "login": "urkud"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6HaEe1",
              "createdAt": "2024-08-06T17:10:32Z",
              "body": "We have a similar lemma for `ENNReal`. What's the general fact here? I think that one inequality is true in any complete lattice with monotone `+`. What about the other one?",
              "author": {
                "login": "urkud"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6HaNsO",
              "createdAt": "2024-08-06T17:31:20Z",
              "body": "Maybe monotone `-`? Just guessing :-)",
              "author": {
                "login": "nomeata"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6RXDn5zwAAAAM2JOwO",
              "createdAt": "2024-08-07T14:18:13Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJlpQ",
                "name": "t-order"
              }
            },
            {
              "__typename": "RenamedTitleEvent"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6RXDn5zwAAAAM9RQSL",
              "createdAt": "2024-08-16T16:22:36Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Iz3lW",
              "createdAt": "2024-08-18T15:19:27Z",
              "body": "With https://github.com/leanprover-community/mathlib4/pull/15380 in the present PR isn't really needed, closing.",
              "author": {
                "login": "nomeata"
              }
            },
            {
              "__typename": "ClosedEvent",
              "id": "CE_lADOFcwZ1c6RXDn5zwAAAAM91bXy",
              "createdAt": "2024-08-18T15:19:27Z"
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6McQH_",
              "createdAt": "2024-09-17T15:20:02Z",
              "body": "After further discussion with Joachim over at #16555, this PR actually is needed. Let me reopen it and revive it.",
              "author": {
                "login": "YaelDillies"
              }
            },
            {
              "__typename": "ReopenedEvent",
              "id": "REE_lADOFcwZ1c6RXDn5zwAAAANT8R68",
              "createdAt": "2024-09-17T15:20:02Z"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6RXDn5zwAAAANT8Wzj",
              "createdAt": "2024-09-17T15:21:26Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6RXDn5zwAAAANT8XG1",
              "createdAt": "2024-09-17T15:21:31Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6RXDn5zwAAAANT8XG8",
              "createdAt": "2024-09-17T15:21:31Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6RXDn5zwAAAANT8XHH",
              "createdAt": "2024-09-17T15:21:31Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6RXDn5zwAAAANT8X1i",
              "createdAt": "2024-09-17T15:21:43Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJjTQ",
                "name": "t-algebra"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5Wexdu",
              "createdAt": "2024-09-17T15:22:33Z",
              "source": {
                "id": "PR_kwDOFcwZ1c56tSR0",
                "title": "feat(KrullDimension): height_strictMono, mapping theorems",
                "url": "https://github.com/leanprover-community/mathlib4/pull/16555"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6RXDn5zwAAAANVG56o",
              "createdAt": "2024-09-18T19:38:40Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6RXDn5zwAAAANXDslR",
              "createdAt": "2024-09-20T20:15:27Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6RXDn5zwAAAANXDtEK",
              "createdAt": "2024-09-20T20:15:40Z",
              "label": {
                "id": "MDU6TGFiZWwzMjcxMjQ0NzU5",
                "name": "WIP"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6RXDn5zwAAAANXDtEP",
              "createdAt": "2024-09-20T20:15:40Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6RXDn5zwAAAANcZhGS",
              "createdAt": "2024-09-27T18:55:47Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6RXDn5zwAAAANgwXlm",
              "createdAt": "2024-10-03T17:51:03Z"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6RXDn5zwAAAANgwZxv",
              "createdAt": "2024-10-03T17:51:45Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABwbfWPw",
                "name": "large-import"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6RXDn5zwAAAANgxS4V",
              "createdAt": "2024-10-03T18:09:48Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6NzJuh",
              "createdAt": "2024-10-18T21:36:33Z",
              "body": "",
              "author": {
                "login": "urkud"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6NzJzr",
              "createdAt": "2024-10-18T21:36:55Z",
              "body": "",
              "author": {
                "login": "urkud"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6NzJ3V",
              "createdAt": "2024-10-18T21:37:12Z",
              "body": "",
              "author": {
                "login": "urkud"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6NzKLP",
              "createdAt": "2024-10-18T21:38:39Z",
              "body": "",
              "author": {
                "login": "urkud"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6NzKlr",
              "createdAt": "2024-10-18T21:40:29Z",
              "body": "",
              "author": {
                "login": "urkud"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6QcCyZ",
              "createdAt": "2024-10-18T21:41:01Z",
              "body": "@YaelDillies has effectively taken over this PR, not sure if they’ll get pinged on reviews, so I’ll mention them here. ",
              "author": {
                "login": "nomeata"
              }
            },
            {
              "__typename": "MentionedEvent"
            },
            {
              "__typename": "SubscribedEvent"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6NzKvu",
              "createdAt": "2024-10-18T21:41:14Z",
              "body": "",
              "author": {
                "login": "urkud"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6RXDn5zwAAAANuFMFH",
              "createdAt": "2024-10-19T09:45:21Z"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6RXDn5zwAAAANuGloE",
              "createdAt": "2024-10-19T10:34:40Z"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6RXDn5zwAAAANuG4mX",
              "createdAt": "2024-10-19T10:47:57Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6RXDn5zwAAAANvOCEH",
              "createdAt": "2024-10-20T13:23:47Z",
              "label": {
                "id": "MDU6TGFiZWwzMjg4OTQyMDg2",
                "name": "blocked-by-other-PR"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6QifNX",
              "createdAt": "2024-10-20T13:23:48Z",
              "body": "This PR/issue depends on:\n* ~~leanprover-community/mathlib4#17939~~\nBy **[Dependent Issues](https://github.com/z0al/dependent-issues)** (🤖). Happy coding!\n<!-- By Dependent Issues (Action) - DO NOT REMOVE -->",
              "author": {
                "login": "mathlib4-dependent-issues-bot"
              }
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6RXDn5zwAAAANvfP0J",
              "createdAt": "2024-10-20T21:17:53Z"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6RXDn5zwAAAANxMys3",
              "createdAt": "2024-10-22T12:15:20Z"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "ReviewRequestedEvent",
              "id": "RRE_lADOFcwZ1c6RXDn5zwAAAANxNKgh",
              "createdAt": "2024-10-22T12:20:37Z",
              "requestedReviewer": {
                "id": "MDQ6VXNlcjE4ODgxMw==",
                "login": "urkud"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6Qzi4g",
              "createdAt": "2024-10-22T14:22:17Z",
              "body": "This currently fails with\r\n```\r\nerror: ././././Mathlib/Data/ENat/Basic.lean:268:60: unknown constant 'WithTop.sub_eq_top'\r\nerror: ././././Mathlib/Data/ENat/Basic.lean:269:52: unknown constant 'WithTop.sub_ne_top'\r\n```\r\n\r\nAh, I can fix that myself.",
              "author": {
                "login": "nomeata"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6RXDn5zwAAAAN831uG",
              "createdAt": "2024-10-29T08:40:02Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6RXDn5zwAAAAOCCATR",
              "createdAt": "2024-11-01T12:29:10Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABIFoUmw",
                "name": "merge-conflict"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6P1GDa",
              "createdAt": "2024-11-04T13:25:35Z",
              "body": "Looks good. I'm wondering if some more results (such as `add_iSup`) can be generalized beyond `ENat`, but I don't know precisely the appropriate type classes. But maybe `LinearOrderedAddCommMonoid` (or weaker) + `ConditionallyCompleteLattice` + `OrderedSub` + maybe some `AddLECancellable` conditions.\r\nIf so, we could unify `ENNReal` and `ENat` proofs. We can also leave this as a todo.",
              "author": {
                "login": "fpvandoorn"
              }
            }
          ]
        }
      }
    }
  }
}
