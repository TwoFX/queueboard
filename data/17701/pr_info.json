{
  "data": {
    "repository": {
      "pullRequest": {
        "additions": 267,
        "assignees": {
          "nodes": []
        },
        "author": {
          "login": "robin-carlier"
        },
        "autoMergeRequest": null,
        "baseRefName": "master",
        "body": "Given a functor `F : C ‚•§ D` between categories with chosen finite products and `A B : C`, introduce `terminalComparison F : F (ùüô_ C) ‚ü∂ ùüô_ D` and `prodComparison F A B : F (A ‚äó B) ‚ü∂ F A ‚äó F B` the canonical maps.\r\n\r\n- Show that `terminalComparison` is an isomorphism if and only if `F` preserves terminal objects.\r\n- Show that the canonical map `prodComparison F A B` is natural in `A` and `B` and compatible with composition.\r\n- Show that `F` preserves binary products if and only if `prodComparison F A B` is an isomorphism for all `A B`.\r\n\r\n---\r\n<!-- The text above the `---` will become the commit message when your\r\nPR is merged. Please leave a blank newline before the `---`, otherwise\r\nGitHub will format the text above it as a title.\r\n\r\nFor details on the \"pull request lifecycle\" in mathlib, please see:\r\nhttps://leanprover-community.github.io/contribute/index.html\r\n\r\nIn particular, note that most reviewers will only notice your PR\r\nif it passes the continuous integration checks.\r\nPlease ask for help on https://leanprover.zulipchat.com if needed.\r\n\r\nTo indicate co-authors, include lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nCo-authored-by: Author Name <author@email.com>\r\n\r\nIf you are moving or deleting declarations, please include these lines at the bottom of the commit message\r\n(that is, before the `---`) using the following format:\r\n\r\nMoves:\r\n- Vector.* -> Mathlib.Vector.*\r\n- ...\r\n\r\nDeletions:\r\n- Nat.bit1_add_bit1\r\n- ...\r\n\r\nAny other comments you want to keep out of the PR commit should go\r\nbelow the `---`, and placed outside this HTML comment, or else they\r\nwill be invisible to reviewers.\r\n\r\nIf this PR depends on other PRs, please list them below this comment,\r\nusing the following format:\r\n- [ ] depends on: #abc [optional extra text]\r\n- [ ] depends on: #xyz [optional extra text]\r\n\r\n-->\r\n\r\nThis development mirrors the ones already existing in `CategoryTheory/Limits/Preserves/Shapes/BinaryProducts` and `CategoryTheory/Limits/Preserves/Shapes/Terminal`. Some names are even identical but should not clash as they are in the `ChosenFiniteProducts` namespace. Will be used in #17613.\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/from-referrer/)\r\n",
        "changedFiles": 1,
        "closed": false,
        "closedAt": null,
        "comments": {
          "nodes": [
            {
              "id": "IC_kwDOFcwZ1c6PltFb",
              "body": "### PR summary [566b68ed93](https://github.com/leanprover-community/mathlib4/pull/17701/commits/566b68ed93ad6390fdc7a81ba4548d9e50eefb46)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ instance (A : C) [‚àÄ B, IsIso (prodComparison F A B)] : IsIso (prodComparisonNatTrans F A) := by`\n`+ instance [‚àÄ A B, IsIso (prodComparison F A B)] : IsIso (prodComparisonBifunctorNatTrans F) := by`\n`+ inv_prodComparison_map_fst`\n`+ inv_prodComparison_map_snd`\n`+ isIso_prodComparison_of_preservesLimit_pair:`\n`+ isLimitChosenFiniteProductsOfPreservesLimits`\n`+ map_toUnit_comp_terminalCompariso`\n`+ preservesLimitEmptyOfIsIsoTerminalComparison`\n`+ preservesLimitPairOfIsIsoProdComparison`\n`+ preservesLimitsOfShapeDiscreteWalkingPairOfIsoProdComparison`\n`+ preservesTerminalIso`\n`+ preservesTerminalIso_hom`\n`+ prodComparison`\n`+ prodComparisonBifunctorNatTrans`\n`+ prodComparisonBifunctorNatTrans_comp`\n`+ prodComparisonBifunctorsNatIso`\n`+ prodComparisonIso`\n`+ prodComparisonIso_hom`\n`+ prodComparisonNatIso`\n`+ prodComparisonNatTrans`\n`+ prodComparisonNatTrans_comp`\n`+ prodComparisonNatTrans_id`\n`+ prodComparison_comp`\n`+ prodComparison_fst`\n`+ prodComparison_id`\n`+ prodComparison_inv_natural`\n`+ prodComparison_inv_natural_whiskerLeft`\n`+ prodComparison_inv_natural_whiskerRight`\n`+ prodComparison_natural`\n`+ prodComparison_natural_whiskerLeft`\n`+ prodComparison_natural_whiskerRight`\n`+ prodComparison_snd`\n`+ terminalComparison`\n`+ terminalComparison_isIso_of_preservesLimits`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "createdAt": "2024-10-13T15:41:12Z",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "id": "IC_kwDOFcwZ1c6PteCG",
              "body": "I added a few extra naturality lemmas, as I noticed that in practice one sometimes uses the naturality of the prodComparison map with maps of the form `A ‚óÅ g` or `f ‚ñ∑ B`, and that it would be useful to also state things in terms of them as well.",
              "createdAt": "2024-10-14T12:15:55Z",
              "author": {
                "login": "robin-carlier"
              }
            }
          ]
        },
        "commits": {
          "nodes": [
            {
              "commit": {
                "oid": "cc6dfa8d7398cc00dbd22ec9d95c84ed7d88b06f",
                "additions": 209,
                "deletions": 2,
                "committedDate": "2024-10-18T06:32:09Z",
                "author": {
                  "name": "Robin Carlier",
                  "email": "robin.carlier@ens-lyon.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "834a0e2f5d28ba6691f9a2560a4ad725c69cb04d",
                "additions": 1,
                "deletions": 1,
                "committedDate": "2024-10-18T06:32:09Z",
                "author": {
                  "name": "Robin Carlier",
                  "email": "robin.carlier@ens-lyon.fr"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "8d9d5fd8b0e3b915e5219e18d2ab8f1320b7bac8",
                "additions": 37,
                "deletions": 3,
                "committedDate": "2024-10-18T06:32:09Z",
                "author": {
                  "name": "Robin Carlier",
                  "email": "57142648+robin-carlier@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "a7396650aa8145298224a991cd6330a6fda2146b",
                "additions": 3,
                "deletions": 3,
                "committedDate": "2024-10-18T06:32:09Z",
                "author": {
                  "name": "Robin Carlier",
                  "email": "57142648+robin-carlier@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "e13a5a06668cebdac741902a2c2d2f8e82212377",
                "additions": 28,
                "deletions": 12,
                "committedDate": "2024-10-18T06:32:09Z",
                "author": {
                  "name": "Robin Carlier",
                  "email": "57142648+robin-carlier@users.noreply.github.com"
                },
                "statusCheckRollup": null
              }
            },
            {
              "commit": {
                "oid": "13998b17133fd65dc170434767b84963b66a86ff",
                "additions": 52,
                "deletions": 40,
                "committedDate": "2024-10-18T07:25:01Z",
                "author": {
                  "name": "Robin Carlier",
                  "email": "57142648+robin-carlier@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHYo0DuA",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11399422864/job/31718179768"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHYo3VVQ",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11399441450/job/31718233429"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHYo0CRA",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11399422865/job/31718179396"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHYo3U3g",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11399441441/job/31718233310"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHYo0CcA",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11399422869/job/31718179440"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHYo3VgQ",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11399441442/job/31718233473"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHYopwnw",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11399359992/job/31718011039"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHYopwVA",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11399359993/job/31718010964"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHYopsEQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11399359560/job/31718009873"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHYopr_A",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11399359561/job/31718009852"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHYopxVA",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11399359990/job/31718011220"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHYo0CdA",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11399422864/job/31718179444"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHYo3W6Q",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11399441450/job/31718233833"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHYoptrg",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11399359560/job/31718010286"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHYoptng",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11399359561/job/31718010270"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHYopwiA",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11399359990/job/31718011016"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHYopstQ",
                        "name": "Build",
                        "conclusion": "FAILURE",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11399359561/job/31718010037"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHYops2w",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11399359560/job/31718010075"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHYopubQ",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11399359560/job/31718010477"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHYo8y9g",
                        "name": "Post-CI job",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11399359561/job/31718322934"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHYoqG7g",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/31718016750"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHYoq-Ng",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=17701&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            },
            {
              "commit": {
                "oid": "566b68ed93ad6390fdc7a81ba4548d9e50eefb46",
                "additions": 0,
                "deletions": 4,
                "committedDate": "2024-10-18T07:37:19Z",
                "author": {
                  "name": "Robin Carlier",
                  "email": "57142648+robin-carlier@users.noreply.github.com"
                },
                "statusCheckRollup": {
                  "contexts": {
                    "nodes": [
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHaKBApg",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11438464337/job/31820103846"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHaKJGhw",
                        "name": "Add ready-to-merge label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11438507236/job/31820236423"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHaKA_EQ",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11438464333/job/31820103441"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHaKJGLw",
                        "name": "Ping maintainers on Zulip",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11438507214/job/31820236335"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHaKA-0g",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11438464327/job/31820103378"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHaKJGQg",
                        "name": "Fix style issues from lint",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11438507217/job/31820236354"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHYpGq8Q",
                        "name": "label-and-report-new-contributor",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11399528318/job/31718484721"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHYpGrBQ",
                        "name": "build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11399528313/job/31718484741"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHYpGmlA",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11399527863/job/31718483604"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHYpGmnQ",
                        "name": "Cancel Previous Runs (CI)",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11399527862/job/31718483613"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHYpGrmw",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11399528315/job/31718484891"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHaKA-sw",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11438464337/job/31820103347"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHaKJIJA",
                        "name": "Add delegated label",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11438507236/job/31820236836"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHYpGnSw",
                        "name": "Lint style (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11399527863/job/31718483787"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHYpGneg",
                        "name": "Lint style",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11399527862/job/31718483834"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHYpGtEg",
                        "name": "Check all files imported",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11399528315/job/31718485266"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHYpGoTA",
                        "name": "Build (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11399527863/job/31718484044"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHYpGoQw",
                        "name": "Build",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11399527862/job/31718484035"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHYpGpOA",
                        "name": "Post-CI job (fork)",
                        "conclusion": "SKIPPED",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11399527863/job/31718484280"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHYpagPA",
                        "name": "Post-CI job",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11399527862/job/31718809660"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHYpG7Mg",
                        "name": "New Contributor Check",
                        "conclusion": "NEUTRAL",
                        "status": "COMPLETED",
                        "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/31718488882"
                      },
                      {
                        "__typename": "CheckRun",
                        "id": "CR_kwDOFcwZ1c8AAAAHYpHzoQ",
                        "name": "Summary",
                        "conclusion": "SUCCESS",
                        "status": "COMPLETED",
                        "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=17701&login=leanprover-community&repository=mathlib4"
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "createdAt": "2024-10-13T15:40:26Z",
        "deletions": 2,
        "files": {
          "nodes": [
            {
              "path": "Mathlib/CategoryTheory/ChosenFiniteProducts.lean",
              "additions": 267,
              "deletions": 2
            }
          ]
        },
        "headRefName": "RC_ChosenFiniteProducts_comparison_maps",
        "headRefOid": "566b68ed93ad6390fdc7a81ba4548d9e50eefb46",
        "headRepository": {
          "name": "mathlib4",
          "owner": {
            "login": "leanprover-community"
          }
        },
        "headRepositoryOwner": {
          "login": "leanprover-community"
        },
        "id": "PR_kwDOFcwZ1c5-c59L",
        "isCrossRepository": false,
        "isDraft": false,
        "labels": {
          "nodes": [
            {
              "id": "LA_kwDOFcwZ1c8AAAABViJTYQ",
              "color": "33dbec",
              "name": "t-category-theory"
            }
          ]
        },
        "latestReviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6N9Pnl",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "joelriou"
              },
              "submittedAt": "2024-10-21T10:47:09Z"
            }
          ]
        },
        "maintainerCanModify": false,
        "mergeCommit": null,
        "mergeStateStatus": "BLOCKED",
        "mergeable": "MERGEABLE",
        "mergedAt": null,
        "mergedBy": null,
        "milestone": null,
        "number": 17701,
        "potentialMergeCommit": {
          "oid": "6e9e860d7d21c2898108fcfa8dcdb56b8e9cf706"
        },
        "projectCards": {
          "nodes": []
        },
        "reactionGroups": [
          {
            "content": "THUMBS_UP",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "THUMBS_DOWN",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "LAUGH",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HOORAY",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "CONFUSED",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "HEART",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "ROCKET",
            "users": {
              "nodes": []
            }
          },
          {
            "content": "EYES",
            "users": {
              "nodes": []
            }
          }
        ],
        "reviewDecision": null,
        "reviewRequests": {
          "nodes": []
        },
        "reviews": {
          "nodes": [
            {
              "id": "PRR_kwDOFcwZ1c6NeqsG",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "joelriou"
              },
              "submittedAt": "2024-10-16T20:36:11Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Nerwk",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "joelriou"
              },
              "submittedAt": "2024-10-16T20:37:33Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Ner8S",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "joelriou"
              },
              "submittedAt": "2024-10-16T20:37:45Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Neskp",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "joelriou"
              },
              "submittedAt": "2024-10-16T20:38:43Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6NevJa",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "joelriou"
              },
              "submittedAt": "2024-10-16T20:42:58Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6NfLU8",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "robin-carlier"
              },
              "submittedAt": "2024-10-16T21:59:31Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6NfL6Y",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "robin-carlier"
              },
              "submittedAt": "2024-10-16T22:01:39Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Nps-_",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "joelriou"
              },
              "submittedAt": "2024-10-17T23:13:26Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Npur3",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "joelriou"
              },
              "submittedAt": "2024-10-17T23:16:57Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6NpwE4",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "joelriou"
              },
              "submittedAt": "2024-10-17T23:21:58Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Npwmo",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "joelriou"
              },
              "submittedAt": "2024-10-17T23:24:51Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6NpxK9",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "joelriou"
              },
              "submittedAt": "2024-10-17T23:26:47Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6Npya5",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "joelriou"
              },
              "submittedAt": "2024-10-17T23:29:54Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6NscXS",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "robin-carlier"
              },
              "submittedAt": "2024-10-18T07:29:50Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6NsdSC",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "robin-carlier"
              },
              "submittedAt": "2024-10-18T07:31:08Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6N9OUK",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "joelriou"
              },
              "submittedAt": "2024-10-21T10:44:26Z"
            },
            {
              "id": "PRR_kwDOFcwZ1c6N9Pnl",
              "body": "",
              "state": "COMMENTED",
              "author": {
                "login": "joelriou"
              },
              "submittedAt": "2024-10-21T10:47:09Z"
            }
          ]
        },
        "reviewThreads": {
          "nodes": [
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5rg1BV",
                    "body": "```suggestion\r\n@[reassoc (attr := simp)]\r\n```",
                    "createdAt": "2024-10-16T20:36:11Z",
                    "author": {
                      "login": "joelriou"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5rg1ay",
                    "body": "```suggestion\r\ndef preservesTerminalIso [h : PreservesLimit (Functor.empty.{0} C) F] : F.obj (ùüô_ C) ‚âÖ ùüô_ D :=\r\n```",
                    "createdAt": "2024-10-16T20:37:33Z",
                    "author": {
                      "login": "joelriou"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5rg1eQ",
                    "body": "```suggestion\r\nlemma preservesTerminalIso_hom [PreservesLimit (Functor.empty.{0} C) F] :\r\n```",
                    "createdAt": "2024-10-16T20:37:45Z",
                    "author": {
                      "login": "joelriou"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5rg1uA",
                    "body": "Why not `simp`?",
                    "createdAt": "2024-10-16T20:38:43Z",
                    "author": {
                      "login": "joelriou"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5rhIKc",
                    "body": "For no reason other than that I forgot.",
                    "createdAt": "2024-10-16T21:59:31Z",
                    "author": {
                      "login": "robin-carlier"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5rg24a",
                    "body": "In order to avoid the `@asIso _ _ _ _ _`, I would define as something like:\r\n```lean\r\n... :=\r\n  letI : IsIso (prodComparisonNatTrans F A) := sorry\r\n  asIso (prodComparisonNatTrans F A)\r\n```",
                    "createdAt": "2024-10-16T20:42:58Z",
                    "author": {
                      "login": "joelriou"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5rhIkG",
                    "body": "Going this way breaks the `@[simps]` so we need to add `_hom` lemmas by hand, and due to some repetitions with below code I figured it‚Äôs best to add those instances anyway, but I agree that it‚Äôs more satisfying this way.",
                    "createdAt": "2024-10-16T22:01:39Z",
                    "author": {
                      "login": "robin-carlier"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5rnuVk",
                    "body": "Parentheses are unnecessary, and the name `h` does not seem to be used: \r\n```suggestion\r\ninstance [‚àÄ A B, IsIso (prodComparison F A B)] : IsIso (prodComparisonBifunctorNatTrans F) := by\r\n  letI : ‚àÄ X, IsIso ((prodComparisonBifunctorNatTrans F).app X) :=\r\n    fun _ ‚Ü¶ by dsimp; apply NatIso.isIso_of_isIso_app\r\n  apply NatIso.isIso_of_isIso_app\r\n```",
                    "createdAt": "2024-10-17T23:13:26Z",
                    "author": {
                      "login": "joelriou"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5rnvGn",
                    "body": "You may also add a `prodComparison_id` lemma for the identity functor.",
                    "createdAt": "2024-10-17T23:16:57Z",
                    "author": {
                      "login": "joelriou"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5rpaDp",
                    "body": "Yes. For completeness I also added `_comp` and `_id` lemmas for the natural transforms as well. ",
                    "createdAt": "2024-10-18T07:31:08Z",
                    "author": {
                      "login": "robin-carlier"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5rnwEA",
                    "body": "I would think that the standard form of the assumptions that a functor \"preserves\" chosen finite products should be using `PreservesLimit...`. Then, for future applications, it may be better to define `prodComparisonNatIso ` and `prodComparisonBifunctorNatIso` under `PreservesLimit` assumption, rather than `IsIso` assumptions, do not you think? ",
                    "createdAt": "2024-10-17T23:21:58Z",
                    "author": {
                      "login": "joelriou"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5rnwbz",
                    "body": "(Otherwise, `prodComparisonIso` should not very much be a definition, but rather a step in the proof of `isIso_prodComparison_of_preservesLimit_pair`.)",
                    "createdAt": "2024-10-17T23:24:51Z",
                    "author": {
                      "login": "joelriou"
                    }
                  },
                  {
                    "id": "PRRC_kwDOFcwZ1c5rpZim",
                    "body": "I wanted to stay as close as possible to the API for usual products that uses `IsIso` for everything, but I guess it‚Äôs indeed better to have `PreservesLimits` assumptions instead.",
                    "createdAt": "2024-10-18T07:29:50Z",
                    "author": {
                      "login": "robin-carlier"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5rnwx-",
                    "body": "As this proof is very fast, I would suggest using this syntax:\r\n```suggestion\r\n    apply hom_ext <;> simp [‚Üê Functor.map_comp]\r\n```\r\nSame for `prodComparisonNatTrans`.",
                    "createdAt": "2024-10-17T23:26:46Z",
                    "author": {
                      "login": "joelriou"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5rnxVA",
                    "body": "This way, we would already generate suitable lemmas:\r\n```suggestion\r\n@[simps! hom inv]\r\n```",
                    "createdAt": "2024-10-17T23:29:54Z",
                    "author": {
                      "login": "joelriou"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5ry_X5",
                    "body": "```suggestion\r\ninstance isIso_prodComparison_of_preservesLimit_pair : IsIso (prodComparison F A B) := by\r\n```",
                    "createdAt": "2024-10-21T10:44:26Z",
                    "author": {
                      "login": "joelriou"
                    }
                  }
                ]
              }
            },
            {
              "comments": {
                "nodes": [
                  {
                    "id": "PRRC_kwDOFcwZ1c5rzALw",
                    "body": "```suggestion\r\nnoncomputable def prodComparisonBifunctorNatIso [‚àÄ A B, PreservesLimit (pair A B) F] :\r\n```",
                    "createdAt": "2024-10-21T10:47:09Z",
                    "author": {
                      "login": "joelriou"
                    }
                  }
                ]
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "nodes": []
        },
        "participants": {
          "nodes": [
            {
              "id": "MDQ6VXNlcjU3MTQyNjQ4",
              "login": "robin-carlier"
            },
            {
              "id": "MDQ6VXNlcjM3NzcyOTQ5",
              "login": "joelriou"
            }
          ]
        },
        "state": "OPEN",
        "statusCheckRollup": {
          "contexts": {
            "nodes": [
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHaKBApg",
                "name": "Add ready-to-merge label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11438464337/job/31820103846"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHaKJGhw",
                "name": "Add ready-to-merge label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11438507236/job/31820236423"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHaKA_EQ",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11438464333/job/31820103441"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHaKJGLw",
                "name": "Ping maintainers on Zulip",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11438507214/job/31820236335"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHaKA-0g",
                "name": "Fix style issues from lint",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11438464327/job/31820103378"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHaKJGQg",
                "name": "Fix style issues from lint",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11438507217/job/31820236354"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHYpGq8Q",
                "name": "label-and-report-new-contributor",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11399528318/job/31718484721"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHYpGrBQ",
                "name": "build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11399528313/job/31718484741"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHYpGmlA",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11399527863/job/31718483604"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHYpGmnQ",
                "name": "Cancel Previous Runs (CI)",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11399527862/job/31718483613"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHYpGrmw",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11399528315/job/31718484891"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHaKA-sw",
                "name": "Add delegated label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11438464337/job/31820103347"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHaKJIJA",
                "name": "Add delegated label",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11438507236/job/31820236836"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHYpGnSw",
                "name": "Lint style (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11399527863/job/31718483787"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHYpGneg",
                "name": "Lint style",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11399527862/job/31718483834"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHYpGtEg",
                "name": "Check all files imported",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11399528315/job/31718485266"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHYpGoTA",
                "name": "Build (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11399527863/job/31718484044"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHYpGoQw",
                "name": "Build",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11399527862/job/31718484035"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHYpGpOA",
                "name": "Post-CI job (fork)",
                "conclusion": "SKIPPED",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11399527863/job/31718484280"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHYpagPA",
                "name": "Post-CI job",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/actions/runs/11399527862/job/31718809660"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHYpG7Mg",
                "name": "New Contributor Check",
                "conclusion": "NEUTRAL",
                "status": "COMPLETED",
                "detailsUrl": "https://github.com/leanprover-community/mathlib4/runs/31718488882"
              },
              {
                "__typename": "CheckRun",
                "id": "CR_kwDOFcwZ1c8AAAAHYpHzoQ",
                "name": "Summary",
                "conclusion": "SUCCESS",
                "status": "COMPLETED",
                "detailsUrl": "https://dashboard.mergify.com/event-logs?pullRequestNumber=17701&login=leanprover-community&repository=mathlib4"
              }
            ]
          }
        },
        "title": "feat(CategoryTheory/ChosenFiniteProducts): `prodComparison` and `terminalComparison` for `ChosenFiniteProducts`",
        "updatedAt": "2024-10-21T10:47:09Z",
        "url": "https://github.com/leanprover-community/mathlib4/pull/17701",
        "timelineItems": {
          "nodes": [
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6PltFb",
              "createdAt": "2024-10-13T15:41:12Z",
              "body": "### PR summary [566b68ed93](https://github.com/leanprover-community/mathlib4/pull/17701/commits/566b68ed93ad6390fdc7a81ba4548d9e50eefb46)\n\n#### Import changes for modified files\n\nNo significant changes to the import graph\n\n\n<details><summary>Import changes for all files</summary>\n\n|Files|Import difference|\n|-|-|\n\n</details>\n\n---\n\n<details><summary>\n\n#### Declarations diff\n\n</summary>\n\n`+ instance (A : C) [‚àÄ B, IsIso (prodComparison F A B)] : IsIso (prodComparisonNatTrans F A) := by`\n`+ instance [‚àÄ A B, IsIso (prodComparison F A B)] : IsIso (prodComparisonBifunctorNatTrans F) := by`\n`+ inv_prodComparison_map_fst`\n`+ inv_prodComparison_map_snd`\n`+ isIso_prodComparison_of_preservesLimit_pair:`\n`+ isLimitChosenFiniteProductsOfPreservesLimits`\n`+ map_toUnit_comp_terminalCompariso`\n`+ preservesLimitEmptyOfIsIsoTerminalComparison`\n`+ preservesLimitPairOfIsIsoProdComparison`\n`+ preservesLimitsOfShapeDiscreteWalkingPairOfIsoProdComparison`\n`+ preservesTerminalIso`\n`+ preservesTerminalIso_hom`\n`+ prodComparison`\n`+ prodComparisonBifunctorNatTrans`\n`+ prodComparisonBifunctorNatTrans_comp`\n`+ prodComparisonBifunctorsNatIso`\n`+ prodComparisonIso`\n`+ prodComparisonIso_hom`\n`+ prodComparisonNatIso`\n`+ prodComparisonNatTrans`\n`+ prodComparisonNatTrans_comp`\n`+ prodComparisonNatTrans_id`\n`+ prodComparison_comp`\n`+ prodComparison_fst`\n`+ prodComparison_id`\n`+ prodComparison_inv_natural`\n`+ prodComparison_inv_natural_whiskerLeft`\n`+ prodComparison_inv_natural_whiskerRight`\n`+ prodComparison_natural`\n`+ prodComparison_natural_whiskerLeft`\n`+ prodComparison_natural_whiskerRight`\n`+ prodComparison_snd`\n`+ terminalComparison`\n`+ terminalComparison_isIso_of_preservesLimits`\n<details>\n  <summary>You can run this locally as follows</summary>\n\n\n```bash\n## summary with just the declaration names:\n./scripts/declarations_diff.sh <optional_commit>\n\n## more verbose report:\n./scripts/declarations_diff.sh long <optional_commit>\n```\n</details>\n\nThe doc-module for `script/declarations_diff.sh` contains some details about this script.\n\n</details>",
              "author": {
                "login": "github-actions"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6aBaRDzwAAAANnasx9",
              "createdAt": "2024-10-13T15:41:40Z",
              "label": {
                "id": "LA_kwDOFcwZ1c8AAAABViJTYQ",
                "name": "t-category-theory"
              }
            },
            {
              "__typename": "CrossReferencedEvent",
              "id": "CRE_kwDOFcwZ1c5c1Di_",
              "createdAt": "2024-10-13T16:09:06Z",
              "source": {
                "id": "PR_kwDOFcwZ1c5-Nbjz",
                "title": "feat(CategoryTheory/ChosenFiniteProducts): Monoidal functors between categories with chosen products",
                "url": "https://github.com/leanprover-community/mathlib4/pull/17613"
              }
            },
            {
              "__typename": "IssueComment",
              "id": "IC_kwDOFcwZ1c6PteCG",
              "createdAt": "2024-10-14T12:15:55Z",
              "body": "I added a few extra naturality lemmas, as I noticed that in practice one sometimes uses the naturality of the prodComparison map with maps of the form `A ‚óÅ g` or `f ‚ñ∑ B`, and that it would be useful to also state things in terms of them as well.",
              "author": {
                "login": "robin-carlier"
              }
            },
            {
              "__typename": "ReferencedEvent"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6NeqsG",
              "createdAt": "2024-10-16T20:36:11Z",
              "body": "",
              "author": {
                "login": "joelriou"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Nerwk",
              "createdAt": "2024-10-16T20:37:32Z",
              "body": "",
              "author": {
                "login": "joelriou"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Ner8S",
              "createdAt": "2024-10-16T20:37:45Z",
              "body": "",
              "author": {
                "login": "joelriou"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Neskp",
              "createdAt": "2024-10-16T20:38:43Z",
              "body": "",
              "author": {
                "login": "joelriou"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6NevJa",
              "createdAt": "2024-10-16T20:42:58Z",
              "body": "",
              "author": {
                "login": "joelriou"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6aBaRDzwAAAANriz7b",
              "createdAt": "2024-10-16T20:45:14Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6aBaRDzwAAAANrmJE5",
              "createdAt": "2024-10-16T22:01:58Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Nps-_",
              "createdAt": "2024-10-17T23:13:25Z",
              "body": "",
              "author": {
                "login": "joelriou"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Npur3",
              "createdAt": "2024-10-17T23:16:57Z",
              "body": "",
              "author": {
                "login": "joelriou"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6NpwE4",
              "createdAt": "2024-10-17T23:21:58Z",
              "body": "",
              "author": {
                "login": "joelriou"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6NpxK9",
              "createdAt": "2024-10-17T23:26:46Z",
              "body": "",
              "author": {
                "login": "joelriou"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6Npya5",
              "createdAt": "2024-10-17T23:29:54Z",
              "body": "",
              "author": {
                "login": "joelriou"
              }
            },
            {
              "__typename": "LabeledEvent",
              "id": "LE_lADOFcwZ1c6aBaRDzwAAAANsoceU",
              "createdAt": "2024-10-17T23:30:06Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "HeadRefForcePushedEvent",
              "id": "HRFPE_lADOFcwZ1c6aBaRDzwAAAANs_UcZ",
              "createdAt": "2024-10-18T07:25:24Z"
            },
            {
              "__typename": "UnlabeledEvent",
              "id": "UNLE_lADOFcwZ1c6aBaRDzwAAAANs_moo",
              "createdAt": "2024-10-18T07:31:27Z",
              "label": {
                "id": "LA_kwDOFcwZ1c7P265b",
                "name": "awaiting-author"
              }
            },
            {
              "__typename": "PullRequestCommit"
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6N9OUK",
              "createdAt": "2024-10-21T10:44:26Z",
              "body": "",
              "author": {
                "login": "joelriou"
              }
            },
            {
              "__typename": "PullRequestReview",
              "id": "PRR_kwDOFcwZ1c6N9Pnl",
              "createdAt": "2024-10-21T10:47:09Z",
              "body": "",
              "author": {
                "login": "joelriou"
              }
            }
          ]
        }
      }
    }
  }
}
